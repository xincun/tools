; Tento soubor obsahuje makra programu PSPad pro PHP
;
;; PSPad code template for PHP
;; Author: Krystof Slaby
;; E-mail: krystof.slaby@seznam.cz
;; Update: $LastChangedDate: 2003-12-08 00:06:21 +0100 (Mon, 08 Dec 2003) $
;; Revision: $LastChangedRevision: 54 $
;
; User-defined templates patri na konec souboru.
;
; VERSION 1
; autor: Frantisek Blaha  F.Blaha@WorldOnline.cz
; podklady ziskany z puvodniho PHP manualu vydaneho Official PHP Documentation Group dne 2.9.2001
; posledni revize: 23.9.2001
;
; VERSION 1.1
; modifikace: Krystof Slaby (krystof.slaby@seznam.cz)
; pridano: control structures, reserved words, declarations
; datum modifikace: 26.1.2003
; TODO: refine due to last php manual version
;
; VERSION 1.2
; Karel Pavelka  webjob@seznam.cz
; datum modifikace: 11.5.2003
; dalsi preklad a doplneni funkci pro MySQL z manualu PHP
;
; VERSION 1.3
; modifikace: Krystof Slaby (krystof.slaby@seznam.cz)
; datum: 2003-06-30
; popis:
;     seznam funkci podle posledniho php manualu (generuje se z xml verze php reference manual)
;     PEAR coding standards compliant
;     u funkci odstraneny stredniky
;
; VERSION 1.4
; modifikace: Krystof Slaby (krystof.slaby@seznam.cz)
; datum: 2003-11-24
; popis:
;     seznam funkci podle posledniho php manualu
;     nektere control structures jsou nyni interaktivni
;
;
[Macro definition]
%name%=@C name:,,,,
%description%=@C description:,,,,
%param1%=@C parameter:,,,,
%param2%=@C parameter:,", ",,,
%param3%=@C parameter:,", ",,,
%param4%=@C parameter:,", ",,,
%param5%=@C parameter:,", ",,,
%extends%=@C extends:,,,,
%type%=@C type:,,,mixed;boolean;number;integer;float;string;array;object;resource;NULL;callback;void,
%return%=@C returns:,,void,mixed;boolean;number;integer;float;string;array;object;resource;NULL;callback;void,
%type1%=@C type:,,,;boolean;integer;float;string;array;object;resource;callback,
%type2%=@C type:,,,;boolean;integer;float;string;array;object;resource;callback,
%type3%=@C type:,,,;boolean;integer;float;string;array;object;resource;callback,
%type4%=@C type:,,,;boolean;integer;float;string;array;object;resource;callback,
%type5%=@C type:,,,;boolean;integer;float;string;array;object;resource;callback,
%sourcefile%=@O file:,,,PHP files (*.php;*.inc)|*.php;*.inc,'
%package%=@C package:,,,,
%access%=@C access:,,public,public;private,
%static%=@K static:,@static
%abstract%=@K abstract:,@abstract
%final%=@K final:,@final
;
[&nbsp; |G nedìlitelná mezera]*Shift+Ctrl+Space
&nbsp;
;
; -----------------------------------------------------------------------------
; comments
; -----------------------------------------------------------------------------
[comment | komentáø /* ... */ ]
/*
	§|
*/
;
;
; -----------------------------------------------------------------------------
; (X)HTML text entities
; -----------------------------------------------------------------------------
[&nbsp; | nedìlitelná mezera]*Ctrl+Shift+Space
&nbsp;
[&amp; | ampersand]
&amp;
[&reg; | registered]
&reg;
[&copy; | copyright]
&copy;
[&gt; | znak vìtší než ">"]
&gt;
[&lt; | znak manší než "<"]
&lt;
[&quot; | uvozovky]
&quot;
[&apos; | apostrof]
&apos;
[br | linebreak]*Ctrl+Enter
<br />
;
;
; -----------------------------------------------------------------------------
; control structures
; -----------------------------------------------------------------------------
[php | php escaping PI <?php ... ?>]
<?php
	§|
?>
[if | if statement]
if (|) {
	§
}
[elseif | elseif statement]
elseif (|) {
	§
}
[else | else statement]
else {
	§|
}
[while | while statement]
while (|) {
	§
}
[dowhile | do .. while statement]
do {
	§|
} while ();
[for | for statement]
for (|; ; ) {
	§
}
[foreach | foreach statement]
foreach (| as $key=>$value) {
	§
}
[break | break statement]
break;
[continue | continue statement]
continue;
[switch | switch statement]
switch (|) {
default:
	§
	break;
}
[case | switch case statement]
case |:
	break;
[declare | declare statement]
declare (ticks=|) {
	§
}
[return | return statement]
return |;
[require | require statement]
require %sourcefile%|;
[include | include statement]
include %sourcefile%|;
[require_once | require_once statement]
require_once %sourcefile%|;
[include_once | include_once statement]
include_once %sourcefile%|;
[function | function declaration]*Ctrl+Alt+Shift+F
function %name%(%param1%%param2%%param3%%param4%%param5%)
{ // BEGIN function %name%
	§|
} // END function %name%
[class | class declaration]
class %name%
{ // BEGIN class %name%
	// variables
	var $|;

	// constructor
	function %name%(%param1%%param2%%param3%%param4%%param5%)
	{ // BEGIN constructor
		§
	} // END constructor
} // END class %name%

[class_extends | extending class declaration]*Ctrl+Alt+Shift+C
class %name% extends %extends%
{
	// variables
	var $|;

	// constructor
	function %name%(%param1%%param2%%param3%%param4%%param5%)
	{ // BEGIN constructor
		§
		return $this->%extends%(%param1%%param2%%param3%%param4%%param5%);
	} // END constructor
} // END class %name%

[method | method declaration]*Ctrl+Alt+Shift+M
function %name%(%param1%%param2%%param3%%param4%%param5%)
{ // BEGIN method %name%
	§|
} // END method %name%
;
;
; -----------------------------------------------------------------------------
; PEAR compliant declarations
; -----------------------------------------------------------------------------
[class_PEAR | class declaration PEAR compliant]
// =============================================================================
/**
 * Singleline description of class %name%.
 *
 * Multi line
 * description
 * of class %name%.
 *
 * @author %FullName% <%Email%>
 * @package %package%
 * @version 0.1
 * %static% %abstract%
 */
class %name% extends %extends%
// =============================================================================
{ // BEGIN class %name%

	|

	// -------------------------------------------------------------------------
	/**
	 * Constructor
	 *
	 * @param %type1% %param1%
	 * @param %type2% %param2%
	 * @param %type3% %param3%
	 * @param %type4% %param4%
	 * @param %type5% %param5%
	 * @return object %name% new %name% object
	 */
	function %name%(%param1%%param2%%param3%%param4%%param5%)
	// -------------------------------------------------------------------------
	{ // BEGIN constructor
		return $this->%extends%(%param1%%param2%%param3%%param4%%param5%);
	} // END constructor

} // END class

[method_PEAR | method declaration PEAR compliant]
// -------------------------------------------------------------------------
/**
 * Single line description of method %name%.
 *
 * Multi line
 * description
 * of method %name%.
 *
 * @param %type1% %param1%
 * @param %type2% %param2%
 * @param %type3% %param3%
 * @param %type4% %param4%
 * @param %type5% %param5%
 * @return %return%
 * %static% %abstract% %final%
 */
function %name%(%param1%%param2%%param3%%param4%%param5%)
// -------------------------------------------------------------------------
{ // BEGIN method %name%
	|
} // END method %name%

[function_PEAR | function declaration PEAR compliant]
// -------------------------------------------------------------------------
/**
 * Single line description of function %name%.
 *
 * Multi line
 * description
 * of function %name%.
 *
 * @param %type1% %param1%
 * @param %type2% %param2%
 * @param %type3% %param3%
 * @param %type4% %param4%
 * @param %type5% %param5%
 * @return %return%
 */
function %name%(%param1%%param2%%param3%%param4%%param5%)
// -------------------------------------------------------------------------
{ // BEGIN function %name%
	|
} // END function %name%

[variable_PEAR | variable declaration PEAR compliant]
/**
 * variable %name%
 * @var %type% %description%|
 */
var $%name%;
;
;
; -----------------------------------------------------------------------------
; miscelanous functions and pseudo-functions
; -----------------------------------------------------------------------------
[connection_aborted | Returns TRUE if client disconnected]
connection_aborted()|
[connection_status | Returns connection status bitfield]
connection_status()|
[constant | Returns the value of a constant]
constant(|string name)
[define | Defines a named constant]
define(|string name, mixed value [, bool case_insensitive])
[defined | Checks whether a given named constant exists]
defined(|string name)
[die | Output a message and terminate the current script]
die(|)
[eval | Evaluate a string as PHP code]
eval(|string code_str)
[exit | Output a message and terminate the current script]
exit(|int/string status)
[get_browser | Tells what the user's browser is capable of]
get_browser(|[string user_agent])
[highlight_file | Syntax highlighting of a file]
highlight_file(|string filename [, bool return])
[highlight_string | Syntax highlighting of a string]
highlight_string(|string str [, bool return])
[ignore_user_abort | Set whether a client disconnect should abort script execution]
ignore_user_abort(|[int setting])
[pack | Pack data into binary string]
pack(|string format [, mixed args])
[show_source | Syntax highlighting of a file]
show_source(|string filename [, bool return])
[sleep | Delay execution]
sleep(|int seconds)
[uniqid | Generate a unique ID]
uniqid(|string prefix [, bool lcg])
[unpack | Unpack data from binary string]
unpack(|string format, string data)
[usleep | Delay execution in microseconds]
usleep(|int micro_seconds)
[echo | Outputs all arguments]*Ctrl+Alt+Shift+E
echo §|;
[print | Outputs argument]*Ctrl+Alt+Shift+P
print §|;
;
;
; -----------------------------------------------------------------------------
; functions
; -----------------------------------------------------------------------------
;; -----------------------------------------------------------------------------
; Apache - Apache-specific Functions
; -----------------------------------------------------------------------------
[apache_child_terminate | Terminate apache process after this request, returns bool]
apache_child_terminate()|
[apache_get_version | Fetch Apache version, returns string]
apache_get_version()|
[apache_lookup_uri | Perform a partial request for the specified URI and return all info about it, returns object]
apache_lookup_uri(|string filename)
[apache_note | Get and set apache request notes, returns string]
apache_note(|string note_name, [string note_value])
[apache_request_headers | Fetch all HTTP request headers, returns array]
apache_request_headers()|
[apache_response_headers | Fetch all HTTP response headers, returns array]
apache_response_headers()|
[apache_setenv | Set an Apache subprocess_env variable, returns int]
apache_setenv(|string variable, string value, [bool walk_to_top])
[ascii2ebcdic | Translate string from ASCII to EBCDIC, returns int]
ascii2ebcdic(|string ascii_str)
[ebcdic2ascii | Translate string from EBCDIC to ASCII, returns int]
ebcdic2ascii(|string ebcdic_str)
[getallheaders | Fetch all HTTP request headers, returns array]
getallheaders()|
[virtual | Perform an Apache sub-request, returns int]
virtual(|string filename)
; -----------------------------------------------------------------------------
; Arrays - Array Functions
; -----------------------------------------------------------------------------
[array_change_key_case | Returns an array with all string keys lowercased or uppercased, returns array]
array_change_key_case(|array input, [int case])
[array_chunk | Split an array into chunks, returns array]
array_chunk(|array input, int size, [bool preserve_keys])
[array_combine | Creates an array by using one array for keys and another for its values, returns array]
array_combine(|array keys, array values)
[array_count_values | Counts all the values of an array, returns array]
array_count_values(|array input)
[array_diff_assoc | Computes the difference of arrays with additional index check, returns array]
array_diff_assoc(|array array1, array array2, [array ...])
[array_diff_uassoc | Computes the difference of arrays with additional index check which is performed by a user supplied callback function., returns array]
array_diff_assoc(|array array1, array array2, [array ...], callback key_compare_func)
[array_diff | Computes the difference of arrays, returns array]
array_diff(|array array1, array array2, [array ...])
[array_fill | Fill an array with values, returns array]
array_fill(|int start_index, int num, mixed value)
[array_filter | Filters elements of an array using a callback function, returns array]
array_filter(|array input, [callback callback])
[array_flip | Exchanges all keys with their associated values in an array, returns array]
array_flip(|array trans)
[array_intersect_assoc | Computes the intersection of arrays with additional index check, returns array]
array_intersect_assoc(|array array1, array array2, [array ...])
[array_intersect | Computes the intersection of arrays, returns array]
array_intersect(|array array1, array array2, [array ...])
[array_key_exists | Checks if the given key or index exists in the array, returns bool]
array_key_exists(|mixed key, array search)
[array_keys | Return all the keys of an array, returns array]
array_keys(|array input, [mixed search_value])
[array_map | Applies the callback to the elements of the given arrays, returns array]
array_map(|mixed callback, array arr1, [array ...])
[array_merge_recursive | Merge two or more arrays recursively, returns array]
array_merge_recursive(|array array1, array array2, [array ...])
[array_merge | Merge two or more arrays, returns array]
array_merge(|array array1, array array2, [array ...])
[array_multisort | Sort multiple or multi-dimensional arrays, returns bool]
array_multisort(|array ar1, [mixed arg], [mixed ...], [array ...])
[array_pad | Pad array to the specified length with a value, returns array]
array_pad(|array input, int pad_size, mixed pad_value)
[array_pop | Pop the element off the end of array, returns mixed]
array_pop(|array array)
[array_push | Push one or more elements onto the end of array, returns int]
array_push(|array array, mixed var, [mixed ...])
[array_rand | Pick one or more random entries out of an array, returns mixed]
array_rand(|array input, [int num_req])
[array_reduce | Iteratively reduce the array to a single value using a callback function, returns mixed]
array_reduce(|array input, callback function, [int initial])
[array_reverse | Return an array with elements in reverse order, returns array]
array_reverse(|array array, [bool preserve_keys])
[array_search | Searches the array for a given value and returns the corresponding key if successful, returns mixed]
array_search(|mixed needle, array haystack, [bool strict])
[array_shift | Shift an element off the beginning of array, returns mixed]
array_shift(|array array)
[array_slice | Extract a slice of the array, returns array]
array_slice(|array array, int offset, [int length])
[array_splice | Remove a portion of the array and replace it with something else, returns array]
array_splice(|array input, int offset, [int length], [array replacement])
[array_sum | Calculate the sum of values in an array., returns mixed]
array_sum(|array array)
[array_udiff_assoc | Computes the difference of arrays with additional index check. The data is compared by using a callback function., returns array]
array_udiff_assoc(|array array1, array array2, [array ...], callback data_compare_func)
[array_udiff_uassoc | Computes the difference of arrays with additional index check. The data is compared by using a callback function. The index check is done by a callback function also, returns array]
array_udiff_uassoc(|array array1, array array2, [array ...], callback data_compare_func, callback key_compare_func)
[array_udiff | Computes the difference of arrays by using callback function for data comparison., returns array]
array_udiff(|array array1, array array2, [array ...], callback data_compare_func)
[array_unique | Removes duplicate values from an array, returns array]
array_unique(|array array)
[array_unshift | Prepend one or more elements to the beginning of array, returns int]
array_unshift(|array array, mixed var, [mixed ...])
[array_values | Return all the values of an array, returns array]
array_values(|array input)
[array_walk | Apply a user function to every member of an array, returns bool]
array_walk(|array array, callback function, [mixed userdata])
[array | Create an array, returns array]
array(|[mixed ...])
[arsort | Sort an array in reverse order and maintain index association, returns void]
arsort(|array array, [int sort_flags])
[asort | Sort an array and maintain index association, returns void]
asort(|array array, [int sort_flags])
[compact | Create array containing variables and their values, returns array]
compact(|mixed varname, [mixed ...])
[count | Count elements in a variable, returns int]
count(|mixed var, [int mode])
[current | Return the current element in an array, returns mixed]
current(|array array)
[each | Return the current key and value pair from an array and advance the array cursor, returns array]
each(|array array)
[end | Set the internal pointer of an array to its last element, returns mixed]
end(|array array)
[extract | Import variables into the current symbol table from an array, returns int]
extract(|array var_array, [int extract_type], [string prefix])
[in_array | Checks if a value exists in an array, returns bool]
in_array(|mixed needle, array haystack, [bool strict])
[key | Fetch a key from an associative array, returns mixed]
key(|array array)
[krsort | Sort an array by key in reverse order, returns int]
krsort(|array array, [int sort_flags])
[ksort | Sort an array by key, returns int]
ksort(|array array, [int sort_flags])
[list | Assign variables as if they were an array, returns void]
list(|mixed ...)
[natcasesort | Sort an array using a case insensitive "natural order" algorithm, returns void]
natcasesort(|array array)
[natsort | Sort an array using a "natural order" algorithm, returns void]
natsort(|array array)
[next | Advance the internal array pointer of an array, returns mixed]
next(|array array)
[pos | Get the current element from an array, returns mixed]
pos(|array array)
[prev | Rewind the internal array pointer, returns mixed]
prev(|array array)
[range | Create an array containing a range of elements, returns array]
range(|int low, int high, [int step])
[reset | Set the internal pointer of an array to its first element, returns mixed]
reset(|array array)
[rsort | Sort an array in reverse order, returns void]
rsort(|array array, [int sort_flags])
[shuffle | Shuffle an array, returns void]
shuffle(|array array)
[sizeof | Alias of count]
sizeof(|)
[sort | Sort an array, returns void]
sort(|array array, [int sort_flags])
[uasort | Sort an array with a user-defined comparison function and maintain index association, returns void]
uasort(|array array, callback cmp_function)
[uksort | Sort an array by keys using a user-defined comparison function, returns void]
uksort(|array array, callback cmp_function)
[usort | Sort an array by values using a user-defined comparison function, returns void]
usort(|array array, callback cmp_function)
; -----------------------------------------------------------------------------
; Aspell - Aspell functions [deprecated]
; -----------------------------------------------------------------------------
[aspell_check_raw | Check a word without changing its case or trying to trim it [deprecated], returns bool]
aspell_check_raw(|int dictionary_link, string word)
[aspell_check | Check a word [deprecated], returns bool]
aspell_check(|int dictionary_link, string word)
[aspell_new | Load a new dictionary [deprecated], returns int]
aspell_new(|string master, [string personal])
[aspell_suggest | Suggest spellings of a word [deprecated], returns array]
aspell_suggest(|int dictionary_link, string word)
; -----------------------------------------------------------------------------
; BC math - BCMath Arbitrary Precision Mathematics Functions
; -----------------------------------------------------------------------------
[bcadd | Add two arbitrary precision numbers, returns string]
bcadd(|string left_operand, string right_operand, [int scale])
[bccomp | Compare two arbitrary precision numbers, returns int]
bccomp(|string left_operand, string right_operand, [int scale])
[bcdiv | Divide two arbitrary precision numbers, returns string]
bcdiv(|string left_operand, string right_operand, [int scale])
[bcmod | Get modulus of an arbitrary precision number, returns string]
bcmod(|string left_operand, string modulus)
[bcmul | Multiply two arbitrary precision number, returns string]
bcmul(|string left_operand, string right_operand, [int scale])
[bcpow | Raise an arbitrary precision number to another, returns string]
bcpow(|string x, int y, [int scale])
[bcpowmod | Raise an arbitrary precision number to another, reduced by a specified modulus., returns string]
bcpowmod(|string x, string y, string modulus, [int scale])
[bcscale | Set default scale parameter for all bc math functions, returns string]
bcscale(|int scale)
[bcsqrt | Get the square root of an arbitrary precision number, returns string]
bcsqrt(|string operand, [int scale])
[bcsub | Subtract one arbitrary precision number from another, returns string]
bcsub(|string left_operand, string right_operand, [int scale])
; -----------------------------------------------------------------------------
; Bzip2 - Bzip2 Compression Functions
; -----------------------------------------------------------------------------
[bzclose | Close a bzip2 file pointer, returns int]
bzclose(|resource bz)
[bzcompress | Compress a string into bzip2 encoded data, returns string]
bzcompress(|string source, [int blocksize], [int workfactor])
[bzdecompress | Decompresses bzip2 encoded data, returns string]
bzdecompress(|string source, [int small])
[bzerrno | Returns a bzip2 error number, returns int]
bzerrno(|resource bz)
[bzerror | Returns the bzip2 error number and error string in an array, returns array]
bzerror(|resource bz)
[bzerrstr | Returns a bzip2 error string, returns string]
bzerrstr(|resource bz)
[bzflush | Force a write of all buffered data, returns int]
bzflush(|resource bz)
[bzopen | Open a bzip2 compressed file, returns resource]
bzopen(|string filename, string mode)
[bzread | Binary safe bzip2 file read, returns string]
bzread(|resource bz, [int length])
[bzwrite | Binary safe bzip2 file write, returns int]
bzwrite(|resource bz, string data, [int length])
; -----------------------------------------------------------------------------
; Calendar - Calendar functions
; -----------------------------------------------------------------------------
[cal_days_in_month | Return the number of days in a month for a given year and calendar, returns int]
cal_days_in_month(|int calendar, int month, int year)
[cal_from_jd | Converts from Julian Day Count to a supported calendar, returns array]
cal_from_jd(|int jd, int calendar)
[cal_info | Returns information about a particular calendar, returns array]
cal_info(|[int calendar])
[cal_to_jd | Converts from a supported calendar to Julian Day Count, returns int]
cal_to_jd(|int calendar, int month, int day, int year)
[easter_date | Get UNIX timestamp for midnight on Easter of a given year, returns int]
easter_date(|[int year])
[easter_days | Get number of days after March 21 on which Easter falls for a given year, returns int]
easter_days(|[int year], [int method])
[FrenchToJD | Converts a date from the French Republican Calendar to a Julian Day Count, returns int]
frenchtojd(|int month, int day, int year)
[GregorianToJD | Converts a Gregorian date to Julian Day Count, returns int]
gregoriantojd(|int month, int day, int year)
[JDDayOfWeek | Returns the day of the week, returns mixed]
jddayofweek(|int julianday, int mode)
[JDMonthName | Returns a month name, returns string]
jdmonthname(|int julianday, int mode)
[JDToFrench | Converts a Julian Day Count to the French Republican Calendar, returns string]
jdtofrench(|int juliandaycount)
[JDToGregorian | Converts Julian Day Count to Gregorian date, returns string]
jdtogregorian(|int julianday)
[jdtojewish | Converts a julian day count to a jewish calendar date, returns string]
jdtojewish(|int juliandaycount, [bool hebrew], [int fl])
[JDToJulian | Converts a Julian Day Count to a Julian Calendar Date, returns string]
jdtojulian(|int julianday)
[jdtounix | Convert Julian Day to UNIX timestamp, returns int]
jdtounix(|int jday)
[JewishToJD | Converts a date in the Jewish Calendar to Julian Day Count, returns int]
jewishtojd(|int month, int day, int year)
[JulianToJD | Converts a Julian Calendar date to Julian Day Count, returns int]
juliantojd(|int month, int day, int year)
[unixtojd | Convert UNIX timestamp to Julian Day, returns int]
unixtojd(|[int timestamp])
; -----------------------------------------------------------------------------
; CCVS - CCVS API Functions
; -----------------------------------------------------------------------------
[ccvs_add | Add data to a transaction, returns string]
ccvs_add(|string session, string invoice, string argtype, string argval)
[ccvs_auth | Perform credit authorization test on a transaction, returns string]
ccvs_auth(|string session, string invoice)
[ccvs_command | Performs a command which is peculiar to a single protocol, and thus is not available in the general CCVS API, returns string]
ccvs_command(|string session, string type, string argval)
[ccvs_count | Find out how many transactions of a given type are stored in the system, returns int]
ccvs_count(|string session, string type)
[ccvs_delete | Delete a transaction, returns string]
ccvs_delete(|string session, string invoice)
[ccvs_done | Terminate CCVS engine and do cleanup work, returns string]
ccvs_done(|string sess)
[ccvs_init | Initialize CCVS for use, returns string]
ccvs_init(|string name)
[ccvs_lookup | Look up an item of a particular type in the database #, returns string]
ccvs_lookup(|string session, string invoice, int inum)
[ccvs_new | Create a new, blank transaction, returns string]
ccvs_new(|string session, string invoice)
[ccvs_report | Return the status of the background communication process, returns string]
ccvs_report(|string session, string type)
[ccvs_return | Transfer funds from the merchant to the credit card holder, returns string]
ccvs_return(|string session, string invoice)
[ccvs_reverse | Perform a full reversal on an already-processed authorization, returns string]
ccvs_reverse(|string session, string invoice)
[ccvs_sale | Transfer funds from the credit card holder to the merchant, returns string]
ccvs_sale(|string session, string invoice)
[ccvs_status | Check the status of an invoice, returns string]
ccvs_status(|string session, string invoice)
[ccvs_textvalue | Get text return value for previous function call, returns string]
ccvs_textvalue(|string session)
[ccvs_void | Perform a full reversal on a completed transaction, returns string]
ccvs_void(|string session, string invoice)
; -----------------------------------------------------------------------------
; COM - COM support functions for Windows
; -----------------------------------------------------------------------------
[COM | COM class, returns string]
COM::COM(|string module_name, [string server_name], [int codepage])
[VARIANT | VARIANT class, returns string]
VARIANT::VARIANT(|[mixed value], [int type], [int codepage])
[com_addref | Increases the components reference counter., returns void]
com_addref()|
[com_get | Gets the value of a COM Component's property, returns mixed]
com_get(|resource com_object, string property)
[com_invoke | Calls a COM component's method., returns mixed]
com_invoke(|resource com_object, string function_name, [mixed function parameters, ...])
[com_isenum | Grabs an IEnumVariant, returns void]
com_isenum(|object com_module)
[com_load_typelib | Loads a Typelib, returns void]
com_load_typelib(|string typelib_name, [int case_insensitive])
[com_load | Creates a new reference to a COM component, returns string]
com_load(|string module_name, [string server_name], [int codepage])
[com_propget | Alias of com_get]
com_propget(|)
[com_propput | Alias of com_set]
com_propput(|)
[com_propset | Alias of com_set]
com_propset(|)
[com_release | Decreases the components reference counter., returns void]
com_release()|
[com_set | Assigns a value to a COM component's property, returns void]
com_set(|resource com_object, string property, mixed value)
; -----------------------------------------------------------------------------
; Classes/Objects - Class/Object Functions
; -----------------------------------------------------------------------------
[call_user_method_array | Call a user method given with an array of parameters [deprecated], returns mixed]
call_user_method_array(|string method_name, object obj, [array paramarr])
[call_user_method | Call a user method on an specific object [deprecated], returns mixed]
call_user_method(|string method_name, object obj, [mixed parameter], [mixed ...])
[class_exists | Checks if the class has been defined, returns bool]
class_exists(|string class_name)
[get_class_methods | Returns an array of class methods' names, returns array]
get_class_methods(|mixed class_name)
[get_class_vars | Returns an array of default properties of the class, returns array]
get_class_vars(|string class_name)
[get_class | Returns the name of the class of an object, returns string]
get_class(|object obj)
[get_declared_classes | Returns an array with the name of the defined classes, returns array]
get_declared_classes()|
[get_object_vars | Returns an associative array of object properties, returns array]
get_object_vars(|object obj)
[get_parent_class | Retrieves the parent class name for object or class, returns string]
get_parent_class(|mixed obj)
[is_a | Returns TRUE if the object is of this class or has this class as one of its parents, returns bool]
is_a(|object object, string class_name)
[is_subclass_of | Returns TRUE if the object has this class as one of its parents, returns bool]
is_subclass_of(|object object, string class_name)
[method_exists | Checks if the class method exists, returns bool]
method_exists(|object object, string method_name)
; -----------------------------------------------------------------------------
; ClibPDF - ClibPDF functions
; -----------------------------------------------------------------------------
[cpdf_add_annotation | Adds annotation, returns bool]
cpdf_add_annotation(|int pdf_document, float llx, float lly, float urx, float ury, string title, string content, [int mode])
[cpdf_add_outline | Adds bookmark for current page, returns int]
cpdf_add_outline(|int pdf_document, int lastoutline, int sublevel, int open, int pagenr, string text)
[cpdf_arc | Draws an arc, returns bool]
cpdf_arc(|int pdf_document, float x-coor, float y-coor, float radius, float start, float end, [int mode])
[cpdf_begin_text | Starts text section, returns bool]
cpdf_begin_text(|int pdf_document)
[cpdf_circle | Draw a circle, returns bool]
cpdf_circle(|int pdf_document, float x-coor, float y-coor, float radius, [int mode])
[cpdf_clip | Clips to current path, returns bool]
cpdf_clip(|int pdf_document)
[cpdf_close | Closes the pdf document, returns bool]
cpdf_close(|int pdf_document)
[cpdf_closepath_fill_stroke | Close, fill and stroke current path, returns bool]
cpdf_closepath_fill_stroke(|int pdf_document)
[cpdf_closepath_stroke | Close path and draw line along path, returns bool]
cpdf_closepath_stroke(|int pdf_document)
[cpdf_closepath | Close path, returns bool]
cpdf_closepath(|int pdf_document)
[cpdf_continue_text | Output text in next line, returns bool]
cpdf_continue_text(|int pdf_document, string text)
[cpdf_curveto | Draws a curve, returns bool]
cpdf_curveto(|int pdf_document, float x1, float y1, float x2, float y2, float x3, float y3, [int mode])
[cpdf_end_text | Ends text section, returns bool]
cpdf_end_text(|int pdf_document)
[cpdf_fill_stroke | Fill and stroke current path, returns bool]
cpdf_fill_stroke(|int pdf_document)
[cpdf_fill | Fill current path, returns bool]
cpdf_fill(|int pdf_document)
[cpdf_finalize_page | Ends page, returns bool]
cpdf_finalize_page(|int pdf_document, int page_number)
[cpdf_finalize | Ends document, returns bool]
cpdf_finalize(|int pdf_document)
[cpdf_global_set_document_limits | Sets document limits for any pdf document, returns bool]
cpdf_global_set_document_limits(|int maxpages, int maxfonts, int maximages, int maxannotations, int maxobjects)
[cpdf_import_jpeg | Opens a JPEG image, returns int]
cpdf_import_jpeg(|int pdf_document, string file_name, float x-coor, float y-coor, float angle, float width, float height, float x-scale, float y-scale, int gsave, [int mode])
[cpdf_lineto | Draws a line, returns bool]
cpdf_lineto(|int pdf_document, float x-coor, float y-coor, [int mode])
[cpdf_moveto | Sets current point, returns bool]
cpdf_moveto(|int pdf_document, float x-coor, float y-coor, [int mode])
[cpdf_newpath | Starts a new path, returns bool]
cpdf_newpath(|int pdf_document)
[cpdf_open | Opens a new pdf document, returns int]
cpdf_open(|int compression, [string filename])
[cpdf_output_buffer | Outputs the pdf document in memory buffer, returns bool]
cpdf_output_buffer(|int pdf_document)
[cpdf_page_init | Starts new page, returns bool]
cpdf_page_init(|int pdf_document, int page_number, int orientation, float height, float width, [float unit])
[cpdf_place_inline_image | Places an image on the page, returns bool]
cpdf_place_inline_image(|int pdf_document, int image, float x-coor, float y-coor, float angle, float width, float height, [int mode])
[cpdf_rect | Draw a rectangle, returns bool]
cpdf_rect(|int pdf_document, float x-coor, float y-coor, float width, float height, [int mode])
[cpdf_restore | Restores formerly saved environment, returns bool]
cpdf_restore(|int pdf_document)
[cpdf_rlineto | Draws a line, returns bool]
cpdf_rlineto(|int pdf_document, float x-coor, float y-coor, [int mode])
[cpdf_rmoveto | Sets current point, returns bool]
cpdf_rmoveto(|int pdf_document, float x-coor, float y-coor, [int mode])
[cpdf_rotate_text | Sets text rotation angle, returns bool]
cpdf_rotate_text(|int pdfdoc, float angle)
[cpdf_rotate | Sets rotation, returns bool]
cpdf_rotate(|int pdf_document, float angle)
[cpdf_save_to_file | Writes the pdf document into a file, returns bool]
cpdf_save_to_file(|int pdf_document, string filename)
[cpdf_save | Saves current environment, returns bool]
cpdf_save(|int pdf_document)
[cpdf_scale | Sets scaling, returns bool]
cpdf_scale(|int pdf_document, float x-scale, float y-scale)
[cpdf_set_action_url | Sets hyperlink, returns bool]
cpdf_set_action_url(|int pdfdoc, float xll, float yll, float xur, float xur, string url, [int mode])
[cpdf_set_char_spacing | Sets character spacing, returns bool]
cpdf_set_char_spacing(|int pdf_document, float space)
[cpdf_set_creator | Sets the creator field in the pdf document, returns bool]
cpdf_set_creator(|string creator)
[cpdf_set_current_page | Sets current page, returns bool]
cpdf_set_current_page(|int pdf_document, int page_number)
[cpdf_set_font_directories | Sets directories to search when using external fonts, returns bool]
cpdf_set_font_directories(|int pdfdoc, string pfmdir, string pfbdir)
[cpdf_set_font_map_file | Sets fontname to filename translation map when using external fonts, returns bool]
cpdf_set_font_map_file(|int pdfdoc, string filename)
[cpdf_set_font | Select the current font face and size, returns bool]
cpdf_set_font(|int pdf_document, string font_name, float size, string encoding)
[cpdf_set_horiz_scaling | Sets horizontal scaling of text, returns bool]
cpdf_set_horiz_scaling(|int pdf_document, float scale)
[cpdf_set_keywords | Sets the keywords field of the pdf document, returns bool]
cpdf_set_keywords(|string keywords)
[cpdf_set_leading | Sets distance between text lines, returns bool]
cpdf_set_leading(|int pdf_document, float distance)
[cpdf_set_page_animation | Sets duration between pages, returns bool]
cpdf_set_page_animation(|int pdf_document, int transition, float duration)
[cpdf_set_subject | Sets the subject field of the pdf document, returns bool]
cpdf_set_subject(|int pdf_document, string subject)
[cpdf_set_text_matrix | Sets the text matrix, returns bool]
cpdf_set_text_matrix(|int pdf_document, array matrix)
[cpdf_set_text_pos | Sets text position, returns bool]
cpdf_set_text_pos(|int pdf_document, float x-coor, float y-coor, [int mode])
[cpdf_set_text_rendering | Determines how text is rendered, returns bool]
cpdf_set_text_rendering(|int pdf_document, int rendermode)
[cpdf_set_text_rise | Sets the text rise, returns bool]
cpdf_set_text_rise(|int pdf_document, float value)
[cpdf_set_title | Sets the title field of the pdf document, returns bool]
cpdf_set_title(|string title)
[cpdf_set_viewer_preferences | How to show the document in the viewer, returns bool]
cpdf_set_viewer_preferences(|int pdfdoc, array preferences)
[cpdf_set_word_spacing | Sets spacing between words, returns bool]
cpdf_set_word_spacing(|int pdf_document, float space)
[cpdf_setdash | Sets dash pattern, returns bool]
cpdf_setdash(|int pdf_document, float white, float black)
[cpdf_setflat | Sets flatness, returns bool]
cpdf_setflat(|int pdf_document, float value)
[cpdf_setgray_fill | Sets filling color to gray value, returns bool]
cpdf_setgray_fill(|int pdf_document, float value)
[cpdf_setgray_stroke | Sets drawing color to gray value, returns bool]
cpdf_setgray_stroke(|int pdf_document, float gray_value)
[cpdf_setgray | Sets drawing and filling color to gray value, returns bool]
cpdf_setgray(|int pdf_document, float gray_value)
[cpdf_setlinecap | Sets linecap parameter, returns bool]
cpdf_setlinecap(|int pdf_document, int value)
[cpdf_setlinejoin | Sets linejoin parameter, returns bool]
cpdf_setlinejoin(|int pdf_document, int value)
[cpdf_setlinewidth | Sets line width, returns bool]
cpdf_setlinewidth(|int pdf_document, float width)
[cpdf_setmiterlimit | Sets miter limit, returns bool]
cpdf_setmiterlimit(|int pdf_document, float value)
[cpdf_setrgbcolor_fill | Sets filling color to rgb color value, returns bool]
cpdf_setrgbcolor_fill(|int pdf_document, float red_value, float green_value, float blue_value)
[cpdf_setrgbcolor_stroke | Sets drawing color to rgb color value, returns bool]
cpdf_setrgbcolor_stroke(|int pdf_document, float red_value, float green_value, float blue_value)
[cpdf_setrgbcolor | Sets drawing and filling color to rgb color value, returns bool]
cpdf_setrgbcolor(|int pdf_document, float red_value, float green_value, float blue_value)
[cpdf_show_xy | Output text at position, returns bool]
cpdf_show_xy(|int pdf_document, string text, float x-coor, float y-coor, [int mode])
[cpdf_show | Output text at current position, returns bool]
cpdf_show(|int pdf_document, string text)
[cpdf_stringwidth | Returns width of text in current font, returns float]
cpdf_stringwidth(|int pdf_document, string text)
[cpdf_stroke | Draw line along path, returns bool]
cpdf_stroke(|int pdf_document)
[cpdf_text | Output text with parameters, returns bool]
cpdf_text(|int pdf_document, string text, float x-coor, float y-coor, [int mode], [float orientation], [int alignmode])
[cpdf_translate | Sets origin of coordinate system, returns bool]
cpdf_translate(|int pdf_document, float x-coor, float y-coor, [int mode])
; -----------------------------------------------------------------------------
; Crack - Crack functions
; -----------------------------------------------------------------------------
[crack_check | Performs an obscure check with the given password, returns bool]
crack_check(|[resource dictionary], string password)
[crack_closedict | Closes an open CrackLib dictionary, returns bool]
crack_closedict(|[resource dictionary])
[crack_getlastmessage | Returns the message from the last obscure check, returns string]
crack_getlastmessage()|
[crack_opendict | Opens a new CrackLib dictionary, returns resource]
crack_opendict(|string dictionary)
; -----------------------------------------------------------------------------
; CURL - CURL, Client URL Library Functions
; -----------------------------------------------------------------------------
[curl_close | Close a CURL session, returns void]
curl_close(|resource ch)
[curl_errno | Return the last error number, returns int]
curl_errno(|resource ch)
[curl_error | Return a string containing the last error for the current session, returns string]
curl_error(|resource ch)
[curl_exec | Perform a CURL session, returns mixed]
curl_exec(|resource ch)
[curl_getinfo | Get information regarding a specific transfer, returns string]
curl_getinfo(|resource ch, [int opt])
[curl_init | Initialize a CURL session, returns resource]
curl_init(|[string url])
[curl_multi_add_handle | Add a normal cURL handle to a cURL multi handle, returns int]
curl_multi_add_handle(|resource mh, resource ch)
[curl_multi_close | Close a set of cURL handles, returns void]
curl_multi_close(|resource mh)
[curl_multi_exec | Run the sub-connections of the current cURL handle, returns int]
curl_multi_exec(|resource mh)
[curl_multi_getcontent | Return the content of a cURL handle if CURLOPT_RETURNTRANSFER is set, returns string]
curl_multi_getcontent(|resource ch)
[curl_multi_info_read | Get information about the current transfers, returns array]
curl_multi_info_read(|resource mh)
[curl_multi_init | Returns a new cURL multi handle, returns resource]
curl_multi_init()|
[curl_multi_remove_handle | Remove a multi handle from a set of cURL handles, returns int]
curl_multi_remove_handle(|resource mh, resource ch)
[curl_multi_select | Get all the sockets associated with the cURL extension, which can then be "selected", returns int]
curl_multi_select(|resource mh, [float timeout])
[curl_setopt | Set an option for a CURL transfer, returns bool]
curl_setopt(|resource ch, string option, mixed value)
[curl_version | Return the current CURL version, returns string]
curl_version()|
; -----------------------------------------------------------------------------
; Cybercash - Cybercash payment functions
; -----------------------------------------------------------------------------
[cybercash_base64_decode | base64 decode data for Cybercash, returns string]
cybercash_base64_decode(|string inbuff)
[cybercash_base64_encode | base64 encode data for Cybercash, returns string]
cybercash_base64_encode(|string inbuff)
[cybercash_decr | Cybercash decrypt, returns array]
cybercash_decr(|string wmk, string sk, string inbuff)
[cybercash_encr | Cybercash encrypt, returns array]
cybercash_encr(|string wmk, string sk, string inbuff)
; -----------------------------------------------------------------------------
; Cyrus IMAP - Cyrus IMAP administration functions
; -----------------------------------------------------------------------------
[cyrus_authenticate | Authenticate against a Cyrus IMAP server, returns bool]
cyrus_authenticate(|resource connection, [string mechlist], [string service], [string user], [int minssf], [int maxssf])
[cyrus_bind | Bind callbacks to a Cyrus IMAP connection, returns bool]
cyrus_bind(|resource connection, array callbacks)
[cyrus_close | Close connection to a Cyrus IMAP server, returns bool]
cyrus_close(|resource connection)
[cyrus_connect | Connect to a Cyrus IMAP server, returns resource]
cyrus_connect(|[string host], [string port], [int flags])
[cyrus_query | Send a query to a Cyrus IMAP server, returns bool]
cyrus_query(|resource connection, string query)
[cyrus_unbind | Unbind ..., returns bool]
cyrus_unbind(|resource connection, string trigger_name)
; -----------------------------------------------------------------------------
; ctype - Character type functions
; -----------------------------------------------------------------------------
[ctype_alnum | Check for alphanumeric character(s), returns bool]
ctype_alnum(|string text)
[ctype_alpha | Check for alphabetic character(s), returns bool]
ctype_alpha(|string text)
[ctype_cntrl | Check for control character(s), returns bool]
ctype_cntrl(|string text)
[ctype_digit | Check for numeric character(s), returns bool]
ctype_digit(|string text)
[ctype_graph | Check for any printable character(s) except space, returns bool]
ctype_graph(|string text)
[ctype_lower | Check for lowercase character(s), returns bool]
ctype_lower(|string text)
[ctype_print | Check for printable character(s), returns bool]
ctype_print(|string text)
[ctype_punct | Check for any printable character which is not whitespace or an alphanumeric character, returns bool]
ctype_punct(|string text)
[ctype_space | Check for whitespace character(s), returns bool]
ctype_space(|string text)
[ctype_upper | Check for uppercase character(s), returns bool]
ctype_upper(|string text)
[ctype_xdigit | Check for character(s) representing a hexadecimal digit, returns bool]
ctype_xdigit(|string text)
; -----------------------------------------------------------------------------
; dba - Database (dbm-style) abstraction layer functions
; -----------------------------------------------------------------------------
[dba_close | Close database, returns void]
dba_close(|resource handle)
[dba_delete | Delete entry specified by key, returns bool]
dba_delete(|string key, resource handle)
[dba_exists | Check whether key exists, returns bool]
dba_exists(|string key, resource handle)
[dba_fetch | Fetch data specified by key, returns string]
dba_fetch(|string key, resource handle)
[dba_firstkey | Fetch first key, returns string]
dba_firstkey(|resource handle)
[dba_handlers | List handlers available, returns array]
dba_handlers()|
[dba_insert | Insert entry, returns bool]
dba_insert(|string key, string value, resource handle)
[dba_key_split | Splits a key in string representation into array representation, returns mixed]
dba_key_split(|mixed key)
[dba_list | List all open database files, returns array]
dba_list()|
[dba_nextkey | Fetch next key, returns string]
dba_nextkey(|resource handle)
[dba_open | Open database, returns resource]
dba_open(|string path, string mode, string handler, [ ...])
[dba_optimize | Optimize database, returns bool]
dba_optimize(|resource handle)
[dba_popen | Open database persistently, returns resource]
dba_popen(|string path, string mode, string handler, [ ...])
[dba_replace | Replace or insert entry, returns bool]
dba_replace(|string key, string value, resource handle)
[dba_sync | Synchronize database, returns bool]
dba_sync(|resource handle)
; -----------------------------------------------------------------------------
; Date/Time - Date and Time functions
; -----------------------------------------------------------------------------
[checkdate | Validate a gregorian date, returns bool]
checkdate(|int month, int day, int year)
[date | Format a local time/date, returns string]
date(|string format, [int timestamp])
[getdate | Get date/time information, returns array]
getdate(|[int timestamp])
[gettimeofday | Get current time, returns array]
gettimeofday()|
[gmdate | Format a GMT/UTC date/time, returns string]
gmdate(|string format, [int timestamp])
[gmmktime | Get UNIX timestamp for a GMT date, returns int]
gmmktime(|[int hour], [int minute], [int second], [int month], [int day], [int year], [int is_dst])
[gmstrftime | Format a GMT/UTC time/date according to locale settings, returns string]
gmstrftime(|string format, [int timestamp])
[localtime | Get the local time, returns array]
localtime(|[int timestamp], [bool is_associative])
[microtime | Return current UNIX timestamp with microseconds, returns string]
microtime()|
[mktime | Get UNIX timestamp for a date, returns int]
mktime(|[int hour], [int minute], [int second], [int month], [int day], [int year], [int is_dst])
[strftime | Format a local time/date according to locale settings, returns string]
strftime(|string format, [int timestamp])
[strtotime | Parse about any English textual datetime description into a UNIX timestamp, returns int]
strtotime(|string time, [int now])
[time | Return current UNIX timestamp, returns int]
time()|
; -----------------------------------------------------------------------------
; dBase - dBase functions
; -----------------------------------------------------------------------------
[dbase_add_record | Add a record to a dBase database, returns bool]
dbase_add_record(|int dbase_identifier, array record)
[dbase_close | Close a dBase database, returns bool]
dbase_close(|int dbase_identifier)
[dbase_create | Creates a dBase database, returns int]
dbase_create(|string filename, array fields)
[dbase_delete_record | Deletes a record from a dBase database, returns bool]
dbase_delete_record(|int dbase_identifier, int record)
[dbase_get_header_info | Get the header info of a dBase database, returns array]
dbase_get_header_info(|int dbase_identifier)
[dbase_get_record_with_names | Gets a record from a dBase database as an associative array, returns array]
dbase_get_record_with_names(|int dbase_identifier, int record)
[dbase_get_record | Gets a record from a dBase database, returns array]
dbase_get_record(|int dbase_identifier, int record)
[dbase_numfields | Find out how many fields are in a dBase database, returns int]
dbase_numfields(|int dbase_identifier)
[dbase_numrecords | Find out how many records are in a dBase database, returns int]
dbase_numrecords(|int dbase_identifier)
[dbase_open | Opens a dBase database, returns int]
dbase_open(|string filename, int flags)
[dbase_pack | Packs a dBase database, returns bool]
dbase_pack(|int dbase_identifier)
[dbase_replace_record | Replace a record in a dBase database, returns bool]
dbase_replace_record(|int dbase_identifier, array record, int dbase_record_number)
; -----------------------------------------------------------------------------
; DBM - DBM Functions [deprecated]
; -----------------------------------------------------------------------------
[dblist | Describes the DBM-compatible library being used, returns string]
dblist()|
[dbmclose | Closes a dbm database, returns bool]
dbmclose(|resource dbm_identifier)
[dbmdelete | Deletes the value for a key from a DBM database, returns bool]
dbmdelete(|resource dbm_identifier, string key)
[dbmexists | Tells if a value exists for a key in a DBM database, returns bool]
dbmexists(|resource dbm_identifier, string key)
[dbmfetch | Fetches a value for a key from a DBM database, returns string]
dbmfetch(|resource dbm_identifier, string key)
[dbmfirstkey | Retrieves the first key from a DBM database, returns string]
dbmfirstkey(|resource dbm_identifier)
[dbminsert | Inserts a value for a key in a DBM database, returns int]
dbminsert(|resource dbm_identifier, string key, string value)
[dbmnextkey | Retrieves the next key from a DBM database, returns string]
dbmnextkey(|resource dbm_identifier, string key)
[dbmopen | Opens a DBM database, returns resource]
dbmopen(|string filename, string flags)
[dbmreplace | Replaces the value for a key in a DBM database, returns int]
dbmreplace(|resource dbm_identifier, string key, string value)
; -----------------------------------------------------------------------------
; dbx - dbx functions
; -----------------------------------------------------------------------------
[dbx_close | Close an open connection/database, returns bool]
dbx_close(|object link_identifier)
[dbx_compare | Compare two rows for sorting purposes, returns int]
dbx_compare(|array row_a, array row_b, string column_key, [int flags])
[dbx_connect | Open a connection/database, returns object]
dbx_connect(|mixed module, string host, string database, string username, string password, [int persistent])
[dbx_error | Report the error message of the latest function call in the module (not just in the connection), returns string]
dbx_error(|object link_identifier)
[dbx_escape_string | Escape a string so it can safely be used in an sql-statement., returns string]
dbx_escape_string(|object link_identifier, string text)
[dbx_fetch_row | Fetches rows from a query-result that had the DBX_RESULT_UNBUFFERED flag set, returns object]
dbx_fetch_row(|object result_identifier)
[dbx_query | Send a query and fetch all results (if any), returns object]
dbx_query(|object link_identifier, string sql_statement, [int flags])
[dbx_sort | Sort a result from a dbx_query by a custom sort function, returns bool]
dbx_sort(|object result, string user_compare_function)
; -----------------------------------------------------------------------------
; DB++ - DB++ Functions
; -----------------------------------------------------------------------------
[dbplus_add | Add a tuple to a relation, returns int]
dbplus_add(|resource relation, array tuple)
[dbplus_aql | Perform AQL query, returns resource]
dbplus_aql(|string query, [string server], [string dbpath])
[dbplus_chdir | Get/Set database virtual current directory, returns string]
dbplus_chdir(|[string newdir])
[dbplus_close | Close a relation, returns int]
dbplus_close(|resource relation)
[dbplus_curr | Get current tuple from relation, returns int]
dbplus_curr(|resource relation, array tuple)
[dbplus_errcode | Get error string for given errorcode or last error, returns string]
dbplus_errcode(|int errno)
[dbplus_errno | Get error code for last operation, returns int]
dbplus_errno()|
[dbplus_find | Set a constraint on a relation, returns int]
dbplus_find(|resource relation, array constraints, mixed tuple)
[dbplus_first | Get first tuple from relation, returns int]
dbplus_first(|resource relation, array tuple)
[dbplus_flush | Flush all changes made on a relation, returns int]
dbplus_flush(|resource relation)
[dbplus_freealllocks | Free all locks held by this client, returns int]
dbplus_freealllocks()|
[dbplus_freelock | Release write lock on tuple, returns int]
dbplus_freelock(|resource relation, string tname)
[dbplus_freerlocks | Free all tuple locks on given relation, returns int]
dbplus_freerlocks(|resource relation)
[dbplus_getlock | Get a write lock on a tuple, returns int]
dbplus_getlock(|resource relation, string tname)
[dbplus_getunique | Get an id number unique to a relation, returns int]
dbplus_getunique(|resource relation, int uniqueid)
[dbplus_info | ???, returns int]
dbplus_info(|resource relation, string key, array )
[dbplus_last | Get last tuple from relation, returns int]
dbplus_last(|resource relation, array tuple)
[dbplus_lockrel | Request write lock on relation, returns int]
dbplus_lockrel(|resource relation)
[dbplus_next | Get next tuple from relation, returns int]
dbplus_next(|resource relation, array )
[dbplus_open | Open relation file, returns resource]
dbplus_open(|string name)
[dbplus_prev | Get previous tuple from relation, returns int]
dbplus_prev(|resource relation, array tuple)
[dbplus_rchperm | Change relation permissions, returns int]
dbplus_rchperm(|resource relation, int mask, string user, string group)
[dbplus_rcreate | Creates a new DB++ relation, returns resource]
dbplus_rcreate(|string name, mixed domlist, [bool overwrite])
[dbplus_rcrtexact | Creates an exact but empty copy of a relation including indices, returns resource]
dbplus_rcrtexact(|string name, resource relation, bool overwrite)
[dbplus_rcrtlike | Creates an empty copy of a relation with default indices, returns resource]
dbplus_rcrtlike(|string name, resource relation, int flag)
[dbplus_resolve | Resolve host information for relation, returns int]
dbplus_resolve(|string relation_name)
[dbplus_restorepos | ???, returns int]
dbplus_restorepos(|resource relation, array tuple)
[dbplus_rkeys | Specify new primary key for a relation, returns resource]
dbplus_rkeys(|resource relation, mixed domlist)
[dbplus_ropen | Open relation file local, returns resource]
dbplus_ropen(|string name)
[dbplus_rquery | Perform local (raw) AQL query, returns int]
dbplus_rquery(|string query, string dbpath)
[dbplus_rrename | Rename a relation, returns int]
dbplus_rrename(|resource relation, string name)
[dbplus_rsecindex | Create a new secondary index for a relation, returns resource]
dbplus_rsecindex(|resource relation, mixed domlist, int type)
[dbplus_runlink | Remove relation from filesystem, returns int]
dbplus_runlink(|resource relation)
[dbplus_rzap | Remove all tuples from relation, returns int]
dbplus_rzap(|resource relation)
[dbplus_savepos | ???, returns int]
dbplus_savepos(|resource relation)
[dbplus_setindex | ???, returns int]
dbplus_setindex(|resource relation, string idx_name)
[dbplus_setindexbynumber | ???, returns int]
dbplus_setindexbynumber(|resource relation, int idx_number)
[dbplus_sql | Perform SQL query, returns resource]
dbplus_sql(|string query, string server, string dbpath)
[dbplus_tcl | Execute TCL code on server side, returns int]
dbplus_tcl(|int sid, string script)
[dbplus_tremove | Remove tuple and return new current tuple, returns int]
dbplus_tremove(|resource relation, array tuple, [array current])
[dbplus_undo | ???, returns int]
dbplus_undo(|resource relation)
[dbplus_undoprepare | ???, returns int]
dbplus_undoprepare(|resource relation)
[dbplus_unlockrel | Give up write lock on relation, returns int]
dbplus_unlockrel(|resource relation)
[dbplus_unselect | Remove a constraint from relation, returns int]
dbplus_unselect(|resource relation)
[dbplus_update | Update specified tuple in relation, returns int]
dbplus_update(|resource relation, array old, array new)
[dbplus_xlockrel | Request exclusive lock on relation, returns int]
dbplus_xlockrel(|resource relation)
[dbplus_xunlockrel | Free exclusive lock on relation, returns int]
dbplus_xunlockrel(|resource relation)
; -----------------------------------------------------------------------------
; Direct IO - Direct IO functions
; -----------------------------------------------------------------------------
[dio_close | Closes the file descriptor given by fd, returns void]
dio_close(|resource fd)
[dio_fcntl | Performs a c library fcntl on fd, returns mixed]
dio_fcntl(|resource fd, int cmd, [mixed arg])
[dio_open | Opens a new filename with specified permissions of flags and creation permissions of mode, returns resource]
dio_open(|string filename, int flags, [int mode])
[dio_read | Reads n bytes from fd and returns them, if n is not specified, reads 1k block, returns string]
dio_read(|resource fd, [int n])
[dio_seek | Seeks to pos on fd from whence, returns int]
dio_seek(|resource fd, int pos, int whence)
[dio_stat | Gets stat information about the file descriptor fd, returns array]
dio_stat(|resource fd)
[dio_tcsetattr | Sets terminal attributes and baud rate for a serial port, returns ]
dio_tcsetattr(|resource fd, array options)
[dio_truncate | Truncates file descriptor fd to offset bytes, returns bool]
dio_truncate(|resource fd, int offset)
[dio_write | Writes data to fd with optional truncation at length, returns int]
dio_write(|resource fd, string data, [int len])
; -----------------------------------------------------------------------------
; Directories - Directory functions
; -----------------------------------------------------------------------------
[chdir | Change directory, returns bool]
chdir(|string directory)
[chroot | Change the root directory, returns bool]
chroot(|string directory)
[dir | directory class]
[closedir | close directory handle, returns void]
closedir(|resource dir_handle)
[getcwd | gets the current working directory, returns string]
getcwd()|
[opendir | open directory handle, returns resource]
opendir(|string path)
[readdir | read entry from directory handle, returns string]
readdir(|resource dir_handle)
[rewinddir | rewind directory handle, returns void]
rewinddir(|resource dir_handle)
[scandir | List files and directories inside the specified path, returns array]
scandir(|string directory, [int sorting_order])
; -----------------------------------------------------------------------------
; DOM XML - DOM XML functions
; -----------------------------------------------------------------------------
[DomAttribute->name | Returns name of attribute, returns bool]
DomAttribute->name()|
[DomAttribute->specified | Checks if attribute is specified, returns bool]
DomAttribute->specified()|
[DomAttribute->value | Returns value of attribute, returns bool]
DomAttribute->value()|
[DomDocument->add_root [deprecated] | Adds a root node, returns resource]
DomDocument->add_root(|string name)
[DomDocument->create_attribute | Create new attribute, returns object]
DomDocument->create_attribute(|string name, string value)
[DomDocument->create_cdata_section | Create new cdata node, returns string]
DomDocument->create_cdata_section(|string content)
[DomDocument->create_comment | Create new comment node, returns object]
DomDocument->create_comment(|string content)
[DomDocument->create_element_ns | Create new element node with an associated namespace, returns object]
DomDocument->create_element_ns(|string uri, string name, [string prefix])
[DomDocument->create_element | Create new element node, returns object]
DomDocument->create_element(|string name)
[DomDocument->create_entity_reference | , returns object]
DomDocument->create_entity_reference(|string content)
[DomDocument->create_processing_instruction | Creates new PI node, returns string]
DomDocument->create_processing_instruction(|string content)
[DomDocument->create_text_node | Create new text node, returns object]
DomDocument->create_text_node(|string content)
[DomDocument->doctype | Returns the document type, returns object]
DomDocument->doctype()|
[DomDocument->document_element | Returns root element node, returns object]
DomDocument->document_element()|
[DomDocument->dump_file | Dumps the internal XML tree back into a file, returns string]
DomDocument->dump_file(|string filename, [bool compressionmode], [bool format])
[DomDocument->dump_mem | Dumps the internal XML tree back into a string, returns string]
DomDocument->dump_mem(|[bool format], [string encoding])
[DomDocument->get_element_by_id | Searches for an element with a certain id, returns object]
DomDocument->get_element_by_id(|string id)
[DomDocument->get_elements_by_tagname | , returns array]
DomDocument->get_elements_by_tagname(|string name)
[DomDocument->html_dump_mem | Dumps the internal XML tree back into a string as HTML, returns string]
DomDocument->html_dump_mem()|
[DomDocument->xinclude | Substitutes XIncludes in a DomDocument Object., returns int]
DomDocument->xinclude()|
[DomDocumentType->entities | Returns list of entities, returns array]
DomDocumentType->entities()|
[DomDocumentType->internal_subset | Returns internal subset, returns bool]
DomDocumentType->internal_subset()|
[DomDocumentType->name | Returns name of document type, returns string]
DomDocumentType->name()|
[DomDocumentType->notations | Returns list of notations, returns array]
DomDocumentType->notations()|
[DomDocumentType->public_id | Returns public id of document type, returns string]
DomDocumentType->public_id()|
[DomDocumentType->system_id | Returns system id of document type, returns string]
DomDocumentType->system_id()|
[DomElement->get_attribute_node | Returns value of attribute, returns object]
DomElement->get_attribute_node(|object attr)
[DomElement->get_attribute | Returns value of attribute, returns object]
DomElement->get_attribute(|string name)
[DomElement->get_elements_by_tagname | Gets elements by tagname, returns bool]
DomElement->get_elements_by_tagname(|string name)
[DomElement->has_attribute | Checks to see if attribute exists, returns bool]
DomElement->has_attribute(|string name)
[DomElement->remove_attribute | Removes attribute, returns bool]
DomElement->remove_attribute(|string name)
[DomElement->set_attribute | Adds new attribute, returns bool]
DomElement->set_attribute(|string name, string value)
[DomElement->tagname | Returns name of element, returns string]
DomElement->tagname()|
[DomNode->add_namespace | Adds a namespace declaration to a node., returns bool]
DomNode->add_namespace(|string uri, string prefix)
[DomNode->append_child | Adds new child at the end of the children, returns object]
DomNode->append_child(|object newnode)
[DomNode->append_sibling | Adds new sibling to a node, returns object]
DomNode->append_sibling(|object newnode)
[DomNode->attributes | Returns list of attributes, returns array]
DomNode->attributes()|
[DomNode->child_nodes | Returns children of node, returns array]
DomNode->child_nodes()|
[DomNode->clone_node | Clones a node, returns object]
DomNode->clone_node()|
[DomNode->dump_node | Dumps a single node, returns string]
DomNode->dump_node()|
[DomNode->first_child | Returns first child of node, returns object]
DomNode->first_child()|
[DomNode->get_content | Gets content of node, returns string]
DomNode->get_content()|
[DomNode->has_attributes | Checks if node has attributes, returns bool]
DomNode->has_attributes()|
[DomNode->has_child_nodes | Checks if node has children, returns bool]
DomNode->has_child_nodes()|
[DomNode->insert_before | Inserts new node as child, returns object]
DomNode->insert_before(|object newnode, object refnode)
[DomNode->is_blank_node | Checks if node is blank, returns bool]
DomNode->is_blank_node()|
[DomNode->last_child | Returns last child of node, returns object]
DomNode->last_child()|
[DomNode->next_sibling | Returns the next sibling of node, returns object]
DomNode->next_sibling()|
[DomNode->node_name | Returns name of node, returns string]
DomNode->node_name()|
[DomNode->node_type | Returns type of node, returns int]
DomNode->node_type()|
[DomNode->node_value | Returns value of a node, returns string]
DomNode->node_value()|
[DomNode->owner_document | Returns the document this node belongs to, returns object]
DomNode->owner_document()|
[DomNode->parent_node | Returns the parent of the node, returns object]
DomNode->parent_node()|
[DomNode->prefix | Returns name space prefix of node, returns string]
DomNode->prefix()|
[DomNode->previous_sibling | Returns the previous sibling of node, returns object]
DomNode->previous_sibling()|
[DomNode->remove_child | Removes child from list of children, returns object]
DomNode->remove_child(|object oldchild)
[DomNode->replace_child | Replaces a child, returns object]
DomNode->replace_child(|object oldnode, object newnode)
[DomNode->replace_node | Replaces node, returns object]
DomNode->replace_node(|object newnode)
[DomNode->set_content | Sets content of node, returns bool]
DomNode->set_content()|
[DomNode->set_name | Sets name of node, returns bool]
DomNode->set_name()|
[DomNode->set_namespace | Sets namespace of a node., returns void]
DomNode->set_namespace(|string uri, [string prefix])
[DomNode->unlink_node | Deletes node, returns object]
DomNode->unlink_node()|
[DomProcessingInstruction->data | Returns data of pi node, returns string]
DomProcessingInstruction->data()|
[DomProcessingInstruction->target | Returns target of pi node, returns string]
DomProcessingInstruction->target()|
[DomXsltStylesheet->process | Applies the XSLT-Transformation on a DomDocument Object., returns object]
DomXsltStylesheet->process(|object DomDocument, [array xslt_parameters], [bool param_is_xpath])
[DomXsltStylesheet->result_dump_file | Dumps the result from a XSLT-Transformation into a file, returns string]
DomXsltStylesheet->result_dump_file(|object DomDocument, string filename)
[DomXsltStylesheet->result_dump_mem | Dumps the result from a XSLT-Transformation back into a string, returns string]
DomXsltStylesheet->result_dump_mem(|object DomDocument)
[domxml_new_doc | Creates new empty XML document, returns object]
domxml_new_doc(|string version)
[domxml_open_file | Creates a DOM object from XML file, returns object]
domxml_open_file(|string filename)
[domxml_open_mem | Creates a DOM object of an XML document, returns object]
domxml_open_mem(|string str)
[domxml_version | Get XML library version, returns string]
domxml_version()|
[domxml_xmltree | Creates a tree of PHP objects from an XML document, returns object]
domxml_xmltree(|string str)
[domxml_xslt_stylesheet_doc | Creates a DomXsltStylesheet Object from a DomDocument Object., returns object]
domxml_xslt_stylesheet_doc(|object DocDocument Object)
[domxml_xslt_stylesheet_file | Creates a DomXsltStylesheet Object from a xsl document in a file., returns object]
domxml_xslt_stylesheet_file(|string xsl file)
[domxml_xslt_stylesheet | Creates a DomXsltStylesheet Object from a xml document in a string., returns object]
domxml_xslt_stylesheet(|string xsl document)
[xpath_eval_expression | Evaluates the XPath Location Path in the given string, returns array]
xpath_eval_expression(|object xpath_context)
[xpath_eval | Evaluates the XPath Location Path in the given string, returns array]
xpath_eval(|object xpath context, string xpath expression, [object contextnode])
[xpath_new_context | Creates new xpath context, returns object]
xpath_new_context(|object dom document)
[xptr_eval | Evaluate the XPtr Location Path in the given string, returns int]
xptr_eval(|[object xpath_context], string eval_str)
[xptr_new_context | Create new XPath Context, returns string]
xptr_new_context(|[object doc_handle])
; -----------------------------------------------------------------------------
; .NET - .NET functions
; -----------------------------------------------------------------------------
[dotnet_load | Loads a DOTNET module, returns int]
dotnet_load(|string assembly_name, [string datatype_name], [int codepage])
; -----------------------------------------------------------------------------
; Errors and Logging - Error Handling and Logging Functions
; -----------------------------------------------------------------------------
[debug_backtrace | Generates a backtrace, returns array]
debug_backtrace()|
[debug_print_backtrace | Prints a backtrace, returns void]
debug_print_backtrace()|
[error_log | Send an error message somewhere, returns int]
error_log(|string message, [int message_type], [string destination], [string extra_headers])
[error_reporting | Sets which PHP errors are reported, returns int]
error_reporting(|[int level])
[restore_error_handler | Restores the previous error handler function, returns void]
restore_error_handler()|
[set_error_handler | Sets a user-defined error handler function., returns string]
set_error_handler(|callback error_handler)
[trigger_error | Generates a user-level error/warning/notice message, returns void]
trigger_error(|string error_msg, [int error_type])
[user_error | Alias of trigger_error]
user_error(|)
; -----------------------------------------------------------------------------
; fam - File alteration monitor functions
; -----------------------------------------------------------------------------
[fam_cancel_monitor | Terminate monitoring, returns bool]
fam_cancel_monitor(|resource fam, resource fam_monitor)
[fam_close | Close FAM connection]
fam_close(|resource fam)
[fam_monitor_collection | Monitor a collection of files in a directory for changes, returns resource]
fam_monitor_collection(|resource fam, string dirname, int depth, string mask)
[fam_monitor_directory | Monitor a directory for changes, returns resource]
fam_monitor_directory(|resource fam, string dirname)
[fam_monitor_file | Monitor a regular file for changes, returns resource]
fam_monitor_file(|resource fam, string filename)
[fam_next_event | ..., returns array]
fam_next_event(|resource fam)
[fam_open | Open connection to FAM daemon, returns resource]
fam_open(|[string appname])
[fam_pending | Check for pending FAM events, returns bool]
fam_pending(|resource fam)
[fam_resume_monitor | Resume suspended monitoring, returns bool]
fam_resume_monitor(|resource fam, resource fam_monitor)
[fam_suspend_monitor | Temporarily suspend monitoring, returns bool]
fam_suspend_monitor(|resource fam, resource fam_monitor)
; -----------------------------------------------------------------------------
; FrontBase - FrontBase Functions
; -----------------------------------------------------------------------------
[fbsql_affected_rows | Get number of affected rows in previous FrontBase operation, returns int]
fbsql_affected_rows(|[resource link_identifier])
[fbsql_autocommit | Enable or disable autocommit, returns bool]
fbsql_autocommit(|resource link_identifier, [bool OnOff])
[fbsql_change_user | Change logged in user of the active connection, returns resource]
fbsql_change_user(|string user, string password, [string database], [resource link_identifier])
[fbsql_close | Close FrontBase connection, returns bool]
fbsql_close(|[resource link_identifier])
[fbsql_commit | Commits a transaction to the database, returns bool]
fbsql_commit(|[resource link_identifier])
[fbsql_connect | Open a connection to a FrontBase Server, returns resource]
fbsql_connect(|[string hostname], [string username], [string password])
[fbsql_create_blob | Create a BLOB, returns string]
fbsql_create_blob(|string blob_data, [resource link_identifier])
[fbsql_create_clob | Create a CLOB, returns string]
fbsql_create_clob(|string clob_data, [resource link_identifier])
[fbsql_create_db | Create a FrontBase database, returns bool]
fbsql_create_db(|string database_name, [resource link_identifier])
[fbsql_data_seek | Move internal result pointer, returns bool]
fbsql_data_seek(|resource result_identifier, int row_number)
[fbsql_database_password | Sets or retrieves the password for a FrontBase database, returns string]
fbsql_database_password(|resource link_identifier, [string database_password])
[fbsql_database | Get or set the database name used with a connection, returns string]
fbsql_database(|resource link_identifier, [string database])
[fbsql_db_query | Send a FrontBase query, returns resource]
fbsql_db_query(|string database, string query, [resource link_identifier])
[fbsql_db_status | Get the status for a given database, returns int]
fbsql_db_status(|string database_name, [resource link_identifier])
[fbsql_drop_db | Drop (delete) a FrontBase database, returns bool]
fbsql_drop_db(|string database_name, [resource link_identifier])
[fbsql_errno | Returns the numerical value of the error message from previous FrontBase operation, returns int]
fbsql_errno(|[resource link_identifier])
[fbsql_error | Returns the text of the error message from previous FrontBase operation, returns string]
fbsql_error(|[resource link_identifier])
[fbsql_fetch_array | Fetch a result row as an associative array, a numeric array, or both, returns array]
fbsql_fetch_array(|resource result, [int result_type])
[fbsql_fetch_assoc | Fetch a result row as an associative array, returns array]
fbsql_fetch_assoc(|resource result)
[fbsql_fetch_field | Get column information from a result and return as an object, returns object]
fbsql_fetch_field(|resource result, [int field_offset])
[fbsql_fetch_lengths | Get the length of each output in a result, returns array]
fbsql_fetch_lengths(|[resource result])
[fbsql_fetch_object | Fetch a result row as an object, returns object]
fbsql_fetch_object(|resource result, [int result_type])
[fbsql_fetch_row | Get a result row as an enumerated array, returns array]
fbsql_fetch_row(|resource result)
[fbsql_field_flags | Get the flags associated with the specified field in a result, returns string]
fbsql_field_flags(|resource result, int field_offset)
[fbsql_field_len | Returns the length of the specified field, returns int]
fbsql_field_len(|resource result, int field_offset)
[fbsql_field_name | Get the name of the specified field in a result, returns string]
fbsql_field_name(|resource result, int field_index)
[fbsql_field_seek | Set result pointer to a specified field offset, returns bool]
fbsql_field_seek(|resource result, int field_offset)
[fbsql_field_table | Get name of the table the specified field is in, returns string]
fbsql_field_table(|resource result, int field_offset)
[fbsql_field_type | Get the type of the specified field in a result, returns string]
fbsql_field_type(|resource result, int field_offset)
[fbsql_free_result | Free result memory, returns bool]
fbsql_free_result(|resource result)
[fbsql_get_autostart_info | No description given yet, returns array]
fbsql_get_autostart_info(|[resource link_identifier])
[fbsql_hostname | Get or set the host name used with a connection, returns string]
fbsql_hostname(|resource link_identifier, [string host_name])
[fbsql_insert_id | Get the id generated from the previous INSERT operation, returns int]
fbsql_insert_id(|[resource link_identifier])
[fbsql_list_dbs | List databases available on a FrontBase server, returns resource]
fbsql_list_dbs(|[resource link_identifier])
[fbsql_list_fields | List FrontBase result fields, returns resource]
fbsql_list_fields(|string database_name, string table_name, [resource link_identifier])
[fbsql_list_tables | List tables in a FrontBase database, returns resource]
fbsql_list_tables(|string database, [resource link_identifier])
[fbsql_next_result | Move the internal result pointer to the next result, returns bool]
fbsql_next_result(|resource result_id)
[fbsql_num_fields | Get number of fields in result, returns int]
fbsql_num_fields(|resource result)
[fbsql_num_rows | Get number of rows in result, returns int]
fbsql_num_rows(|resource result)
[fbsql_password | Get or set the user password used with a connection, returns string]
fbsql_password(|resource link_identifier, [string password])
[fbsql_pconnect | Open a persistent connection to a FrontBase Server, returns resource]
fbsql_pconnect(|[string hostname], [string username], [string password])
[fbsql_query | Send a FrontBase query, returns resource]
fbsql_query(|string query, [resource link_identifier])
[fbsql_read_blob | Read a BLOB from the database, returns string]
fbsql_read_blob(|string blob_handle, [resource link_identifier])
[fbsql_read_clob | Read a CLOB from the database, returns string]
fbsql_read_clob(|string clob_handle, [resource link_identifier])
[fbsql_result | Get result data, returns mixed]
fbsql_result(|resource result, int row, [mixed field])
[fbsql_rollback | Rollback a transaction to the database, returns bool]
fbsql_rollback(|[resource link_identifier])
[fbsql_select_db | Select a FrontBase database, returns bool]
fbsql_select_db(|string database_name, [resource link_identifier])
[fbsql_set_lob_mode | Set the LOB retrieve mode for a FrontBase result set, returns bool]
fbsql_set_lob_mode(|resource result, string database_name)
[fbsql_set_transaction | Set the transaction locking and isolation, returns void]
fbsql_set_transaction(|resource link_identifier, int Locking, int Isolation)
[fbsql_start_db | Start a database on local or remote server, returns bool]
fbsql_start_db(|string database_name, [resource link_identifier])
[fbsql_stop_db | Stop a database on local or remote server, returns bool]
fbsql_stop_db(|string database_name, [resource link_identifier])
[fbsql_tablename | Get table name of field, returns string]
fbsql_tablename(|resource result, int i)
[fbsql_username | Get or set the host user used with a connection, returns string]
fbsql_username(|resource link_identifier, [string username])
[fbsql_warnings | Enable or disable FrontBase warnings, returns bool]
fbsql_warnings(|[bool OnOff])
; -----------------------------------------------------------------------------
; filePro - filePro functions
; -----------------------------------------------------------------------------
[filepro_fieldcount | Find out how many fields are in a filePro database, returns int]
filepro_fieldcount()|
[filepro_fieldname | Gets the name of a field, returns string]
filepro_fieldname(|int field_number)
[filepro_fieldtype | Gets the type of a field, returns string]
filepro_fieldtype(|int field_number)
[filepro_fieldwidth | Gets the width of a field, returns int]
filepro_fieldwidth(|int field_number)
[filepro_retrieve | Retrieves data from a filePro database, returns string]
filepro_retrieve(|int row_number, int field_number)
[filepro_rowcount | Find out how many rows are in a filePro database, returns int]
filepro_rowcount()|
[filepro | Read and verify the map file, returns bool]
filepro(|string directory)
; -----------------------------------------------------------------------------
; Filesystem - Filesystem functions
; -----------------------------------------------------------------------------
[basename | Returns filename component of path, returns string]
basename(|string path, [string suffix])
[chgrp | Changes file group, returns bool]
chgrp(|string filename, mixed group)
[chmod | Changes file mode, returns bool]
chmod(|string filename, int mode)
[chown | Changes file owner, returns bool]
chown(|string filename, mixed user)
[clearstatcache | Clears file status cache, returns void]
clearstatcache()|
[copy | Copies file, returns bool]
copy(|string source, string dest)
[delete | See unlink or unset, returns void]
delete(|string file)
[dirname | Returns directory name component of path, returns string]
dirname(|string path)
[disk_free_space | Returns available space in directory, returns float]
disk_free_space(|string directory)
[disk_total_space | Returns the total size of a directory, returns float]
disk_total_space(|string directory)
[diskfreespace | Alias of disk_free_space]
diskfreespace(|)
[fclose | Closes an open file pointer, returns bool]
fclose(|resource handle)
[feof | Tests for end-of-file on a file pointer, returns bool]
feof(|resource handle)
[fflush | Flushes the output to a file, returns bool]
fflush(|resource handle)
[fgetc | Gets character from file pointer, returns string]
fgetc(|resource handle)
[fgetcsv | Gets line from file pointer and parse for CSV fields, returns array]
fgetcsv(|resource handle, int length, [string delimiter], [string enclosure])
[fgets | Gets line from file pointer, returns string]
fgets(|resource handle, [int length])
[fgetss | Gets line from file pointer and strip HTML tags, returns string]
fgetss(|resource handle, int length, [string allowable_tags])
[file_exists | Checks whether a file or directory exists, returns bool]
file_exists(|string filename)
[file_get_contents | Reads entire file into a string, returns string]
file_get_contents(|string filename, [int use_include_path], [resource context])
[file_put_contents | Write a string to a file, returns int]
file_put_contents(|string filename, string data, [int flags], [resource context])
[file | Reads entire file into an array, returns array]
file(|string filename, [int use_include_path], [resource context])
[fileatime | Gets last access time of file, returns int]
fileatime(|string filename)
[filectime | Gets inode change time of file, returns int]
filectime(|string filename)
[filegroup | Gets file group, returns int]
filegroup(|string filename)
[fileinode | Gets file inode, returns int]
fileinode(|string filename)
[filemtime | Gets file modification time, returns int]
filemtime(|string filename)
[fileowner | Gets file owner, returns int]
fileowner(|string filename)
[fileperms | Gets file permissions, returns int]
fileperms(|string filename)
[filesize | Gets file size, returns int]
filesize(|string filename)
[filetype | Gets file type, returns string]
filetype(|string filename)
[flock | Portable advisory file locking, returns bool]
flock(|resource handle, int operation, [int &wouldblock])
[fnmatch | Match filename against a pattern, returns array]
fnmatch(|string pattern, string string, [int flags])
[fopen | Opens file or URL, returns resource]
fopen(|string filename, string mode, [int use_include_path], [resource zcontext])
[fpassthru | Output all remaining data on a file pointer, returns int]
fpassthru(|resource handle)
[fputs | Alias of fwrite]
fputs(|)
[fread | Binary-safe file read, returns string]
fread(|resource handle, int length)
[fscanf | Parses input from a file according to a format, returns mixed]
fscanf(|resource handle, string format, [string var1])
[fseek | Seeks on a file pointer, returns int]
fseek(|resource handle, int offset, [int whence])
[fstat | Gets information about a file using an open file pointer, returns array]
fstat(|resource handle)
[ftell | Tells file pointer read/write position, returns int]
ftell(|resource handle)
[ftruncate | Truncates a file to a given length, returns bool]
ftruncate(|resource handle, int size)
[fwrite | Binary-safe file write, returns int]
fwrite(|resource handle, string string, [int length])
[glob | Find pathnames matching a pattern, returns array]
glob(|string pattern, [int flags])
[is_dir | Tells whether the filename is a directory, returns bool]
is_dir(|string filename)
[is_executable | Tells whether the filename is executable, returns bool]
is_executable(|string filename)
[is_file | Tells whether the filename is a regular file, returns bool]
is_file(|string filename)
[is_link | Tells whether the filename is a symbolic link, returns bool]
is_link(|string filename)
[is_readable | Tells whether the filename is readable, returns bool]
is_readable(|string filename)
[is_uploaded_file | Tells whether the file was uploaded via HTTP POST, returns bool]
is_uploaded_file(|string filename)
[is_writable | Tells whether the filename is writable, returns bool]
is_writable(|string filename)
[is_writeable | Alias of is_writable]
is_writeable(|)
[link | Create a hard link, returns bool]
link(|string target, string link)
[linkinfo | Gets information about a link, returns int]
linkinfo(|string path)
[lstat | Gives information about a file or symbolic link, returns array]
lstat(|string filename)
[mkdir | Makes directory, returns bool]
mkdir(|string pathname, [int mode])
[move_uploaded_file | Moves an uploaded file to a new location, returns bool]
move_uploaded_file(|string filename, string destination)
[parse_ini_file | Parse a configuration file, returns array]
parse_ini_file(|string filename, [bool process_sections])
[pathinfo | Returns information about a file path, returns array]
pathinfo(|string path)
[pclose | Closes process file pointer, returns int]
pclose(|resource handle)
[popen | Opens process file pointer, returns resource]
popen(|string command, string mode)
[readfile | Outputs a file, returns int]
readfile(|string filename, [bool use_include_path], [resource context])
[readlink | Returns the target of a symbolic link, returns string]
readlink(|string path)
[realpath | Returns canonicalized absolute pathname, returns string]
realpath(|string path)
[rename | Renames a file, returns bool]
rename(|string oldname, string newname)
[rewind | Rewind the position of a file pointer, returns bool]
rewind(|resource handle)
[rmdir | Removes directory, returns bool]
rmdir(|string dirname)
[set_file_buffer | Alias of stream_set_write_buffer]
set_file_buffer(|)
[stat | Gives information about a file, returns array]
stat(|string filename)
[symlink | Creates a symbolic link, returns bool]
symlink(|string target, string link)
[tempnam | Create file with unique file name, returns string]
tempnam(|string dir, string prefix)
[tmpfile | Creates a temporary file, returns resource]
tmpfile()|
[touch | Sets access and modification time of file, returns bool]
touch(|string filename, [int time], [int atime])
[umask | Changes the current umask, returns int]
umask(|[int mask])
[unlink | Deletes a file, returns bool]
unlink(|string filename)
; -----------------------------------------------------------------------------
; FDF - Forms Data Format functions
; -----------------------------------------------------------------------------
[fdf_add_doc_javascript | Adds javascript code to the FDF document, returns bool]
fdf_add_doc_javascript(|resource fdfdoc, string script_name, string script_code)
[fdf_add_template | Adds a template into the FDF document, returns bool]
fdf_add_template(|resource fdfdoc, int newpage, string filename, string template, int rename)
[fdf_close | Close an FDF document, returns bool]
fdf_close(|resource fdf_document)
[fdf_create | Create a new FDF document, returns resource]
fdf_create()|
[fdf_enum_values | Call a user defined function for each document value, returns bool]
fdf_enum_values(|resource fdfdoc, callback function, [mixed userdata])
[fdf_errno | Return error code for last fdf operation, returns int]
fdf_errno()|
[fdf_error | Return error description for fdf error code, returns string]
fdf_error(|[int error_code])
[fdf_get_ap | Get the appearance of a field, returns bool]
fdf_get_ap(|resource fdf_document, string field, int face, string filename)
[fdf_get_attachment | Extracts uploaded file embedded in the FDF, returns array]
fdf_get_attachment(|resource fdf_document, string fieldname, string savepath)
[fdf_get_encoding | Get the value of the /Encoding key, returns string]
fdf_get_encoding(|resource fdf_document)
[fdf_get_file | Get the value of the /F key, returns string]
fdf_get_file(|resource fdf_document)
[fdf_get_flags | Gets the flags of a field, returns ]
fdf_get_flags()|
[fdf_get_opt | Gets a value from the opt array of a field, returns mixed]
fdf_get_opt(|resource fdfdof, string fieldname, [int element])
[fdf_get_status | Get the value of the /STATUS key, returns string]
fdf_get_status(|resource fdf_document)
[fdf_get_value | Get the value of a field, returns string]
fdf_get_value(|resource fdf_document, string fieldname, [int which])
[fdf_get_version | Gets version number for FDF api or file, returns string]
fdf_get_version(|[resource fdf_document])
[fdf_header | Sets FDF-specific output headers, returns bool]
fdf_header()|
[fdf_next_field_name | Get the next field name, returns string]
fdf_next_field_name(|resource fdf_document, [string fieldname])
[fdf_open_string | Read a FDF document from a string, returns resource]
fdf_open_string(|string fdf_data)
[fdf_open | Open a FDF document, returns resource]
fdf_open(|string filename)
[fdf_remove_item | Sets target frame for form, returns bool]
fdf_remove_item(|resource fdfdoc, string fieldname, int item)
[fdf_save_string | Returns the FDF document as a string, returns string]
fdf_save_string(|resource fdf_document)
[fdf_save | Save a FDF document, returns bool]
fdf_save(|resource fdf_document, [string filename])
[fdf_set_ap | Set the appearance of a field, returns bool]
fdf_set_ap(|resource fdf_document, string field_name, int face, string filename, int page_number)
[fdf_set_encoding | Sets FDF character encoding, returns bool]
fdf_set_encoding(|resource fdf_document, string encoding)
[fdf_set_file | Set PDF document to display FDF data in, returns bool]
fdf_set_file(|resource fdf_document, string url, [string target_frame])
[fdf_set_flags | Sets a flag of a field, returns bool]
fdf_set_flags(|resource fdf_document, string fieldname, int whichFlags, int newFlags)
[fdf_set_javascript_action | Sets an javascript action of a field, returns bool]
fdf_set_javascript_action(|resource fdf_document, string fieldname, int trigger, string script)
[fdf_set_opt | Sets an option of a field, returns bool]
fdf_set_opt(|resource fdf_document, string fieldname, int element, string str1, string str2)
[fdf_set_status | Set the value of the /STATUS key, returns bool]
fdf_set_status(|resource fdf_document, string status)
[fdf_set_submit_form_action | Sets a submit form action of a field, returns bool]
fdf_set_submit_form_action(|resource fdf_document, string fieldname, int trigger, string script, int flags)
[fdf_set_target_frame | Set target frame for form display, returns bool]
fdf_set_target_frame(|resource fdf_document, string frame_name)
[fdf_set_value | Set the value of a field, returns bool]
fdf_set_value(|resource fdf_document, string fieldname, mixed value, [int isName])
[fdf_set_version | Sets version number for a FDF file, returns string]
fdf_set_version(|resource fdf_document, string version)
; -----------------------------------------------------------------------------
; FriBiDi - FriBiDi functions
; -----------------------------------------------------------------------------
[fribidi_log2vis | Convert a logical string to a visual one, returns string]
fribidi_log2vis(|string str, string direction, int charset)
; -----------------------------------------------------------------------------
; FTP - FTP functions
; -----------------------------------------------------------------------------
[ftp_alloc | Allocates space for a file to be uploaded., returns bool]
ftp_alloc(|resource ftp_stream, int filesize, [string &result])
[ftp_cdup | Changes to the parent directory, returns bool]
ftp_cdup(|resource ftp_stream)
[ftp_chdir | Changes directories on a FTP server, returns bool]
ftp_chdir(|resource ftp_stream, string directory)
[ftp_chmod | Set permissions on a file via FTP, returns string]
ftp_chmod(|resource ftp_stream, int mode, string filename)
[ftp_close | Closes an FTP connection, returns void]
ftp_close(|resource ftp_stream)
[ftp_connect | Opens an FTP connection, returns resource]
ftp_connect(|string host, [int port], [int timeout])
[ftp_delete | Deletes a file on the FTP server, returns bool]
ftp_delete(|resource ftp_stream, string path)
[ftp_exec | Requests execution of a program on the FTP server, returns bool]
ftp_exec(|resource ftp_stream, string command)
[ftp_fget | Downloads a file from the FTP server and saves to an open file, returns bool]
ftp_fget(|resource ftp_stream, resource handle, string remote_file, int mode, [int resumepos])
[ftp_fput | Uploads from an open file to the FTP server, returns bool]
ftp_fput(|resource ftp_stream, string remote_file, resource handle, int mode, [int startpos])
[ftp_get_option | Retrieves various runtime behaviours of the current FTP stream, returns mixed]
ftp_get_option(|resource ftp_stream, int option)
[ftp_get | Downloads a file from the FTP server, returns bool]
ftp_get(|resource ftp_stream, string local_file, string remote_file, int mode, [int resumepos])
[ftp_login | Logs in to an FTP connection, returns bool]
ftp_login(|resource ftp_stream, string username, string password)
[ftp_mdtm | Returns the last modified time of the given file, returns int]
ftp_mdtm(|resource ftp_stream, string remote_file)
[ftp_mkdir | Creates a directory, returns string]
ftp_mkdir(|resource ftp_stream, string directory)
[ftp_nb_continue | Continues retrieving/sending a file (non-blocking), returns int]
ftp_nb_continue(|resource ftp_stream)
[ftp_nb_fget | Retrieves a file from the FTP server and writes it to an open file (non-blocking), returns int]
ftp_nb_fget(|resource ftp_stream, resource handle, string remote_file, int mode, [int resumepos])
[ftp_nb_fput | Stores a file from an open file to the FTP server (non-blocking), returns int]
ftp_nb_fput(|resource ftp_stream, string remote_file, resource handle, int mode, [int startpos])
[ftp_nb_get | Retrieves a file from the FTP server and writes it to a local file (non-blocking), returns int]
ftp_nb_get(|resource ftp_stream, string local_file, string remote_file, int mode, [int resumepos])
[ftp_nb_put | Stores a file on the FTP server (non-blocking), returns int]
ftp_nb_put(|resource ftp_stream, string remote_file, string local_file, int mode, [int startpos])
[ftp_nlist | Returns a list of files in the given directory, returns array]
ftp_nlist(|resource ftp_stream, string directory)
[ftp_pasv | Turns passive mode on or off, returns bool]
ftp_pasv(|resource ftp_stream, bool pasv)
[ftp_put | Uploads a file to the FTP server, returns bool]
ftp_put(|resource ftp_stream, string remote_file, string local_file, int mode, [int startpos])
[ftp_pwd | Returns the current directory name, returns string]
ftp_pwd(|resource ftp_stream)
[ftp_quit | Alias of ftp_close]
ftp_quit(|)
[ftp_raw | Sends an arbitrary command to an FTP server, returns array]
ftp_raw(|resource ftp_stream, string command)
[ftp_rawlist | Returns a detailed list of files in the given directory, returns array]
ftp_rawlist(|resource ftp_stream, string directory)
[ftp_rename | Renames a file on the FTP server, returns bool]
ftp_rename(|resource ftp_stream, string from, string to)
[ftp_rmdir | Removes a directory, returns bool]
ftp_rmdir(|resource ftp_stream, string directory)
[ftp_set_option | Set miscellaneous runtime FTP options, returns bool]
ftp_set_option(|resource ftp_stream, int option, mixed value)
[ftp_site | Sends a SITE command to the server, returns bool]
ftp_site(|resource ftp_stream, string cmd)
[ftp_size | Returns the size of the given file, returns int]
ftp_size(|resource ftp_stream, string remote_file)
[ftp_ssl_connect | Opens an Secure SSL-FTP connection, returns resource]
ftp_ssl_connect(|string host, [int port], [int timeout])
[ftp_systype | Returns the system type identifier of the remote FTP server, returns string]
ftp_systype(|resource ftp_stream)
; -----------------------------------------------------------------------------
; Function handling - Function Handling functions
; -----------------------------------------------------------------------------
[call_user_func_array | Call a user function given with an array of parameters, returns mixed]
call_user_func_array(|callback function, [array param_arr])
[call_user_func | Call a user function given by the first parameter, returns mixed]
call_user_func(|callback function, [mixed parameter], [mixed ...])
[create_function | Create an anonymous (lambda-style) function, returns string]
create_function(|string args, string code)
[func_get_arg | Return an item from the argument list, returns mixed]
func_get_arg(|int arg_num)
[func_get_args | Returns an array comprising a function's argument list, returns array]
func_get_args()|
[func_num_args | Returns the number of arguments passed to the function, returns int]
func_num_args()|
[function_exists | Return TRUE if the given function has been defined, returns bool]
function_exists(|string function_name)
[get_defined_functions | Returns an array of all defined functions, returns array]
get_defined_functions()|
[register_shutdown_function | Register a function for execution on shutdown, returns void]
register_shutdown_function(|callback function)
[register_tick_function | Register a function for execution on each tick, returns void]
register_tick_function(|callback function, [mixed arg])
[unregister_tick_function | De-register a function for execution on each tick, returns void]
unregister_tick_function(|string function_name)
; -----------------------------------------------------------------------------
; gettext - Gettext
; -----------------------------------------------------------------------------
[bind_textdomain_codeset | Specify the character encoding in which the messages from the DOMAIN message catalog will be returned, returns string]
bind_textdomain_codeset(|string domain, string codeset)
[bindtextdomain | Sets the path for a domain, returns string]
bindtextdomain(|string domain, string directory)
[dcgettext | Overrides the domain for a single lookup, returns string]
dcgettext(|string domain, string message, int category)
[dcngettext | Plural version of dcgettext, returns string]
dcngettext(|string domain, string msgid1, string msgid2, int n, int category)
[dgettext | Override the current domain, returns string]
dgettext(|string domain, string message)
[dngettext | Plural version of dgettext, returns string]
dngettext(|string domain, string msgid1, string msgid2, int n)
[gettext | Lookup a message in the current domain, returns string]
gettext(|string message)
[ngettext | Plural version of gettext, returns string]
ngettext(|string msgid1, string msgid2, int n)
[textdomain | Sets the default domain, returns string]
textdomain(|string text_domain)
; -----------------------------------------------------------------------------
; GMP - GMP functions
; -----------------------------------------------------------------------------
[gmp_abs | Absolute value, returns resource]
gmp_abs(|resource a)
[gmp_add | Add numbers, returns resource]
gmp_add(|resource a, resource b)
[gmp_and | Logical AND, returns resource]
gmp_and(|resource a, resource b)
[gmp_clrbit | Clear bit, returns resource]
gmp_clrbit(|resource &a, int index)
[gmp_cmp | Compare numbers, returns int]
gmp_cmp(|resource a, resource b)
[gmp_com | Calculates one's complement of a, returns resource]
gmp_com(|resource a)
[gmp_div_q | Divide numbers, returns resource]
gmp_div_q(|resource a, resource b, [int round])
[gmp_div_qr | Divide numbers and get quotient and remainder, returns array]
gmp_div_qr(|resource n, resource d, [int round])
[gmp_div_r | Remainder of the division of numbers, returns resource]
gmp_div_r(|resource n, resource d, [int round])
[gmp_div | Alias of gmp_div_q]
gmp_div(|)
[gmp_divexact | Exact division of numbers, returns resource]
gmp_divexact(|resource n, resource d)
[gmp_fact | Factorial, returns resource]
gmp_fact(|int a)
[gmp_gcd | Calculate GCD, returns resource]
gmp_gcd(|resource a, resource b)
[gmp_gcdext | Calculate GCD and multipliers, returns array]
gmp_gcdext(|resource a, resource b)
[gmp_hamdist | Hamming distance, returns int]
gmp_hamdist(|resource a, resource b)
[gmp_init | Create GMP number, returns resource]
gmp_init(|mixed number)
[gmp_intval | Convert GMP number to integer, returns int]
gmp_intval(|resource gmpnumber)
[gmp_invert | Inverse by modulo, returns resource]
gmp_invert(|resource a, resource b)
[gmp_jacobi | Jacobi symbol, returns int]
gmp_jacobi(|resource a, resource p)
[gmp_legendre | Legendre symbol, returns int]
gmp_legendre(|resource a, resource p)
[gmp_mod | Modulo operation, returns resource]
gmp_mod(|resource n, resource d)
[gmp_mul | Multiply numbers, returns resource]
gmp_mul(|resource a, resource b)
[gmp_neg | Negate number, returns resource]
gmp_neg(|resource a)
[gmp_or | Logical OR, returns resource]
gmp_or(|resource a, resource b)
[gmp_perfect_square | Perfect square check, returns bool]
gmp_perfect_square(|resource a)
[gmp_popcount | Population count, returns int]
gmp_popcount(|resource a)
[gmp_pow | Raise number into power, returns resource]
gmp_pow(|resource base, int exp)
[gmp_powm | Raise number into power with modulo, returns resource]
gmp_powm(|resource base, resource exp, resource mod)
[gmp_prob_prime | Check if number is "probably prime", returns int]
gmp_prob_prime(|resource a, [int reps])
[gmp_random | Random number, returns resource]
gmp_random(|int limiter)
[gmp_scan0 | Scan for 0, returns int]
gmp_scan0(|resource a, int start)
[gmp_scan1 | Scan for 1, returns int]
gmp_scan1(|resource a, int start)
[gmp_setbit | Set bit, returns resource]
gmp_setbit(|resource &a, int index, [bool set_clear])
[gmp_sign | Sign of number, returns int]
gmp_sign(|resource a)
[gmp_sqrt | Square root, returns resource]
gmp_sqrt(|resource a)
[gmp_sqrtrm | Square root with remainder, returns array]
gmp_sqrtrm(|resource a)
[gmp_strval | Convert GMP number to string, returns string]
gmp_strval(|resource gmpnumber, [int base])
[gmp_sub | Subtract numbers, returns resource]
gmp_sub(|resource a, resource b)
[gmp_xor | Logical XOR, returns resource]
gmp_xor(|resource a, resource b)
; -----------------------------------------------------------------------------
; HTTP - HTTP functions
; -----------------------------------------------------------------------------
[header | Send a raw HTTP header, returns int]
header(|string string, [bool replace], [int http_response_code])
[headers_list | Returns a list of response headers sent (or ready to send), returns array]
headers_list()|
[headers_sent | Checks if or where headers have been sent, returns bool]
headers_sent(|[string &file], [int &line])
[setcookie | Send a cookie, returns bool]
setcookie(|string name, [string value], [int expire], [string path], [string domain], [int secure])
; -----------------------------------------------------------------------------
; Hyperwave - Hyperwave functions
; -----------------------------------------------------------------------------
[hw_Array2Objrec | convert attributes from object array to object record, returns string]
hw_array2objrec(|array object_array)
[hw_changeobject | Changes attributes of an object (obsolete), returns void]
hw_changeobject(|int link, int objid, array attributes)
[hw_Children | object ids of children, returns array]
hw_children(|int connection, int objectID)
[hw_ChildrenObj | object records of children, returns array]
hw_childrenobj(|int connection, int objectID)
[hw_Close | closes the Hyperwave connection, returns int]
hw_close(|int connection)
[hw_Connect | opens a connection, returns int]
hw_connect(|string host, int port, string username, string password)
[hw_connection_info | Prints information about the connection to Hyperwave server, returns void]
hw_connection_info(|int link)
[hw_cp | Copies objects, returns int]
hw_cp(|int connection, array object_id_array, int destination_id)
[hw_Deleteobject | deletes object, returns int]
hw_deleteobject(|int connection, int object_to_delete)
[hw_DocByAnchor | object id object belonging to anchor, returns int]
hw_docbyanchor(|int connection, int anchorID)
[hw_DocByAnchorObj | object record object belonging to anchor, returns string]
hw_docbyanchorobj(|int connection, int anchorID)
[hw_Document_Attributes | object record of hw_document, returns string]
hw_document_attributes(|int hw_document)
[hw_Document_BodyTag | body tag of hw_document, returns string]
hw_document_bodytag(|int hw_document)
[hw_Document_Content | returns content of hw_document, returns string]
hw_document_content(|int hw_document)
[hw_Document_SetContent | sets/replaces content of hw_document, returns string]
hw_document_setcontent(|int hw_document, string content)
[hw_Document_Size | size of hw_document, returns int]
hw_document_size(|int hw_document)
[hw_dummy | Hyperwave dummy function, returns string]
hw_dummy(|int link, int id, int msgid)
[hw_EditText | retrieve text document, returns int]
hw_edittext(|int connection, int hw_document)
[hw_Error | error number, returns int]
hw_error(|int connection)
[hw_ErrorMsg | returns error message, returns string]
hw_errormsg(|int connection)
[hw_Free_Document | frees hw_document, returns int]
hw_free_document(|int hw_document)
[hw_GetAnchors | object ids of anchors of document, returns array]
hw_getanchors(|int connection, int objectID)
[hw_GetAnchorsObj | object records of anchors of document, returns array]
hw_getanchorsobj(|int connection, int objectID)
[hw_GetAndLock | return bject record and lock object, returns string]
hw_getandlock(|int connection, int objectID)
[hw_GetChildColl | object ids of child collections, returns array]
hw_getchildcoll(|int connection, int objectID)
[hw_GetChildCollObj | object records of child collections, returns array]
hw_getchildcollobj(|int connection, int objectID)
[hw_GetChildDocColl | object ids of child documents of collection, returns array]
hw_getchilddoccoll(|int connection, int objectID)
[hw_GetChildDocCollObj | object records of child documents of collection, returns array]
hw_getchilddoccollobj(|int connection, int objectID)
[hw_GetObject | object record, returns array]
hw_getobject(|int connection, mixed objectID, string query)
[hw_GetObjectByQuery | search object, returns array]
hw_getobjectbyquery(|int connection, string query, int max_hits)
[hw_GetObjectByQueryColl | search object in collection, returns array]
hw_getobjectbyquerycoll(|int connection, int objectID, string query, int max_hits)
[hw_GetObjectByQueryCollObj | search object in collection, returns array]
hw_getobjectbyquerycollobj(|int connection, int objectID, string query, int max_hits)
[hw_GetObjectByQueryObj | search object, returns array]
hw_getobjectbyqueryobj(|int connection, string query, int max_hits)
[hw_GetParents | object ids of parents, returns array]
hw_getparents(|int connection, int objectID)
[hw_GetParentsObj | object records of parents, returns array]
hw_getparentsobj(|int connection, int objectID)
[hw_getrellink | Get link from source to dest relative to rootid, returns string]
hw_getrellink(|int link, int rootid, int sourceid, int destid)
[hw_GetRemote | Gets a remote document, returns int]
hw_getremote(|int connection, int objectID)
[hw_getremotechildren | Gets children of remote document, returns int]
hw_getremotechildren(|int connection, string object_record)
[hw_GetSrcByDestObj | Returns anchors pointing at object, returns array]
hw_getsrcbydestobj(|int connection, int objectID)
[hw_GetText | retrieve text document, returns int]
hw_gettext(|int connection, int objectID, [mixed rootID/prefix])
[hw_getusername | name of currently logged in user, returns string]
hw_getusername(|int connection)
[hw_Identify | identifies as user, returns int]
hw_identify(|string username, string password)
[hw_InCollections | check if object ids in collections, returns array]
hw_incollections(|int connection, array object_id_array, array collection_id_array, int return_collections)
[hw_Info | info about connection, returns string]
hw_info(|int connection)
[hw_InsColl | insert collection, returns int]
hw_inscoll(|int connection, int objectID, array object_array)
[hw_InsDoc | insert document, returns int]
hw_insdoc(|int connection, int parentID, string object_record, string text)
[hw_insertanchors | Inserts only anchors into text, returns string]
hw_insertanchors(|int hwdoc, array anchorecs, array dest, [array urlprefixes])
[hw_InsertDocument | upload any document, returns int]
hw_insertdocument(|int connection, int parent_id, int hw_document)
[hw_InsertObject | inserts an object record, returns int]
hw_insertobject(|int connection, string object_rec, string parameter)
[hw_mapid | Maps global id on virtual local id, returns int]
hw_mapid(|int connection, int server_id, int object_id)
[hw_Modifyobject | modifies object record, returns int]
hw_modifyobject(|int connection, int object_to_change, array remove, array add, int mode)
[hw_mv | Moves objects, returns int]
hw_mv(|int connection, array object_id_array, int source_id, int destination_id)
[hw_New_Document | create new document, returns int]
hw_new_document(|string object_record, string document_data, int document_size)
[hw_objrec2array | Convert attributes from object record to object array, returns array]
hw_objrec2array(|string object_record, [array format])
[hw_Output_Document | prints hw_document, returns int]
hw_output_document(|int hw_document)
[hw_pConnect | make a persistent database connection, returns int]
hw_pconnect(|string host, int port, string username, string password)
[hw_PipeDocument | retrieve any document, returns int]
hw_pipedocument(|int connection, int objectID)
[hw_Root | root object id, returns int]
hw_root(| )
[hw_setlinkroot | Set the id to which links are calculated, returns void]
hw_setlinkroot(|int link, int rootid)
[hw_stat | Returns status string, returns string]
hw_stat(|int link)
[hw_Unlock | unlock object, returns int]
hw_unlock(|int connection, int objectID)
[hw_Who | List of currently logged in users, returns int]
hw_who(|int connection)
; -----------------------------------------------------------------------------
; Hyperwave API - Hyperwave API functions
; -----------------------------------------------------------------------------
[hw_api_attribute->key | Returns key of the attribute, returns string]
key(|void )
[hw_api_attribute->langdepvalue | Returns value for a given language, returns string]
langdepvalue(|string language)
[hw_api_attribute->value | Returns value of the attribute, returns string]
value(|void )
[hw_api_attribute->values | Returns all values of the attribute, returns array]
values(|void )
[hw_api_attribute | Creates instance of class hw_api_attribute, returns object]
attribute(|[string name], [string value])
[hw_api->checkin | Checks in an object, returns object]
checkin(|array parameter)
[hw_api->checkout | Checks out an object, returns object]
checkout(|array parameter)
[hw_api->children | Returns children of an object, returns array]
children(|array parameter)
[hw_api_content->mimetype | Returns mimetype, returns string]
mimetype(|void )
[hw_api_content->read | Read content, returns string]
read(|string buffer, integer len)
[hw_api->content | Returns content of an object, returns object]
content(|array parameter)
[hw_api->copy | Copies physically, returns object]
copy(|array parameter)
[hw_api->dbstat | Returns statistics about database server, returns object]
dbstat(|array parameter)
[hw_api->dcstat | Returns statistics about document cache server, returns object]
dcstat(|array parameter)
[hw_api->dstanchors | Returns a list of all destination anchors, returns object]
dstanchors(|array parameter)
[hw_api->dstofsrcanchors | Returns destination of a source anchor, returns object]
dstofsrcanchors(|array parameter)
[hw_api_error->count | Returns number of reasons, returns int]
count(|void )
[hw_api_error->reason | Returns reason of error, returns object]
reason(|void )
[hw_api->find | Search for objects, returns array]
find(|array parameter)
[hw_api->ftstat | Returns statistics about fulltext server, returns object]
ftstat(|array parameter)
[hwapi_hgcsp | Returns object of class hw_api, returns object]
hwapi_hgcsp(|string hostname, [int port])
[hw_api->hwstat | Returns statistics about Hyperwave server, returns object]
hwstat(|array parameter)
[hw_api->identify | Log into Hyperwave Server, returns object]
identify(|array parameter)
[hw_api->info | Returns information about server configuration, returns object]
info(|array parameter)
[hw_api->insert | Inserts a new object, returns object]
insert(|array parameter)
[hw_api->insertanchor | Inserts a new object of type anchor, returns object]
insertanchor(|array parameter)
[hw_api->insertcollection | Inserts a new object of type collection, returns object]
insertcollection(|array parameter)
[hw_api->insertdocument | Inserts a new object of type document, returns object]
insertdocument(|array parameter)
[hw_api->link | Creates a link to an object, returns object]
link(|array parameter)
[hw_api->lock | Locks an object, returns object]
lock(|array parameter)
[hw_api->move | Moves object between collections, returns object]
move(|array parameter)
[hw_api_content | Create new instance of class hw_api_content, returns string]
content(|string content, string mimetype)
[hw_api_object->assign | Clones object, returns object]
assign(|array parameter)
[hw_api_object->attreditable | Checks whether an attribute is editable, returns bool]
attreditable(|array parameter)
[hw_api_object->count | Returns number of attributes, returns int]
count(|array parameter)
[hw_api_object->insert | Inserts new attribute, returns bool]
insert(|object attribute)
[hw_api_object | Creates a new instance of class hw_api_object, returns object]
hw_api_object(|array parameter)
[hw_api_object->remove | Removes attribute, returns bool]
remove(|string name)
[hw_api_object->title | Returns the title attribute, returns string]
title(|array parameter)
[hw_api_object->value | Returns value of attribute, returns string]
value(|string name)
[hw_api->object | Retrieve attribute information, returns object]
hw_api->object(|array parameter)
[hw_api->objectbyanchor | Returns the object an anchor belongs to, returns object]
objectbyanchor(|array parameter)
[hw_api->parents | Returns parents of an object, returns array]
parents(|array parameter)
[hw_api_reason->description | Returns description of reason, returns string]
description(|void )
[hw_api_reason->type | Returns type of reason, returns object]
type(|void )
[hw_api->remove | Delete an object, returns object]
remove(|array parameter)
[hw_api->replace | Replaces an object, returns object]
replace(|array parameter)
[hw_api->setcommitedversion | Commits version other than last version, returns object]
setcommitedversion(|array parameter)
[hw_api->srcanchors | Returns a list of all source anchors, returns object]
srcanchors(|array parameter)
[hw_api->srcsofdst | Returns source of a destination object, returns object]
srcsofdst(|array parameter)
[hw_api->unlock | Unlocks a locked object, returns object]
unlock(|array parameter)
[hw_api->user | Returns the own user object, returns object]
user(|array parameter)
[hw_api->userlist | Returns a list of all logged in users, returns object]
userlist(|array parameter)
; -----------------------------------------------------------------------------
; iconv - iconv functions
; -----------------------------------------------------------------------------
[iconv_get_encoding | Get current setting for character encoding conversion, returns array]
iconv_get_encoding(|[string type])
[iconv_mime_decode | Decodes a mime header field, returns string]
iconv_mime_decode(|string encoded_string, [string charset])
[iconv_mime_encode | Composes a mime header field with field_name and field_value in a specified scheme, returns string]
iconv_mime_encode(|string field_name, string field_value, [array preference])
[iconv_set_encoding | Set current setting for character encoding conversion, returns bool]
iconv_set_encoding(|string type, string charset)
[iconv_strlen | Returns the character count of string, returns int]
iconv_strlen(|string str, [string charset])
[iconv_strpos | Finds position of first occurrence of a needle within a haystack., returns int]
iconv_strpos(|string haystack, string needle, int offset, [string charset])
[iconv_strrpos | Finds position of last occurrence of needle within part of haystack beginning with offset, returns string]
iconv_strrpos(|string haystack, string needle, [string charset])
[iconv_substr | Returns specified part of a string, returns string]
iconv_substr(|string str, int offset, [int length], [string charset])
[iconv | Convert string to requested character encoding, returns string]
iconv(|string in_charset, string out_charset, string str)
[ob_iconv_handler | Convert character encoding as output buffer handler, returns array]
ob_iconv_handler(|string contents, int status)
; -----------------------------------------------------------------------------
; Image - Image functions
; -----------------------------------------------------------------------------
[exif_imagetype | Determine the type of an image, returns int]
exif_imagetype(|string filename)
[exif_read_data | Reads the EXIF headers from JPEG or TIFF. This way you can read meta data generated by digital cameras., returns array]
exif_read_data(|string filename, [string sections], [bool arrays], [bool thumbnail])
[exif_thumbnail | Retrieve the embedded thumbnail of a TIFF or JPEG image, returns string]
exif_thumbnail(|string filename, [int &width], [int &height], [int &imagetype])
[gd_info | Retrieve information about the currently installed GD library, returns array]
gd_info()|
[getimagesize | Get the size of an image, returns array]
getimagesize(|string filename, [array imageinfo])
[image_type_to_mime_type | Get Mime-Type for image-type returned by getimagesize, exif_read_data, exif_thumbnail, exif_imagetype, returns string]
image_type_to_mime_type(|int imagetype)
[image2wbmp | Output image to browser or file, returns int]
image2wbmp(|resource image, [string filename], [int threshold])
[imagealphablending | Set the blending mode for an image, returns bool]
imagealphablending(|resource image, bool blendmode)
[imageantialias | Should antialias functions be used or not, returns bool]
imageantialias(|resource im, bool on)
[imagearc | Draw a partial ellipse, returns int]
imagearc(|resource image, int cx, int cy, int w, int h, int s, int e, int color)
[imagechar | Draw a character horizontally, returns int]
imagechar(|resource image, int font, int x, int y, string c, int color)
[imagecharup | Draw a character vertically, returns int]
imagecharup(|resource image, int font, int x, int y, string c, int color)
[imagecolorallocate | Allocate a color for an image, returns int]
imagecolorallocate(|resource image, int red, int green, int blue)
[imagecolorallocatealpha | Allocate a color for an image, returns int]
imagecolorallocatealpha(|resource image, int red, int green, int blue, int alpha)
[imagecolorat | Get the index of the color of a pixel, returns int]
imagecolorat(|resource image, int x, int y)
[imagecolorclosest | Get the index of the closest color to the specified color, returns int]
imagecolorclosest(|resource image, int red, int green, int blue)
[imagecolorclosestalpha | Get the index of the closest color to the specified color + alpha, returns int]
imagecolorclosestalpha(|resource image, int red, int green, int blue, int alpha)
[imagecolorclosesthwb | Get the index of the color which has the hue, white and blackness nearest to the given color, returns int]
imagecolorclosesthwb(|resource image, int red, int green, int blue)
[imagecolordeallocate | De-allocate a color for an image, returns int]
imagecolordeallocate(|resource image, int color)
[imagecolorexact | Get the index of the specified color, returns int]
imagecolorexact(|resource image, int red, int green, int blue)
[imagecolorexactalpha | Get the index of the specified color + alpha, returns int]
imagecolorexactalpha(|resource image, int red, int green, int blue, int alpha)
[imagecolormatch | Makes the colors of the palette version of an image more closely match the true color version, returns bool]
imagecolormatch(|resource image1, resource image2)
[imagecolorresolve | Get the index of the specified color or its closest possible alternative, returns int]
imagecolorresolve(|resource image, int red, int green, int blue)
[imagecolorresolvealpha | Get the index of the specified color + alpha or its closest possible alternative, returns int]
imagecolorresolvealpha(|resource image, int red, int green, int blue, int alpha)
[imagecolorset | Set the color for the specified palette index, returns bool]
imagecolorset(|resource image, int index, int red, int green, int blue)
[imagecolorsforindex | Get the colors for an index, returns array]
imagecolorsforindex(|resource image, int index)
[imagecolorstotal | Find out the number of colors in an image's palette, returns int]
imagecolorstotal(|resource image)
[imagecolortransparent | Define a color as transparent, returns int]
imagecolortransparent(|resource image, [int color])
[imagecopy | Copy part of an image, returns int]
imagecopy(|resource dst_im, resource src_im, int dst_x, int dst_y, int src_x, int src_y, int src_w, int src_h)
[imagecopymerge | Copy and merge part of an image, returns int]
imagecopymerge(|resource dst_im, resource src_im, int dst_x, int dst_y, int src_x, int src_y, int src_w, int src_h, int pct)
[imagecopymergegray | Copy and merge part of an image with gray scale, returns int]
imagecopymergegray(|resource dst_im, resource src_im, int dst_x, int dst_y, int src_x, int src_y, int src_w, int src_h, int pct)
[imagecopyresampled | Copy and resize part of an image with resampling, returns bool]
imagecopyresampled(|resource dst_im, resource src_im, int dstX, int dstY, int srcX, int srcY, int dstW, int dstH, int srcW, int srcH)
[imagecopyresized | Copy and resize part of an image, returns int]
imagecopyresized(|resource dst_im, resource src_im, int dstX, int dstY, int srcX, int srcY, int dstW, int dstH, int srcW, int srcH)
[imagecreate | Create a new palette based image, returns resource]
imagecreate(|int x_size, int y_size)
[imagecreatefromgd2 | Create a new image from GD2 file or URL, returns resource]
imagecreatefromgd2(|string filename)
[imagecreatefromgd2part | Create a new image from a given part of GD2 file or URL, returns resource]
imagecreatefromgd2part(|string filename, int srcX, int srcY, int width, int height)
[imagecreatefromgd | Create a new image from GD file or URL, returns resource]
imagecreatefromgd(|string filename)
[imagecreatefromgif | Create a new image from file or URL, returns resource]
imagecreatefromgif(|string filename)
[imagecreatefromjpeg | Create a new image from file or URL, returns resource]
imagecreatefromjpeg(|string filename)
[imagecreatefrompng | Create a new image from file or URL, returns resource]
imagecreatefrompng(|string filename)
[imagecreatefromstring | Create a new image from the image stream in the string, returns resource]
imagecreatefromstring(|string image)
[imagecreatefromwbmp | Create a new image from file or URL, returns resource]
imagecreatefromwbmp(|string filename)
[imagecreatefromxbm | Create a new image from file or URL, returns resource]
imagecreatefromxbm(|string filename)
[imagecreatefromxpm | Create a new image from file or URL, returns resource]
imagecreatefromxpm(|string filename)
[imagecreatetruecolor | Create a new true color image, returns resource]
imagecreatetruecolor(|int x_size, int y_size)
[imagedashedline | Draw a dashed line, returns int]
imagedashedline(|resource image, int x1, int y1, int x2, int y2, int color)
[imagedestroy | Destroy an image, returns int]
imagedestroy(|resource image)
[imageellipse | Draw an ellipse, returns int]
imageellipse(|resource image, int cx, int cy, int w, int h, int color)
[imagefill | Flood fill, returns int]
imagefill(|resource image, int x, int y, int color)
[imagefilledarc | Draw a partial ellipse and fill it, returns bool]
imagefilledarc(|resource image, int cx, int cy, int w, int h, int s, int e, int color, int style)
[imagefilledellipse | Draw a filled ellipse, returns bool]
imagefilledellipse(|resource image, int cx, int cy, int w, int h, int color)
[imagefilledpolygon | Draw a filled polygon, returns int]
imagefilledpolygon(|resource image, array points, int num_points, int color)
[imagefilledrectangle | Draw a filled rectangle, returns int]
imagefilledrectangle(|resource image, int x1, int y1, int x2, int y2, int color)
[imagefilltoborder | Flood fill to specific color, returns int]
imagefilltoborder(|resource image, int x, int y, int border, int color)
[imagefontheight | Get font height, returns int]
imagefontheight(|int font)
[imagefontwidth | Get font width, returns int]
imagefontwidth(|int font)
[imageftbbox | Give the bounding box of a text using fonts via freetype2, returns array]
imageftbbox(|int size, int angle, string font_file, string text, [array extrainfo])
[imagefttext | Write text to the image using fonts using FreeType 2, returns array]
imagefttext(|resource image, int size, int angle, int x, int y, int col, string font_file, string text, [array extrainfo])
[imagegammacorrect | Apply a gamma correction to a GD image, returns int]
imagegammacorrect(|resource image, float inputgamma, float outputgamma)
[imagegd2 | Output GD2 image, returns int]
imagegd2(|resource image, [string filename], [int chunk_size], [int type])
[imagegd | Output GD image to browser or file, returns int]
imagegd(|resource image, [string filename])
[imagegif | Output image to browser or file, returns int]
imagegif(|resource image, [string filename])
[imageinterlace | Enable or disable interlace, returns int]
imageinterlace(|resource image, [int interlace])
[imageistruecolor | Finds whether an image is a truecolor image., returns bool]
imageistruecolor(|resource image)
[imagejpeg | Output image to browser or file, returns int]
imagejpeg(|resource image, [string filename], [int quality])
[imageline | Draw a line, returns int]
imageline(|resource image, int x1, int y1, int x2, int y2, int color)
[imageloadfont | Load a new font, returns int]
imageloadfont(|string file)
[imagepalettecopy | Copy the palette from one image to another, returns int]
imagepalettecopy(|resource destination, resource source)
[imagepng | Output a PNG image to either the browser or a file, returns int]
imagepng(|resource image, [string filename])
[imagepolygon | Draw a polygon, returns int]
imagepolygon(|resource image, array points, int num_points, int color)
[imagepsbbox | Give the bounding box of a text rectangle using PostScript Type1 fonts, returns array]
imagepsbbox(|string text, int font, int size, [int space], [int tightness], [float angle])
[imagepscopyfont | Make a copy of an already loaded font for further modification, returns int]
imagepscopyfont(|int fontindex)
[imagepsencodefont | Change the character encoding vector of a font, returns int]
imagepsencodefont(|int font_index, string encodingfile)
[imagepsextendfont | Extend or condense a font, returns bool]
imagepsextendfont(|int font_index, float extend)
[imagepsfreefont | Free memory used by a PostScript Type 1 font, returns void]
imagepsfreefont(|int fontindex)
[imagepsloadfont | Load a PostScript Type 1 font from file, returns int]
imagepsloadfont(|string filename)
[imagepsslantfont | Slant a font, returns bool]
imagepsslantfont(|int font_index, float slant)
[imagepstext | To draw a text string over an image using PostScript Type1 fonts, returns array]
imagepstext(|resource image, string text, int font, int size, int foreground, int background, int x, int y, [int space], [int tightness], [float angle], [int antialias_steps])
[imagerectangle | Draw a rectangle, returns int]
imagerectangle(|resource image, int x1, int y1, int x2, int y2, int col)
[imagerotate | Rotate an image with a given angle, returns resource]
imagerotate(|resource src_im, float angle, int bgd_color)
[imagesavealpha | Set the flag to save full alpha channel information (as opposed to single-color transparency) when saving PNG images., returns bool]
imagesavealpha(|resource image, bool saveflag)
[imagesetbrush | Set the brush image for line drawing, returns int]
imagesetbrush(|resource image, resource brush)
[imagesetpixel | Set a single pixel, returns int]
imagesetpixel(|resource image, int x, int y, int color)
[imagesetstyle | Set the style for line drawing, returns bool]
imagesetstyle(|resource image, array style)
[imagesetthickness | Set the thickness for line drawing, returns bool]
imagesetthickness(|resource image, int thickness)
[imagesettile | Set the tile image for filling, returns int]
imagesettile(|resource image, resource tile)
[imagestring | Draw a string horizontally, returns int]
imagestring(|resource image, int font, int x, int y, string s, int col)
[imagestringup | Draw a string vertically, returns int]
imagestringup(|resource image, int font, int x, int y, string s, int col)
[imagesx | Get image width, returns int]
imagesx(|resource image)
[imagesy | Get image height, returns int]
imagesy(|resource image)
[imagetruecolortopalette | Convert a true color image to a palette image, returns void]
imagetruecolortopalette(|resource image, bool dither, int ncolors)
[imagettfbbox | Give the bounding box of a text using TrueType fonts, returns array]
imagettfbbox(|int size, int angle, string fontfile, string text)
[imagettftext | Write text to the image using TrueType fonts, returns array]
imagettftext(|resource image, int size, int angle, int x, int y, int color, string fontfile, string text)
[imagetypes | Return the image types supported by this PHP build, returns int]
imagetypes()|
[imagewbmp | Output image to browser or file, returns int]
imagewbmp(|resource image, [string filename], [int foreground])
[iptcembed | Embed binary IPTC data into a JPEG image, returns array]
iptcembed(|string iptcdata, string jpeg_file_name, [int spool])
[iptcparse | Parse a binary IPTC http://www.iptc.org/ block into single tags., returns array]
iptcparse(|string iptcblock)
[jpeg2wbmp | Convert JPEG image file to WBMP image file, returns int]
jpeg2wbmp(|string jpegname, string wbmpname, int d_height, int d_width, int threshold)
[png2wbmp | Convert PNG image file to WBMP image file, returns int]
png2wbmp(|string pngname, string wbmpname, int d_height, int d_width, int threshold)
[read_exif_data | Alias of exif_read_data]
read_exif_data(|)
; -----------------------------------------------------------------------------
; IMAP - IMAP, POP3 and NNTP functions
; -----------------------------------------------------------------------------
[imap_8bit | Convert an 8bit string to a quoted-printable string, returns string]
imap_8bit(|string string)
[imap_alerts | This function returns all IMAP alert messages (if any) that have occurred during this page request or since the alert stack was reset, returns array]
imap_alerts()|
[imap_append | Append a string message to a specified mailbox, returns bool]
imap_append(|resource imap_stream, string mbox, string message, [string options])
[imap_base64 | Decode BASE64 encoded text, returns string]
imap_base64(|string text)
[imap_binary | Convert an 8bit string to a base64 string, returns string]
imap_binary(|string string)
[imap_body | Read the message body, returns string]
imap_body(|resource imap_stream, int msg_number, [int options])
[imap_bodystruct | Read the structure of a specified body section of a specific message, returns object]
imap_bodystruct(|resource stream_id, int msg_no, int section)
[imap_check | Check current mailbox, returns object]
imap_check(|resource imap_stream)
[imap_clearflag_full | Clears flags on messages, returns bool]
imap_clearflag_full(|resource stream, string sequence, string flag, string options)
[imap_close | Close an IMAP stream, returns bool]
imap_close(|resource imap_stream, [int flag])
[imap_createmailbox | Create a new mailbox, returns bool]
imap_createmailbox(|resource imap_stream, string mbox)
[imap_delete | Mark a message for deletion from current mailbox, returns bool]
imap_delete(|int imap_stream, int msg_number, [int options])
[imap_deletemailbox | Delete a mailbox, returns bool]
imap_deletemailbox(|resource imap_stream, string mbox)
[imap_errors | This function returns all of the IMAP errors (if any) that have occurred during this page request or since the error stack was reset., returns array]
imap_errors()|
[imap_expunge | Delete all messages marked for deletion, returns bool]
imap_expunge(|resource imap_stream)
[imap_fetch_overview | Read an overview of the information in the headers of the given message, returns array]
imap_fetch_overview(|resource imap_stream, string sequence, [int options])
[imap_fetchbody | Fetch a particular section of the body of the message, returns string]
imap_fetchbody(|resource imap_stream, int msg_number, string part_number, [flags options])
[imap_fetchheader | Returns header for a message, returns string]
imap_fetchheader(|resource imap_stream, int msgno, int options)
[imap_fetchstructure | Read the structure of a particular message, returns object]
imap_fetchstructure(|resource imap_stream, int msg_number, [int options])
[imap_get_quota | Retrieve the quota level settings, and usage statics per mailbox, returns array]
imap_get_quota(|resource imap_stream, string quota_root)
[imap_get_quotaroot | Retrieve the quota settings per user, returns array]
imap_get_quotaroot(|resource imap_stream, string quota_root)
[imap_getacl | Gets the ACL for a given mailbox, returns array]
imap_getacl(|resource stream_id, string mailbox)
[imap_getmailboxes | Read the list of mailboxes, returning detailed information on each one, returns array]
imap_getmailboxes(|resource imap_stream, string ref, string pattern)
[imap_getsubscribed | List all the subscribed mailboxes, returns array]
imap_getsubscribed(|resource imap_stream, string ref, string pattern)
[imap_header | Alias of imap_headerinfo]
imap_header(|)
[imap_headerinfo | Read the header of the message, returns object]
imap_headerinfo(|resource imap_stream, int msg_number, [int fromlength], [int subjectlength], [string defaulthost])
[imap_headers | Returns headers for all messages in a mailbox, returns array]
imap_headers(|resource imap_stream)
[imap_last_error | This function returns the last IMAP error (if any) that occurred during this page request, returns string]
imap_last_error()|
[imap_list | Read the list of mailboxes, returns array]
imap_list(|resource imap_stream, string ref, string pattern)
[imap_listmailbox | Alias of imap_list]
imap_listmailbox(|)
[imap_listscan | Read the list of mailboxes, takes a string to search for in the text of the mailbox, returns array]
imap_listscan(|resource imap_stream, string ref, string pattern, string content)
[imap_listsubscribed | Alias of imap_lsub]
imap_listsubscribed(|)
[imap_lsub | List all the subscribed mailboxes, returns array]
imap_lsub(|resource imap_stream, string ref, string pattern)
[imap_mail_compose | Create a MIME message based on given envelope and body sections, returns string]
imap_mail_compose(|array envelope, array body)
[imap_mail_copy | Copy specified messages to a mailbox, returns bool]
imap_mail_copy(|resource imap_stream, string msglist, string mbox, [int options])
[imap_mail_move | Move specified messages to a mailbox, returns bool]
imap_mail_move(|resource imap_stream, string msglist, string mbox, [int options])
[imap_mail | Send an email message, returns bool]
imap_mail(|string to, string subject, string message, [string additional_headers], [string cc], [string bcc], [string rpath])
[imap_mailboxmsginfo | Get information about the current mailbox, returns object]
imap_mailboxmsginfo(|resource imap_stream)
[imap_mime_header_decode | Decode MIME header elements, returns array]
imap_mime_header_decode(|string text)
[imap_msgno | This function returns the message sequence number for the given UID, returns int]
imap_msgno(|resource imap_stream, int uid)
[imap_num_msg | Gives the number of messages in the current mailbox, returns int]
imap_num_msg(|resource imap_stream)
[imap_num_recent | Gives the number of recent messages in current mailbox, returns int]
imap_num_recent(|resource imap_stream)
[imap_open | Open an IMAP stream to a mailbox, returns resource]
imap_open(|string mailbox, string username, string password, [int options])
[imap_ping | Check if the IMAP stream is still active, returns bool]
imap_ping(|resource imap_stream)
[imap_qprint | Convert a quoted-printable string to an 8 bit string, returns string]
imap_qprint(|string string)
[imap_renamemailbox | Rename an old mailbox to new mailbox, returns bool]
imap_renamemailbox(|resource imap_stream, string old_mbox, string new_mbox)
[imap_reopen | Reopen IMAP stream to new mailbox, returns bool]
imap_reopen(|resource imap_stream, string mailbox, [string options])
[imap_rfc822_parse_adrlist | Parses an address string, returns array]
imap_rfc822_parse_adrlist(|string address, string default_host)
[imap_rfc822_parse_headers | Parse mail headers from a string, returns object]
imap_rfc822_parse_headers(|string headers, [string defaulthost])
[imap_rfc822_write_address | Returns a properly formatted email address given the mailbox, host, and personal info., returns string]
imap_rfc822_write_address(|string mailbox, string host, string personal)
[imap_scanmailbox | Alias of imap_listscan]
imap_scanmailbox(|)
[imap_search | This function returns an array of messages matching the given search criteria, returns array]
imap_search(|resource imap_stream, string criteria, int options)
[imap_set_quota | Sets a quota for a given mailbox, returns bool]
imap_set_quota(|resource imap_stream, string quota_root, int quota_limit)
[imap_setacl | Sets the ACL for a giving mailbox, returns bool]
imap_setacl(|resource stream_id, string mailbox, string id, string rights)
[imap_setflag_full | Sets flags on messages, returns bool]
imap_setflag_full(|resource stream, string sequence, string flag, string options)
[imap_sort | Sort an array of message headers, returns array]
imap_sort(|resource stream, int criteria, int reverse, [int options], [string search_criteria])
[imap_status | This function returns status information on a mailbox other than the current one, returns object]
imap_status(|resource imap_stream, string mailbox, int options)
[imap_subscribe | Subscribe to a mailbox, returns bool]
imap_subscribe(|resource imap_stream, string mbox)
[imap_thread | Return threaded by REFERENCES tree, returns array]
imap_thread(|resource stream_id, [int options])
[imap_timeout | Set or fetch imap timeout, returns mixed]
imap_timeout(|int timeout_type, [int timeout])
[imap_uid | This function returns the UID for the given message sequence number, returns int]
imap_uid(|resource imap_stream, int msgno)
[imap_undelete | Unmark the message which is marked deleted, returns bool]
imap_undelete(|resource imap_stream, int msg_number)
[imap_unsubscribe | Unsubscribe from a mailbox, returns bool]
imap_unsubscribe(|string imap_stream, string mbox)
[imap_utf7_decode | Decodes a modified UTF-7 encoded string., returns string]
imap_utf7_decode(|string text)
[imap_utf7_encode | Converts ISO-8859-1 string to modified UTF-7 text., returns string]
imap_utf7_encode(|string data)
[imap_utf8 | Converts MIME-encoded text to UTF-8, returns string]
imap_utf8(|string mime_encoded_text)
; -----------------------------------------------------------------------------
; Informix - Informix functions
; -----------------------------------------------------------------------------
[ifx_affected_rows | Get number of rows affected by a query, returns int]
ifx_affected_rows(|int result_id)
[ifx_blobinfile_mode | Set the default blob mode for all select queries, returns void]
ifx_blobinfile_mode(|int mode)
[ifx_byteasvarchar | Set the default byte mode, returns void]
ifx_byteasvarchar(|int mode)
[ifx_close | Close Informix connection, returns int]
ifx_close(|[int link_identifier])
[ifx_connect | Open Informix server connection, returns int]
ifx_connect(|[string database], [string userid], [string password])
[ifx_copy_blob | Duplicates the given blob object, returns int]
ifx_copy_blob(|int bid)
[ifx_create_blob | Creates an blob object, returns int]
ifx_create_blob(|int type, int mode, string param)
[ifx_create_char | Creates an char object, returns int]
ifx_create_char(|string param)
[ifx_do | Execute a previously prepared SQL-statement, returns int]
ifx_do(|int result_id)
[ifx_error | Returns error code of last Informix call, returns string]
ifx_error()|
[ifx_errormsg | Returns error message of last Informix call, returns string]
ifx_errormsg(|[int errorcode])
[ifx_fetch_row | Get row as enumerated array, returns array]
ifx_fetch_row(|int result_id, [mixed position])
[ifx_fieldproperties | List of SQL fieldproperties, returns array]
ifx_fieldproperties(|int result_id)
[ifx_fieldtypes | List of Informix SQL fields, returns array]
ifx_fieldtypes(|int result_id)
[ifx_free_blob | Deletes the blob object, returns int]
ifx_free_blob(|int bid)
[ifx_free_char | Deletes the char object, returns int]
ifx_free_char(|int bid)
[ifx_free_result | Releases resources for the query, returns int]
ifx_free_result(|int result_id)
[ifx_get_blob | Return the content of a blob object, returns int]
ifx_get_blob(|int bid)
[ifx_get_char | Return the content of the char object, returns int]
ifx_get_char(|int bid)
[ifx_getsqlca | Get the contents of sqlca.sqlerrd[0..5] after a query, returns array]
ifx_getsqlca(|int result_id)
[ifx_htmltbl_result | Formats all rows of a query into a HTML table, returns int]
ifx_htmltbl_result(|int result_id, [string html_table_options])
[ifx_nullformat | Sets the default return value on a fetch row, returns void]
ifx_nullformat(|int mode)
[ifx_num_fields | Returns the number of columns in the query, returns int]
ifx_num_fields(|int result_id)
[ifx_num_rows | Count the rows already fetched from a query, returns int]
ifx_num_rows(|int result_id)
[ifx_pconnect | Open persistent Informix connection, returns int]
ifx_pconnect(|[string database], [string userid], [string password])
[ifx_prepare | Prepare an SQL-statement for execution, returns int]
ifx_prepare(|string query, int conn_id, [int cursor_def], mixed blobidarray)
[ifx_query | Send Informix query, returns int]
ifx_query(|string query, int link_identifier, [int cursor_type], [mixed blobidarray])
[ifx_textasvarchar | Set the default text mode, returns void]
ifx_textasvarchar(|int mode)
[ifx_update_blob | Updates the content of the blob object, returns bool]
ifx_update_blob(|int bid, string content)
[ifx_update_char | Updates the content of the char object, returns int]
ifx_update_char(|int bid, string content)
[ifxus_close_slob | Deletes the slob object, returns int]
ifxus_close_slob(|int bid)
[ifxus_create_slob | Creates an slob object and opens it, returns int]
ifxus_create_slob(|int mode)
[ifxus_free_slob | Deletes the slob object, returns int]
ifxus_free_slob(|int bid)
[ifxus_open_slob | Opens an slob object, returns int]
ifxus_open_slob(|long bid, int mode)
[ifxus_read_slob | Reads nbytes of the slob object, returns int]
ifxus_read_slob(|long bid, long nbytes)
[ifxus_seek_slob | Sets the current file or seek position, returns int]
ifxus_seek_slob(|long bid, int mode, long offset)
[ifxus_tell_slob | Returns the current file or seek position, returns int]
ifxus_tell_slob(|long bid)
[ifxus_write_slob | Writes a string into the slob object, returns int]
ifxus_write_slob(|long bid, string content)
; -----------------------------------------------------------------------------
; InterBase - InterBase functions
; -----------------------------------------------------------------------------
[ibase_add_user | Add a user to a security database (only for IB6 or later), returns bool]
ibase_add_user(|string server, string dba_user_name, string dba_user_password, string user_name, string password, [string first_name], [string middle_name], [string last_name])
[ibase_affected_rows | Return the number of rows that were affected by the previous query, returns int]
ibase_affected_rows(|resource link_identifier)
[ibase_blob_add | Add data into a newly created blob, returns bool]
ibase_blob_add(|resource blob_handle, string data)
[ibase_blob_cancel | Cancel creating blob, returns bool]
ibase_blob_cancel(|resource blob_handle)
[ibase_blob_close | Close blob, returns mixed]
ibase_blob_close(|resource blob_handle)
[ibase_blob_create | Create a new blob for adding data, returns resource]
ibase_blob_create(|[resource link_identifier])
[ibase_blob_echo | Output blob contents to browser, returns bool]
ibase_blob_echo(|string blob_id)
[ibase_blob_get | Get len bytes data from open blob, returns string]
ibase_blob_get(|resource blob_handle, int len)
[ibase_blob_import | Create blob, copy file in it, and close it, returns string]
ibase_blob_import(|[resource link_identifier], resource file_handle)
[ibase_blob_info | Return blob length and other useful info, returns array]
ibase_blob_info(|string blob_id)
[ibase_blob_open | Open blob for retrieving data parts, returns resource]
ibase_blob_open(|string blob_id)
[ibase_close | Close a connection to an InterBase database, returns bool]
ibase_close(|[resource connection_id])
[ibase_commit_ret | Commit a transaction without closing it, returns bool]
ibase_commit_ret(|[resource link_identifier])
[ibase_commit | Commit a transaction, returns bool]
ibase_commit(|[resource link_identifier])
[ibase_connect | Open a connection to an InterBase database, returns resource]
ibase_connect(|string database, [string username], [string password], [string charset], [int buffers], [int dialect], [string role])
[ibase_delete_user | Delete a user from a security database (only for IB6 or later), returns bool]
ibase_delete_user(|string server, string dba_user_name, string dba_user_password, string user_name)
[ibase_drop_db | Drops a database, returns bool]
ibase_drop_db(|resource connection)
[ibase_errcode | Return an error code, returns int]
ibase_errcode()|
[ibase_errmsg | Return error messages, returns string]
ibase_errmsg()|
[ibase_execute | Execute a previously prepared query, returns resource]
ibase_execute(|resource query, [int bind_args])
[ibase_fetch_assoc | Fetch a result row from a query as an associative array, returns array]
ibase_fetch_assoc(|resource result, [int fetch_flag])
[ibase_fetch_object | Get an object from a InterBase database, returns object]
ibase_fetch_object(|resource result_id, [int fetch_flag])
[ibase_fetch_row | Fetch a row from an InterBase database, returns array]
ibase_fetch_row(|resource result_identifier, [int fetch_flag])
[ibase_field_info | Get information about a field, returns array]
ibase_field_info(|resource result, int field_number)
[ibase_free_event_handler | Cancels a registered event handler, returns bool]
ibase_free_event_handler(|resource event)
[ibase_free_query | Free memory allocated by a prepared query, returns bool]
ibase_free_query(|resource query)
[ibase_free_result | Free a result set, returns bool]
ibase_free_result(|resource result_identifier)
[ibase_gen_id | Increments the named generator and returns its new value, returns int]
ibase_gen_id(|[resource link_identifier], [string generator], [int increment])
[ibase_modify_user | Modify a user to a security database (only for IB6 or later), returns bool]
ibase_modify_user(|string server, string dba_user_name, string dba_user_password, string user_name, string password, [string first_name], [string middle_name], [string last_name])
[ibase_name_result | Assigns a name to a result set, returns bool]
ibase_name_result(|resource result, string name)
[ibase_num_fields | Get the number of fields in a result set, returns int]
ibase_num_fields(|resource result_id)
[ibase_num_params | Return the number of parameters in a prepared query, returns int]
ibase_num_params(|resource query)
[ibase_param_info | Return information about a parameter in a prepared query, returns array]
ibase_param_info(|resource query, int param_number)
[ibase_pconnect | Open a persistent connection to an InterBase database, returns resource]
ibase_pconnect(|string database, [string username], [string password], [string charset], [int buffers], [int dialect], [string role])
[ibase_prepare | Prepare a query for later binding of parameter placeholders and execution, returns resource]
ibase_prepare(|[resource link_identifier], string query)
[ibase_query | Execute a query on an InterBase database, returns resource]
ibase_query(|[resource link_identifier], string query, [int bind_args])
[ibase_rollback_ret | Roll back a transaction without closing it, returns bool]
ibase_rollback_ret(|[resource link_identifier])
[ibase_rollback | Roll back a transaction, returns bool]
ibase_rollback(|[resource link_identifier])
[ibase_set_event_handler | Register a callback function to be called when events are posted, returns resource]
ibase_set_event_handler(|[resource connection], callback event_handler, string event_name1, [string event_name2], [string ...])
[ibase_timefmt | Sets the format of timestamp, date and time type columns returned from queries, returns int]
ibase_timefmt(|string format, [int columntype])
[ibase_trans | Begin a transaction, returns resource]
ibase_trans(|[int trans_args], [resource link_identifier])
[ibase_wait_event | Wait for an event to be posted by the database, returns string]
ibase_wait_event(|[resource connection], string event_name1, [string event_name2], [string ...])
; -----------------------------------------------------------------------------
; Ingres II - Ingres II functions
; -----------------------------------------------------------------------------
[ingres_autocommit | Switch autocommit on or off, returns bool]
ingres_autocommit(|[resource link])
[ingres_close | Close an Ingres II database connection, returns bool]
ingres_close(|[resource link])
[ingres_commit | Commit a transaction, returns bool]
ingres_commit(|[resource link])
[ingres_connect | Open a connection to an Ingres II database, returns resource]
ingres_connect(|[string database], [string username], [string password])
[ingres_fetch_array | Fetch a row of result into an array, returns array]
ingres_fetch_array(|[int result_type], [resource link])
[ingres_fetch_object | Fetch a row of result into an object., returns object]
ingres_fetch_object(|[int result_type], [resource link])
[ingres_fetch_row | Fetch a row of result into an enumerated array, returns array]
ingres_fetch_row(|[resource link])
[ingres_field_length | Get the length of a field, returns int]
ingres_field_length(|int index, [resource link])
[ingres_field_name | Get the name of a field in a query result., returns string]
ingres_field_name(|int index, [resource link])
[ingres_field_nullable | Test if a field is nullable, returns bool]
ingres_field_nullable(|int index, [resource link])
[ingres_field_precision | Get the precision of a field, returns int]
ingres_field_precision(|int index, [resource link])
[ingres_field_scale | Get the scale of a field, returns int]
ingres_field_scale(|int index, [resource link])
[ingres_field_type | Get the type of a field in a query result, returns string]
ingres_field_type(|int index, [resource link])
[ingres_num_fields | Get the number of fields returned by the last query, returns int]
ingres_num_fields(|[resource link])
[ingres_num_rows | Get the number of rows affected or returned by the last query, returns int]
ingres_num_rows(|[resource link])
[ingres_pconnect | Open a persistent connection to an Ingres II database, returns resource]
ingres_pconnect(|[string database], [string username], [string password])
[ingres_query | Send a SQL query to Ingres II, returns bool]
ingres_query(|string query, [resource link])
[ingres_rollback | Roll back a transaction, returns bool]
ingres_rollback(|[resource link])
; -----------------------------------------------------------------------------
; IRC Gateway - IRC Gateway Functions
; -----------------------------------------------------------------------------
[ircg_channel_mode | Set channel mode flags for user, returns bool]
ircg_channel_mode(|resource connection, string channel, string mode_spec, string nick)
[ircg_disconnect | Close connection to server, returns bool]
ircg_disconnect(|resource connection, string reason)
[ircg_fetch_error_msg | Returns the error from previous IRCG operation, returns array]
ircg_fetch_error_msg(|resource connection)
[ircg_get_username | Get username for connection, returns string]
ircg_get_username(|resource connection)
[ircg_html_encode | Encodes HTML preserving output, returns bool]
ircg_html_encode(|string html_string)
[ircg_ignore_add | Add a user to your ignore list on a server, returns bool]
ircg_ignore_add(|resource connection, string nick)
[ircg_ignore_del | Remove a user from your ignore list on a server, returns bool]
ircg_ignore_del(|resource connection, string nick)
[ircg_is_conn_alive | Check connection status, returns bool]
ircg_is_conn_alive(|resource connection)
[ircg_join | Join a channel on a connected server, returns bool]
ircg_join(|resource connection, string channel, [string key])
[ircg_kick | Kick a user out of a channel on server, returns bool]
ircg_kick(|resource connection, string channel, string nick, string reason)
[ircg_lookup_format_messages | Check for the existence of a format message set, returns bool]
ircg_lookup_format_messages(|string name)
[ircg_msg | Send message to channel or user on server, returns bool]
ircg_msg(|resource connection, string recipient, string message, [boolean suppress])
[ircg_nick | Change nickname on server, returns bool]
ircg_nick(|resource connection, string nick)
[ircg_nickname_escape | Encode special characters in nickname to be IRC-compliant, returns string]
ircg_nickname_escape(|string nick)
[ircg_nickname_unescape | Decodes encoded nickname, returns string]
ircg_nickname_unescape(|string nick)
[ircg_notice | Send a notice to a user on server, returns bool]
ircg_notice(|resource connection, string , string message)
[ircg_part | Leave a channel on server, returns bool]
ircg_part(|resource connection, string channel)
[ircg_pconnect | Connect to an IRC server, returns resource]
ircg_pconnect(|string username, [string server_ip], [int server_port], [string msg_format], [array ctcp_messages], [array user_settings])
[ircg_register_format_messages | Register a format message set, returns bool]
ircg_register_format_messages(|string name, array messages)
[ircg_set_current | Set current connection for output, returns bool]
ircg_set_current(|resource connection)
[ircg_set_file | Set logfile for connection, returns bool]
ircg_set_file(|resource connection, string path)
[ircg_set_on_die | Set action to be executed when connection dies, returns bool]
ircg_set_on_die(|resource connection, string host, int port, string data)
[ircg_topic | Set topic for channel on server, returns bool]
ircg_topic(|resource connection, string channel, string new_topic)
[ircg_whois | Query server for user information, returns bool]
ircg_whois(|resource connection, string nick)
; -----------------------------------------------------------------------------
; Java - PHP / Java Integration
; -----------------------------------------------------------------------------
[java_last_exception_clear | Clear last Java exception, returns void]
java_last_exception_clear()|
[java_last_exception_get | Get last Java exception, returns exception]
java_last_exception_get()|
; -----------------------------------------------------------------------------
; LDAP - LDAP functions
; -----------------------------------------------------------------------------
[ldap_8859_to_t61 | Translate 8859 characters to t61 characters, returns string]
ldap_8859_to_t61(|string value)
[ldap_add | Add entries to LDAP directory, returns bool]
ldap_add(|resource link_identifier, string dn, array entry)
[ldap_bind | Bind to LDAP directory, returns bool]
ldap_bind(|resource link_identifier, [string bind_rdn], [string bind_password])
[ldap_close | Close link to LDAP server, returns bool]
ldap_close(|resource link_identifier)
[ldap_compare | Compare value of attribute found in entry specified with DN, returns bool]
ldap_compare(|resource link_identifier, string dn, string attribute, string value)
[ldap_connect | Connect to an LDAP server, returns resource]
ldap_connect(|[string hostname], [int port])
[ldap_count_entries | Count the number of entries in a search, returns int]
ldap_count_entries(|resource link_identifier, resource result_identifier)
[ldap_delete | Delete an entry from a directory, returns bool]
ldap_delete(|resource link_identifier, string dn)
[ldap_dn2ufn | Convert DN to User Friendly Naming format, returns string]
ldap_dn2ufn(|string dn)
[ldap_err2str | Convert LDAP error number into string error message, returns string]
ldap_err2str(|int errno)
[ldap_errno | Return the LDAP error number of the last LDAP command, returns int]
ldap_errno(|resource link_identifier)
[ldap_error | Return the LDAP error message of the last LDAP command, returns string]
ldap_error(|resource link_identifier)
[ldap_explode_dn | Splits DN into its component parts, returns array]
ldap_explode_dn(|string dn, int with_attrib)
[ldap_first_attribute | Return first attribute, returns string]
ldap_first_attribute(|resource link_identifier, resource result_entry_identifier, int ber_identifier)
[ldap_first_entry | Return first result id, returns resource]
ldap_first_entry(|resource link_identifier, resource result_identifier)
[ldap_first_reference | Return first reference, returns resource]
ldap_first_reference(|resource link, resource result)
[ldap_free_result | Free result memory, returns bool]
ldap_free_result(|resource result_identifier)
[ldap_get_attributes | Get attributes from a search result entry, returns array]
ldap_get_attributes(|resource link_identifier, resource result_entry_identifier)
[ldap_get_dn | Get the DN of a result entry, returns string]
ldap_get_dn(|resource link_identifier, resource result_entry_identifier)
[ldap_get_entries | Get all result entries, returns array]
ldap_get_entries(|resource link_identifier, resource result_identifier)
[ldap_get_option | Get the current value for given option, returns bool]
ldap_get_option(|resource link_identifier, int option, mixed retval)
[ldap_get_values_len | Get all binary values from a result entry, returns array]
ldap_get_values_len(|resource link_identifier, resource result_entry_identifier, string attribute)
[ldap_get_values | Get all values from a result entry, returns array]
ldap_get_values(|resource link_identifier, resource result_entry_identifier, string attribute)
[ldap_list | Single-level search, returns resource]
ldap_list(|resource link_identifier, string base_dn, string filter, [array attributes], [int attrsonly], [int sizelimit], [int timelimit], [int deref])
[ldap_mod_add | Add attribute values to current attributes, returns bool]
ldap_mod_add(|resource link_identifier, string dn, array entry)
[ldap_mod_del | Delete attribute values from current attributes, returns bool]
ldap_mod_del(|resource link_identifier, string dn, array entry)
[ldap_mod_replace | Replace attribute values with new ones, returns bool]
ldap_mod_replace(|resource link_identifier, string dn, array entry)
[ldap_modify | Modify an LDAP entry, returns bool]
ldap_modify(|resource link_identifier, string dn, array entry)
[ldap_next_attribute | Get the next attribute in result, returns string]
ldap_next_attribute(|resource link_identifier, resource result_entry_identifier, resource ber_identifier)
[ldap_next_entry | Get next result entry, returns resource]
ldap_next_entry(|resource link_identifier, resource result_entry_identifier)
[ldap_next_reference | Get next reference, returns resource]
ldap_next_reference(|resource link, resource entry)
[ldap_parse_reference | Extract information from reference entry, returns bool]
ldap_parse_reference(|resource link, resource entry, array referrals)
[ldap_parse_result | Extract information from result, returns bool]
ldap_parse_result(|resource link, resource result, int errcode, string matcheddn, string errmsg, array referrals)
[ldap_read | Read an entry, returns resource]
ldap_read(|resource link_identifier, string base_dn, string filter, [array attributes], [int attrsonly], [int sizelimit], [int timelimit], [int deref])
[ldap_rename | Modify the name of an entry, returns bool]
ldap_rename(|resource link_identifier, string dn, string newrdn, string newparent, bool deleteoldrdn)
[ldap_search | Search LDAP tree, returns resource]
ldap_search(|resource link_identifier, string base_dn, string filter, [array attributes], [int attrsonly], [int sizelimit], [int timelimit], [int deref])
[ldap_set_option | Set the value of the given option, returns bool]
ldap_set_option(|resource link_identifier, int option, mixed newval)
[ldap_set_rebind_proc | Set a callback function to do re-binds on referral chasing., returns bool]
ldap_set_rebind_proc(|resource link, string callback)
[ldap_sort | Sort LDAP result entries, returns bool]
ldap_sort(|resource link, resource result, string sortfilter)
[ldap_start_tls | Start TLS, returns bool]
ldap_start_tls(|resource link)
[ldap_t61_to_8859 | Translate t61 characters to 8859 characters, returns string]
ldap_t61_to_8859(|string value)
[ldap_unbind | Unbind from LDAP directory, returns bool]
ldap_unbind(|resource link_identifier)
; -----------------------------------------------------------------------------
; Mail - Mail functions
; -----------------------------------------------------------------------------
[ezmlm_hash | Calculate the hash value needed by EZMLM, returns int]
ezmlm_hash(|string addr)
[mail | send mail, returns bool]
mail(|string to, string subject, string message, [string additional_headers], [string additional_parameters])
; -----------------------------------------------------------------------------
; mailparse - mailparse functions
; -----------------------------------------------------------------------------
[mailparse_determine_best_xfer_encoding | Figures out the best way of encoding the content read from the file pointer fp, which must be seek-able, returns int]
mailparse_determine_best_xfer_encoding(|resource fp)
[mailparse_msg_create | Returns a handle that can be used to parse a message, returns int]
mailparse_msg_create()|
[mailparse_msg_extract_part_file | Extracts/decodes a message section, decoding the transfer encoding, returns string]
mailparse_msg_extract_part_file(|resource rfc2045, string filename, [string callbackfunc])
[mailparse_msg_extract_part | Extracts/decodes a message section. If callbackfunc is not specified, the contents will be sent to "stdout", returns void]
mailparse_msg_extract_part(|resource rfc2045, string msgbody, [string callbackfunc])
[mailparse_msg_free | Frees a handle allocated by mailparse_msg_create, returns void]
mailparse_msg_free(|resource rfc2045buf)
[mailparse_msg_get_part_data | Returns an associative array of info about the message, returns array]
mailparse_msg_get_part_data(|resource rfc2045)
[mailparse_msg_get_part | Returns a handle on a given section in a mimemessage, returns int]
mailparse_msg_get_part(|resource rfc2045, string mimesection)
[mailparse_msg_get_structure | Returns an array of mime section names in the supplied message, returns array]
mailparse_msg_get_structure(|resource rfc2045)
[mailparse_msg_parse_file | Parse file and return a resource representing the structure, returns resource]
mailparse_msg_parse_file(|string filename)
[mailparse_msg_parse | Incrementally parse data into buffer, returns void]
mailparse_msg_parse(|resource rfc2045buf, string data)
[mailparse_rfc822_parse_addresses | Parse addresses and returns a hash containing that data, returns array]
mailparse_rfc822_parse_addresses(|string addresses)
[mailparse_stream_encode | Streams data from source file pointer, apply encoding and write to destfp, returns bool]
mailparse_stream_encode(|resource sourcefp, resource destfp, string encoding)
[mailparse_uudecode_all | Scans the data from fp and extract each embedded uuencoded file. Returns an array listing filename information, returns array]
mailparse_uudecode_all(|resource fp)
; -----------------------------------------------------------------------------
; Math - Mathematical Functions
; -----------------------------------------------------------------------------
[abs | Absolute value, returns mixed]
abs(|mixed number)
[acos | Arc cosine, returns float]
acos(|float arg)
[acosh | Inverse hyperbolic cosine, returns float]
acosh(|float arg)
[asin | Arc sine, returns float]
asin(|float arg)
[asinh | Inverse hyperbolic sine, returns float]
asinh(|float arg)
[atan2 | arc tangent of two variables, returns float]
atan2(|float y, float x)
[atan | Arc tangent, returns float]
atan(|float arg)
[atanh | Inverse hyperbolic tangent, returns float]
atanh(|float arg)
[base_convert | Convert a number between arbitrary bases, returns string]
base_convert(|string number, int frombase, int tobase)
[bindec | Binary to decimal, returns int]
bindec(|string binary_string)
[ceil | Round fractions up, returns float]
ceil(|float value)
[cos | Cosine, returns float]
cos(|float arg)
[cosh | Hyperbolic cosine, returns float]
cosh(|float arg)
[decbin | Decimal to binary, returns string]
decbin(|int number)
[dechex | Decimal to hexadecimal, returns string]
dechex(|int number)
[decoct | Decimal to octal, returns string]
decoct(|int number)
[deg2rad | Converts the number in degrees to the radian equivalent, returns float]
deg2rad(|float number)
[exp | Calculates the exponent of e (the Neperian or Natural logarithm base), returns float]
exp(|float arg)
[expm1 | Returns exp(number) - 1, computed in a way that is accurate even when the value of number is close to zero, returns float]
expm1(|float number)
[floor | Round fractions down, returns float]
floor(|float value)
[fmod | Returns the floating point remainder (modulo) of the division of the arguments, returns float]
fmod(|float x, float y)
[getrandmax | Show largest possible random value, returns int]
getrandmax()|
[hexdec | Hexadecimal to decimal, returns int]
hexdec(|string hex_string)
[hypot | Returns sqrt( num1*num1 + num2*num2), returns float]
hypot(|float num1, float num2)
[is_finite | Finds whether a value is a legal finite number, returns bool]
is_finite(|float val)
[is_infinite | Finds whether a value is infinite, returns bool]
is_infinite(|float val)
[is_nan | Finds whether a value is not a number, returns bool]
is_nan(|float val)
[lcg_value | Combined linear congruential generator, returns float]
lcg_value()|
[log10 | Base-10 logarithm, returns float]
log10(|float arg)
[log1p | Returns log(1 + number), computed in a way that accurate even when the val ue of number is close to zero, returns float]
log1p(|float number)
[log | Natural logarithm, returns float]
log(|float arg, [float base])
[max | Find highest value, returns mixed]
max(|number arg1, number arg2, [number ...])
[min | Find lowest value, returns mixed]
min(|number arg1, number arg2, [number ...])
[mt_getrandmax | Show largest possible random value, returns int]
mt_getrandmax()|
[mt_rand | Generate a better random value, returns int]
mt_rand(|[int min], int max)
[mt_srand | Seed the better random number generator, returns void]
mt_srand(|int seed)
[octdec | Octal to decimal, returns int]
octdec(|string octal_string)
[pi | Get value of pi, returns float]
pi()|
[pow | Exponential expression, returns number]
pow(|number base, number exp)
[rad2deg | Converts the radian number to the equivalent number in degrees, returns float]
rad2deg(|float number)
[rand | Generate a random value, returns int]
rand(|[int min], int max)
[round | Rounds a float, returns float]
round(|float val, [int precision])
[sin | Sine, returns float]
sin(|float arg)
[sinh | Hyperbolic sine, returns float]
sinh(|float arg)
[sqrt | Square root, returns float]
sqrt(|float arg)
[srand | Seed the random number generator, returns void]
srand(|int seed)
[tan | Tangent, returns float]
tan(|float arg)
[tanh | Hyperbolic tangent, returns float]
tanh(|float arg)
; -----------------------------------------------------------------------------
; Multi-Byte String - Multi-Byte String Functions
; -----------------------------------------------------------------------------
[mb_convert_case | Perform case folding on a string, returns string]
mb_convert_case(|string str, int mode, [string encoding])
[mb_convert_encoding | Convert character encoding, returns string]
mb_convert_encoding(|string str, string to-encoding, [mixed from-encoding])
[mb_convert_kana | Convert "kana" one from another ("zen-kaku" ,"han-kaku" and more), returns string]
mb_convert_kana(|string str, string option, [mixed encoding])
[mb_convert_variables | Convert character code in variable(s), returns string]
mb_convert_variables(|string to-encoding, mixed from-encoding, mixed vars)
[mb_decode_mimeheader | Decode string in MIME header field, returns string]
mb_decode_mimeheader(|string str)
[mb_decode_numericentity | Decode HTML numeric string reference to character, returns string]
mb_decode_numericentity(|string str, array convmap, [string encoding])
[mb_detect_encoding | Detect character encoding, returns string]
mb_detect_encoding(|string str, [mixed encoding-list])
[mb_detect_order | Set/Get character encoding detection order, returns array]
mb_detect_order(|[mixed encoding-list])
[mb_encode_mimeheader | Encode string for MIME header, returns string]
mb_encode_mimeheader(|string str, [string charset], [string transfer-encoding], [string linefeed])
[mb_encode_numericentity | Encode character to HTML numeric string reference, returns string]
mb_encode_numericentity(|string str, array convmap, [string encoding])
[mb_ereg_match | Regular expression match for multibyte string, returns bool]
mb_ereg_match(|string pattern, string string, [string option])
[mb_ereg_replace | Replace regular expression with multibyte support, returns string]
mb_ereg_replace(|string pattern, string replacement, string string, [array option])
[mb_ereg_search_getpos | Returns start point for next regular expression match, returns array]
mb_ereg_search_getpos()|
[mb_ereg_search_getregs | Retrieve the result from the last multibyte regular expression match, returns array]
mb_ereg_search_getregs()|
[mb_ereg_search_init | Setup string and regular expression for multibyte regular expression match, returns array]
mb_ereg_search_init(|string string, [string pattern], [string option])
[mb_ereg_search_pos | Return position and length of matched part of multibyte regular expression for predefined multibyte string, returns array]
mb_ereg_search_pos(|[string pattern], [string option])
[mb_ereg_search_regs | Returns the matched part of multibyte regular expression, returns array]
mb_ereg_search_regs(|[string pattern], [string option])
[mb_ereg_search_setpos | Set start point of next regular expression match, returns array]
mb_ereg_search_setpos()|
[mb_ereg_search | Multibyte regular expression match for predefined multibyte string, returns bool]
mb_ereg_search(|[string pattern], [string option])
[mb_ereg | Regular expression match with multibyte support, returns int]
mb_ereg(|string pattern, string string, [array regs])
[mb_eregi_replace | Replace regular expression with multibyte support ignoring case, returns string]
mb_eregi_replace(|string pattern, string replace, string string)
[mb_eregi | Regular expression match ignoring case with multibyte support, returns int]
mb_eregi(|string pattern, string string, [array regs])
[mb_get_info | Get internal settings of mbstring, returns string]
mb_get_info(|[string type])
[mb_http_input | Detect HTTP input character encoding, returns string]
mb_http_input(|[string type])
[mb_http_output | Set/Get HTTP output character encoding, returns string]
mb_http_output(|[string encoding])
[mb_internal_encoding | Set/Get internal character encoding, returns string]
mb_internal_encoding(|[string encoding])
[mb_language | Set/Get current language, returns string]
mb_language(|[string language])
[mb_output_handler | Callback function converts character encoding in output buffer, returns string]
mb_output_handler(|string contents, int status)
[mb_parse_str | Parse GET/POST/COOKIE data and set global variable, returns bool]
mb_parse_str(|string encoded_string, [array result])
[mb_preferred_mime_name | Get MIME charset string, returns string]
mb_preferred_mime_name(|string encoding)
[mb_regex_encoding | Returns current encoding for multibyte regex as string, returns string]
mb_regex_encoding(|[string encoding])
[mb_regex_set_options | Set/Get the default options for mbregex functions, returns string]
mb_regex_set_options(|[string options])
[mb_send_mail | Send encoded mail., returns bool]
mb_send_mail(|string to, string subject, string message, [string additional_headers], [string additional_parameter])
[mb_split | Split multibyte string using regular expression, returns array]
mb_split(|string pattern, string string, [int limit])
[mb_strcut | Get part of string, returns string]
mb_strcut(|string str, int start, [int length], [string encoding])
[mb_strimwidth | Get truncated string with specified width, returns string]
mb_strimwidth(|string str, int start, int width, string trimmarker, [string encoding])
[mb_strlen | Get string length, returns string]
mb_strlen(|string str, [string encoding])
[mb_strpos | Find position of first occurrence of string in a string, returns int]
mb_strpos(|string haystack, string needle, [int offset], [string encoding])
[mb_strrpos | Find position of last occurrence of a string in a string, returns int]
mb_strrpos(|string haystack, string needle, [string encoding])
[mb_strtolower | Make a string lowercase, returns string]
mb_strtolower(|string str, [string encoding])
[mb_strtoupper | Make a string uppercase, returns string]
mb_strtoupper(|string str, [string encoding])
[mb_strwidth | Return width of string, returns int]
mb_strwidth(|string str, [string encoding])
[mb_substitute_character | Set/Get substitution character, returns mixed]
mb_substitute_character(|[mixed substrchar])
[mb_substr_count | Count the number of substring occurrences, returns int]
mb_substr_count(|string haystack, string needle, [string encoding])
[mb_substr | Get part of string, returns string]
mb_substr(|string str, int start, [int length], [string encoding])
; -----------------------------------------------------------------------------
; MCAL - MCAL functions
; -----------------------------------------------------------------------------
[mcal_append_event | Store a new event into an MCAL calendar, returns int]
mcal_append_event(|int mcal_stream)
[mcal_close | Close an MCAL stream, returns int]
mcal_close(|int mcal_stream, int flags)
[mcal_create_calendar | Create a new MCAL calendar, returns bool]
mcal_create_calendar(|int stream, string calendar)
[mcal_date_compare | Compares two dates, returns int]
mcal_date_compare(|int a_year, int a_month, int a_day, int b_year, int b_month, int b_day)
[mcal_date_valid | Returns TRUE if the given year, month, day is a valid date, returns int]
mcal_date_valid(|int year, int month, int day)
[mcal_day_of_week | Returns the day of the week of the given date, returns int]
mcal_day_of_week(|int year, int month, int day)
[mcal_day_of_year | Returns the day of the year of the given date, returns int]
mcal_day_of_year(|int year, int month, int day)
[mcal_days_in_month | Returns the number of days in a month, returns int]
mcal_days_in_month(|int month, int leap_year)
[mcal_delete_calendar | Delete an MCAL calendar, returns string]
mcal_delete_calendar(|int stream, string calendar)
[mcal_delete_event | Delete an event from an MCAL calendar, returns int]
mcal_delete_event(|int mcal_stream, [int event_id])
[mcal_event_add_attribute | Adds an attribute and a value to the streams global event structure, returns void]
mcal_event_add_attribute(|int stream, string attribute, string value)
[mcal_event_init | Initializes a streams global event structure, returns int]
mcal_event_init(|int stream)
[mcal_event_set_alarm | Sets the alarm of the streams global event structure, returns int]
mcal_event_set_alarm(|int stream, int alarm)
[mcal_event_set_category | Sets the category of the streams global event structure, returns int]
mcal_event_set_category(|int stream, string category)
[mcal_event_set_class | Sets the class of the streams global event structure, returns int]
mcal_event_set_class(|int stream, int class)
[mcal_event_set_description | Sets the description of the streams global event structure, returns int]
mcal_event_set_description(|int stream, string description)
[mcal_event_set_end | Sets the end date and time of the streams global event structure, returns int]
mcal_event_set_end(|int stream, int year, int month, [int day], [int hour], [int min], [int sec])
[mcal_event_set_recur_daily | Sets the recurrence of the streams global event structure, returns int]
mcal_event_set_recur_daily(|int stream, int year, int month, int day, int interval)
[mcal_event_set_recur_monthly_mday | Sets the recurrence of the streams global event structure, returns int]
mcal_event_set_recur_monthly_mday(|int stream, int year, int month, int day, int interval)
[mcal_event_set_recur_monthly_wday | Sets the recurrence of the streams global event structure, returns int]
mcal_event_set_recur_monthly_wday(|int stream, int year, int month, int day, int interval)
[mcal_event_set_recur_none | Sets the recurrence of the streams global event structure, returns int]
mcal_event_set_recur_none(|int stream)
[mcal_event_set_recur_weekly | Sets the recurrence of the streams global event structure, returns int]
mcal_event_set_recur_weekly(|int stream, int year, int month, int day, int interval, int weekdays)
[mcal_event_set_recur_yearly | Sets the recurrence of the streams global event structure, returns int]
mcal_event_set_recur_yearly(|int stream, int year, int month, int day, int interval)
[mcal_event_set_start | Sets the start date and time of the streams global event structure, returns int]
mcal_event_set_start(|int stream, int year, int month, [int day], [int hour], [int min], [int sec])
[mcal_event_set_title | Sets the title of the streams global event structure, returns int]
mcal_event_set_title(|int stream, string title)
[mcal_expunge | Deletes all events marked for being expunged., returns int]
mcal_expunge(|int stream)
[mcal_fetch_current_stream_event | Returns an object containing the current streams event structure, returns object]
mcal_fetch_current_stream_event(|int stream)
[mcal_fetch_event | Fetches an event from the calendar stream, returns object]
mcal_fetch_event(|int mcal_stream, int event_id, [int options])
[mcal_is_leap_year | Returns if the given year is a leap year or not, returns int]
mcal_is_leap_year(|int year)
[mcal_list_alarms | Return a list of events that has an alarm triggered at the given datetime, returns array]
mcal_list_alarms(|int mcal_stream, [int begin_year], [int begin_month], [int begin_day], [int end_year], [int end_month], [int end_day])
[mcal_list_events | Return a list of IDs for a date or a range of dates, returns array]
mcal_list_events(|int mcal_stream, object begin_date, [object end_date])
[mcal_next_recurrence | Returns the next recurrence of the event, returns int]
mcal_next_recurrence(|int stream, int weekstart, array next)
[mcal_open | Opens up an MCAL connection, returns int]
mcal_open(|string calendar, string username, string password, [int options])
[mcal_popen | Opens up a persistent MCAL connection, returns int]
mcal_popen(|string calendar, string username, string password, [int options])
[mcal_rename_calendar | Rename an MCAL calendar, returns string]
mcal_rename_calendar(|int stream, string old_name, string new_name)
[mcal_reopen | Reopens an MCAL connection, returns int]
mcal_reopen(|string calendar, [int options])
[mcal_snooze | Turn off an alarm for an event, returns bool]
mcal_snooze(|int stream_id, int event_id)
[mcal_store_event | Modify an existing event in an MCAL calendar, returns int]
mcal_store_event(|int mcal_stream)
[mcal_time_valid | Returns TRUE if the given year, month, day is a valid time, returns int]
mcal_time_valid(|int hour, int minutes, int seconds)
[mcal_week_of_year | Returns the week number of the given date, returns int]
mcal_week_of_year(|int day, int month, int year)
; -----------------------------------------------------------------------------
; mcrypt - Mcrypt Encryption Functions
; -----------------------------------------------------------------------------
[mcrypt_cbc | Encrypt/decrypt data in CBC mode, returns string]
mcrypt_cbc(|int cipher, string key, string data, int mode, [string iv])
[mcrypt_cfb | Encrypt/decrypt data in CFB mode, returns string]
mcrypt_cfb(|int cipher, string key, string data, int mode, string iv)
[mcrypt_create_iv | Create an initialization vector (IV) from a random source, returns string]
mcrypt_create_iv(|int size, int source)
[mcrypt_decrypt | Decrypts crypttext with given parameters, returns string]
mcrypt_decrypt(|string cipher, string key, string data, string mode, [string iv])
[mcrypt_ecb | Encrypt/decrypt data in ECB mode, returns string]
mcrypt_ecb(|int cipher, string key, string data, int mode)
[mcrypt_enc_get_algorithms_name | Returns the name of the opened algorithm, returns string]
mcrypt_enc_get_algorithms_name(|resource td)
[mcrypt_enc_get_block_size | Returns the blocksize of the opened algorithm, returns int]
mcrypt_enc_get_block_size(|resource td)
[mcrypt_enc_get_iv_size | Returns the size of the IV of the opened algorithm, returns int]
mcrypt_enc_get_iv_size(|resource td)
[mcrypt_enc_get_key_size | Returns the maximum supported keysize of the opened mode, returns int]
mcrypt_enc_get_key_size(|resource td)
[mcrypt_enc_get_modes_name | Returns the name of the opened mode, returns string]
mcrypt_enc_get_modes_name(|resource td)
[mcrypt_enc_get_supported_key_sizes | Returns an array with the supported keysizes of the opened algorithm, returns array]
mcrypt_enc_get_supported_key_sizes(|resource td)
[mcrypt_enc_is_block_algorithm_mode | Checks whether the encryption of the opened mode works on blocks, returns bool]
mcrypt_enc_is_block_algorithm_mode(|resource td)
[mcrypt_enc_is_block_algorithm | Checks whether the algorithm of the opened mode is a block algorithm, returns bool]
mcrypt_enc_is_block_algorithm(|resource td)
[mcrypt_enc_is_block_mode | Checks whether the opened mode outputs blocks, returns bool]
mcrypt_enc_is_block_mode(|resource td)
[mcrypt_enc_self_test | This function runs a self test on the opened module, returns bool]
mcrypt_enc_self_test(|resource td)
[mcrypt_encrypt | Encrypts plaintext with given parameters, returns string]
mcrypt_encrypt(|string cipher, string key, string data, string mode, [string iv])
[mcrypt_generic_deinit | This function deinitializes an encryption module, returns bool]
mcrypt_generic_deinit(|resource td)
[mcrypt_generic_end | This function terminates encryption, returns bool]
mcrypt_generic_end(|resource td)
[mcrypt_generic_init | This function initializes all buffers needed for encryption, returns int]
mcrypt_generic_init(|resource td, string key, string iv)
[mcrypt_generic | This function encrypts data, returns string]
mcrypt_generic(|resource td, string data)
[mcrypt_get_block_size | Get the block size of the specified cipher, returns int]
mcrypt_get_block_size(|int cipher)
[mcrypt_get_cipher_name | Get the name of the specified cipher, returns string]
mcrypt_get_cipher_name(|int cipher)
[mcrypt_get_iv_size | Returns the size of the IV belonging to a specific cipher/mode combination, returns int]
mcrypt_get_iv_size(|resource td)
[mcrypt_get_key_size | Get the key size of the specified cipher, returns int]
mcrypt_get_key_size(|int cipher)
[mcrypt_list_algorithms | Get an array of all supported ciphers, returns array]
mcrypt_list_algorithms(|[string lib_dir])
[mcrypt_list_modes | Get an array of all supported modes, returns array]
mcrypt_list_modes(|[string lib_dir])
[mcrypt_module_close | Close the mcrypt module, returns bool]
mcrypt_module_close(|resource td)
[mcrypt_module_get_algo_block_size | Returns the blocksize of the specified algorithm, returns int]
mcrypt_module_get_algo_block_size(|string algorithm, [string lib_dir])
[mcrypt_module_get_algo_key_size | Returns the maximum supported keysize of the opened mode, returns int]
mcrypt_module_get_algo_key_size(|string algorithm, [string lib_dir])
[mcrypt_module_get_supported_key_sizes | Returns an array with the supported keysizes of the opened algorithm, returns array]
mcrypt_module_get_supported_key_sizes(|string algorithm, [string lib_dir])
[mcrypt_module_is_block_algorithm_mode | This function returns if the the specified module is a block algorithm or not, returns bool]
mcrypt_module_is_block_algorithm_mode(|string mode, [string lib_dir])
[mcrypt_module_is_block_algorithm | This function checks whether the specified algorithm is a block algorithm, returns bool]
mcrypt_module_is_block_algorithm(|string algorithm, [string lib_dir])
[mcrypt_module_is_block_mode | This function returns if the the specified mode outputs blocks or not, returns bool]
mcrypt_module_is_block_mode(|string mode, [string lib_dir])
[mcrypt_module_open | Opens the module of the algorithm and the mode to be used, returns resource]
mcrypt_module_open(|string algorithm, string algorithm_directory, string mode, string mode_directory)
[mcrypt_module_self_test | This function runs a self test on the specified module, returns bool]
mcrypt_module_self_test(|string algorithm, [string lib_dir])
[mcrypt_ofb | Encrypt/decrypt data in OFB mode, returns string]
mcrypt_ofb(|int cipher, string key, string data, int mode, string iv)
[mdecrypt_generic | Decrypt data, returns string]
mdecrypt_generic(|resource td, string data)
; -----------------------------------------------------------------------------
; MCVE - MCVE Payment Functions
; -----------------------------------------------------------------------------
[mcve_adduser | Add an MCVE user using usersetup structure, returns int]
mcve_adduser(|resource conn, string admin_password, int usersetup)
[mcve_adduserarg | Add a value to user configuration structure, returns int]
mcve_adduserarg(|resource usersetup, int argtype, string argval)
[mcve_bt | Get unsettled batch totals, returns int]
mcve_bt(|resource conn, string username, string password)
[mcve_checkstatus | Check to see if a transaction has completed, returns int]
mcve_checkstatus(|resource conn, int identifier)
[mcve_chkpwd | Verify Password, returns int]
mcve_chkpwd(|resource conn, string username, string password)
[mcve_chngpwd | Change the system administrator's password, returns int]
mcve_chngpwd(|resource conn, string admin_password, string new_password)
[mcve_completeauthorizations | Number of complete authorizations in queue, returning an array of their identifiers, returns int]
mcve_completeauthorizations(|resource conn, int &array)
[mcve_connect | Establish the connection to MCVE, returns int]
mcve_connect(|resource conn)
[mcve_connectionerror | Get a textual representation of why a connection failed, returns string]
mcve_connectionerror(|resource conn)
[mcve_deleteresponse | Delete specified transaction from MCVE_CONN structure, returns bool]
mcve_deleteresponse(|resource conn, int identifier)
[mcve_deletetrans | Delete specified transaction from MCVE_CONN structure, returns bool]
mcve_deletetrans(|resource conn, int identifier)
[mcve_deleteusersetup | Deallocate data associated with usersetup structure, returns void]
mcve_deleteusersetup(|resource usersetup)
[mcve_deluser | Delete an MCVE user account, returns int]
mcve_deluser(|resource conn, string admin_password, string username)
[mcve_destroyconn | Destroy the connection and MCVE_CONN structure, returns void]
mcve_destroyconn(|resource conn)
[mcve_destroyengine | Free memory associated with IP/SSL connectivity, returns void]
mcve_destroyengine()|
[mcve_disableuser | Disable an active MCVE user account, returns int]
mcve_disableuser(|resource conn, string admin_password, string username)
[mcve_edituser | Edit MCVE user using usersetup structure, returns int]
mcve_edituser(|resource conn, string admin_password, int usersetup)
[mcve_enableuser | Enable an inactive MCVE user account, returns int]
mcve_enableuser(|resource conn, string admin_password, string username)
[mcve_force | Send a FORCE to MCVE. (typically, a phone-authorization), returns int]
mcve_force(|resource conn, string username, string password, string trackdata, string account, string expdate, float amount, string authcode, string comments, string clerkid, string stationid, int ptrannum)
[mcve_getcell | Get a specific cell from a comma delimited response by column name, returns string]
mcve_getcell(|resource conn, int identifier, string column, int row)
[mcve_getcellbynum | Get a specific cell from a comma delimited response by column number, returns string]
mcve_getcellbynum(|resource conn, int identifier, int column, int row)
[mcve_getcommadelimited | Get the RAW comma delimited data returned from MCVE, returns string]
mcve_getcommadelimited(|resource conn, int identifier)
[mcve_getheader | Get the name of the column in a comma-delimited response, returns string]
mcve_getheader(|resource conn, int identifier, int column_num)
[mcve_getuserarg | Grab a value from usersetup structure, returns string]
mcve_getuserarg(|resource usersetup, int argtype)
[mcve_getuserparam | Get a user response parameter, returns string]
mcve_getuserparam(|resource conn, long identifier, int key)
[mcve_gft | Audit MCVE for Failed transactions, returns int]
mcve_gft(|resource conn, string username, string password, int type, string account, string clerkid, string stationid, string comments, int ptrannum, string startdate, string enddate)
[mcve_gl | Audit MCVE for settled transactions, returns int]
mcve_gl(|int conn, string username, string password, int type, string account, string batch, string clerkid, string stationid, string comments, int ptrannum, string startdate, string enddate)
[mcve_gut | Audit MCVE for Unsettled Transactions, returns int]
mcve_gut(|resource conn, string username, string password, int type, string account, string clerkid, string stationid, string comments, int ptrannum, string startdate, string enddate)
[mcve_initconn | Create and initialize an MCVE_CONN structure, returns resource]
mcve_initconn()|
[mcve_initengine | Ready the client for IP/SSL Communication, returns int]
mcve_initengine(|string location)
[mcve_initusersetup | Initialize structure to store user data, returns resource]
mcve_initusersetup()|
[mcve_iscommadelimited | Checks to see if response is comma delimited, returns int]
mcve_iscommadelimited(|resource conn, int identifier)
[mcve_liststats | List statistics for all users on MCVE system, returns int]
mcve_liststats(|resource conn, string admin_password)
[mcve_listusers | List all users on MCVE system, returns int]
mcve_listusers(|resource conn, string admin_password)
[mcve_maxconntimeout | The maximum amount of time the API will attempt a connection to MCVE, returns bool]
mcve_maxconntimeout(|resource conn, int secs)
[mcve_monitor | Perform communication with MCVE (send/receive data) Non-blocking, returns int]
mcve_monitor(|resource conn)
[mcve_numcolumns | Number of columns returned in a comma delimited response, returns int]
mcve_numcolumns(|resource conn, int identifier)
[mcve_numrows | Number of rows returned in a comma delimited response, returns int]
mcve_numrows(|resource conn, int identifier)
[mcve_override | Send an OVERRIDE to MCVE, returns int]
mcve_override(|resource conn, string username, string password, string trackdata, string account, string expdate, float amount, string street, string zip, string cv, string comments, string clerkid, string stationid, int ptrannum)
[mcve_parsecommadelimited | Parse the comma delimited response so mcve_getcell, etc will work, returns int]
mcve_parsecommadelimited(|resource conn, int identifier)
[mcve_ping | Send a ping request to MCVE, returns int]
mcve_ping(|resource conn)
[mcve_preauth | Send a PREAUTHORIZATION to MCVE, returns int]
mcve_preauth(|resource conn, string username, string password, string trackdata, string account, string expdate, float amount, string street, string zip, string cv, string comments, string clerkid, string stationid, int ptrannum)
[mcve_preauthcompletion | Complete a PREAUTHORIZATION... Ready it for settlement, returns int]
mcve_preauthcompletion(|resource conn, string username, string password, float finalamount, int sid, int ptrannum)
[mcve_qc | Audit MCVE for a list of transactions in the outgoing queue, returns int]
mcve_qc(|resource conn, string username, string password, string clerkid, string stationid, string comments, int ptrannum)
[mcve_responseparam | Get a custom response parameter, returns string]
mcve_responseparam(|resource conn, long identifier, string key)
[mcve_return | Issue a RETURN or CREDIT to MCVE, returns int]
mcve_return(|int conn, string username, string password, string trackdata, string account, string expdate, float amount, string comments, string clerkid, string stationid, int ptrannum)
[mcve_returncode | Grab the exact return code from the transaction, returns int]
mcve_returncode(|resource conn, int identifier)
[mcve_returnstatus | Check to see if the transaction was successful, returns int]
mcve_returnstatus(|resource conn, int identifier)
[mcve_sale | Send a SALE to MCVE, returns int]
mcve_sale(|resource conn, string username, string password, string trackdata, string account, string expdate, float amount, string street, string zip, string cv, string comments, string clerkid, string stationid, int ptrannum)
[mcve_setblocking | Set blocking/non-blocking mode for connection, returns int]
mcve_setblocking(|resource conn, int tf)
[mcve_setdropfile | Set the connection method to Drop-File, returns int]
mcve_setdropfile(|resource conn, string directory)
[mcve_setip | Set the connection method to IP, returns int]
mcve_setip(|resource conn, string host, int port)
[mcve_setssl_files | Set certificate key files and certificates if server requires client certificate verification, returns int]
mcve_setssl_files(|string sslkeyfile, string sslcertfile)
[mcve_setssl | Set the connection method to SSL, returns int]
mcve_setssl(|resource conn, string host, int port)
[mcve_settimeout | Set maximum transaction time (per trans), returns int]
mcve_settimeout(|resource conn, int seconds)
[mcve_settle | Issue a settlement command to do a batch deposit, returns int]
mcve_settle(|resource conn, string username, string password, string batch)
[mcve_text_avs | Get a textual representation of the return_avs, returns string]
mcve_text_avs(|string code)
[mcve_text_code | Get a textual representation of the return_code, returns string]
mcve_text_code(|string code)
[mcve_text_cv | Get a textual representation of the return_cv, returns string]
mcve_text_cv(|int code)
[mcve_transactionauth | Get the authorization number returned for the transaction (alpha-numeric), returns string]
mcve_transactionauth(|resource conn, int identifier)
[mcve_transactionavs | Get the Address Verification return status, returns int]
mcve_transactionavs(|resource conn, int identifier)
[mcve_transactionbatch | Get the batch number associated with the transaction, returns int]
mcve_transactionbatch(|resource conn, int identifier)
[mcve_transactioncv | Get the CVC2/CVV2/CID return status, returns int]
mcve_transactioncv(|resource conn, int identifier)
[mcve_transactionid | Get the unique system id for the transaction, returns int]
mcve_transactionid(|resource conn, int identifier)
[mcve_transactionitem | Get the ITEM number in the associated batch for this transaction, returns int]
mcve_transactionitem(|resource conn, int identifier)
[mcve_transactionssent | Check to see if outgoing buffer is clear, returns int]
mcve_transactionssent(|resource conn)
[mcve_transactiontext | Get verbiage (text) return from MCVE or processing institution, returns string]
mcve_transactiontext(|resource conn, int identifier)
[mcve_transinqueue | Number of transactions in client-queue, returns int]
mcve_transinqueue(|resource conn)
[mcve_transnew | Start a new transaction, returns int]
mcve_transnew(|resource conn)
[mcve_transparam | Add a parameter to a transaction, returns int]
mcve_transparam(|resource conn, long identifier, int key)
[mcve_transsend | Finalize and send the transaction, returns int]
mcve_transsend(|resource conn, long identifier)
[mcve_ub | Get a list of all Unsettled batches, returns int]
mcve_ub(|resource conn, string username, string password)
[mcve_uwait | Wait x microsecs, returns int]
mcve_uwait(|long microsecs)
[mcve_verifyconnection | Set whether or not to PING upon connect to verify connection, returns bool]
mcve_verifyconnection(|resource conn, int tf)
[mcve_verifysslcert | Set whether or not to verify the server ssl certificate, returns bool]
mcve_verifysslcert(|resource conn, int tf)
[mcve_void | VOID a transaction in the settlement queue, returns int]
mcve_void(|resource conn, string username, string password, int sid, int ptrannum)
; -----------------------------------------------------------------------------
; mhash - Mhash Functions
; -----------------------------------------------------------------------------
[mhash_count | Get the highest available hash id, returns int]
mhash_count()|
[mhash_get_block_size | Get the block size of the specified hash, returns int]
mhash_get_block_size(|int hash)
[mhash_get_hash_name | Get the name of the specified hash, returns string]
mhash_get_hash_name(|int hash)
[mhash_keygen_s2k | Generates a key, returns string]
mhash_keygen_s2k(|int hash, string password, string salt, int bytes)
[mhash | Compute hash, returns string]
mhash(|int hash, string data, [string key])
; -----------------------------------------------------------------------------
; Mimetype - Mimetype Functions
; -----------------------------------------------------------------------------
[mime_content_type | Detect MIME Content-type for a file, returns string]
mime_content_type(|string filename)
; -----------------------------------------------------------------------------
; MS SQL Server - Microsoft SQL Server functions
; -----------------------------------------------------------------------------
[mssql_bind | Adds a parameter to a stored procedure or a remote stored procedure, returns bool]
mssql_bind(|resource stmt, string param_name, mixed var, int type, [int is_output], [int is_null], [int maxlen])
[mssql_close | Close MS SQL Server connection, returns bool]
mssql_close(|[resource link_identifier])
[mssql_connect | Open MS SQL server connection, returns int]
mssql_connect(|[string servername], [string username], [string password])
[mssql_data_seek | Moves internal row pointer, returns bool]
mssql_data_seek(|resource result_identifier, int row_number)
[mssql_execute | Executes a stored procedure on a MS SQL server database, returns mixed]
mssql_execute(|resource stmt, [bool skip_results])
[mssql_fetch_array | Fetch a result row as an associative array, a numeric array, or both, returns array]
mssql_fetch_array(|resource result, [int result_type])
[mssql_fetch_assoc | Returns an associative array of the current row in the result set specified by result_id, returns array]
mssql_fetch_assoc(|resource result_id)
[mssql_fetch_batch | Returns the next batch of records, returns int]
mssql_fetch_batch(|resource result_index)
[mssql_fetch_field | Get field information, returns object]
mssql_fetch_field(|resource result, [int field_offset])
[mssql_fetch_object | Fetch row as object, returns object]
mssql_fetch_object(|resource result)
[mssql_fetch_row | Get row as enumerated array, returns array]
mssql_fetch_row(|resource result)
[mssql_field_length | Get the length of a field, returns int]
mssql_field_length(|resource result, [int offset])
[mssql_field_name | Get the name of a field, returns string]
mssql_field_name(|resource result, [int offset])
[mssql_field_seek | Seeks to the specified field offset, returns bool]
mssql_field_seek(|resource result, int field_offset)
[mssql_field_type | Gets the type of a field, returns string]
mssql_field_type(|resource result, [int offset])
[mssql_free_result | Free result memory, returns bool]
mssql_free_result(|resource result)
[mssql_free_statement | Free statement memory, returns bool]
mssql_free_statement(|resource statement)
[mssql_get_last_message | Returns the last message from the server, returns string]
mssql_get_last_message()|
[mssql_guid_string | Converts a 16 byte binary GUID to a string, returns string]
mssql_guid_string(|string binary, [int short_format])
[mssql_init | Initializes a stored procedure or a remote stored procedure, returns int]
mssql_init(|string sp_name, [resource conn_id])
[mssql_min_error_severity | Sets the lower error severity, returns void]
mssql_min_error_severity(|int severity)
[mssql_min_message_severity | Sets the lower message severity, returns void]
mssql_min_message_severity(|int severity)
[mssql_next_result | Move the internal result pointer to the next result, returns bool]
mssql_next_result(|resource result_id)
[mssql_num_fields | Gets the number of fields in result, returns int]
mssql_num_fields(|resource result)
[mssql_num_rows | Gets the number of rows in result, returns int]
mssql_num_rows(|resource result)
[mssql_pconnect | Open persistent MS SQL connection, returns int]
mssql_pconnect(|[string servername], [string username], [string password])
[mssql_query | Send MS SQL query, returns resource]
mssql_query(|string query, [resource link_identifier], [int batch_size])
[mssql_result | Get result data, returns string]
mssql_result(|resource result, int row, mixed field)
[mssql_rows_affected | Returns the number of records affected by the query, returns int]
mssql_rows_affected(|resource conn_id)
[mssql_select_db | Select MS SQL database, returns bool]
mssql_select_db(|string database_name, [resource link_identifier])
; -----------------------------------------------------------------------------
; Ming (flash) - Ming functions for Flash
; -----------------------------------------------------------------------------
[ming_setcubicthreshold | Set cubic threshold (?), returns void]
ming_setcubicthreshold(|int threshold)
[ming_setscale | Set scale (?), returns void]
ming_setscale(|int scale)
[ming_useswfversion | Use SWF version (?), returns void]
ming_useswfversion(|int version)
[SWFAction | Creates a new Action., returns new]
swfaction(|string script)
[SWFBitmap->getHeight | Returns the bitmap's height., returns int]
swfbitmap->getheight()|
[SWFBitmap->getWidth | Returns the bitmap's width., returns int]
swfbitmap->getwidth()|
[SWFBitmap | Loads Bitmap object, returns new]
swfbitmap(|string filename, [int alphafilename])
[swfbutton_keypress | Returns the action flag for keyPress(char), returns int]
swfbutton_keypress(|string str)
[SWFbutton->addAction | Adds an action, returns void]
swfbutton->addaction(|resource action, int flags)
[SWFbutton->addShape | Adds a shape to a button, returns void]
swfbutton->addshape(|resource shape, int flags)
[SWFbutton->setAction | Sets the action, returns void]
swfbutton->setaction(|resource action)
[SWFbutton->setdown | Alias for addShape(shape, SWFBUTTON_DOWN)), returns void]
swfbutton->setdown(|resource shape)
[SWFbutton->setHit | Alias for addShape(shape, SWFBUTTON_HIT), returns void]
swfbutton->sethit(|resource shape)
[SWFbutton->setOver | Alias for addShape(shape, SWFBUTTON_OVER), returns void]
swfbutton->setover(|resource shape)
[SWFbutton->setUp | Alias for addShape(shape, SWFBUTTON_UP), returns void]
swfbutton->setup(|resource shape)
[SWFbutton | Creates a new Button., returns new]
swfbutton()|
[SWFDisplayItem->addColor | Adds the given color to this item's color transform., returns void]
swfdisplayitem->addcolor(|[int red], [int green], [int blue], [int a])
[SWFDisplayItem->move | Moves object in relative coordinates., returns void]
swfdisplayitem->move(|int dx, int dy)
[SWFDisplayItem->moveTo | Moves object in global coordinates., returns void]
swfdisplayitem->moveto(|int x, int y)
[SWFDisplayItem->multColor | Multiplies the item's color transform., returns void]
swfdisplayitem->multcolor(|[int red], [int green], [int blue], [int a])
[SWFDisplayItem->remove | Removes the object from the movie, returns void]
swfdisplayitem->remove()|
[SWFDisplayItem->Rotate | Rotates in relative coordinates., returns void]
swfdisplayitem->rotate(|float ddegrees)
[SWFDisplayItem->rotateTo | Rotates the object in global coordinates., returns void]
swfdisplayitem->rotateto(|float degrees)
[SWFDisplayItem->scale | Scales the object in relative coordinates., returns void]
swfdisplayitem->scale(|int dx, int dy)
[SWFDisplayItem->scaleTo | Scales the object in global coordinates., returns void]
swfdisplayitem->scaleto(|int x, int y)
[SWFDisplayItem->setDepth | Sets z-order, returns void]
swfdisplayitem->setdepth(|float depth)
[SWFDisplayItem->setName | Sets the object's name, returns void]
swfdisplayitem->setname(|string name)
[SWFDisplayItem->setRatio | Sets the object's ratio., returns void]
swfdisplayitem->setratio(|float ratio)
[SWFDisplayItem->skewX | Sets the X-skew., returns void]
swfdisplayitem->skewx(|float ddegrees)
[SWFDisplayItem->skewXTo | Sets the X-skew., returns void]
swfdisplayitem->skewxto(|float degrees)
[SWFDisplayItem->skewY | Sets the Y-skew., returns void]
swfdisplayitem->skewy(|float ddegrees)
[SWFDisplayItem->skewYTo | Sets the Y-skew., returns void]
swfdisplayitem->skewyto(|float degrees)
[SWFDisplayItem | Creates a new displayitem object., returns new]
swfdisplayitem()|
[SWFFill->moveTo | Moves fill origin, returns void]
swffill->moveto(|int x, int y)
[SWFFill->rotateTo | Sets fill's rotation, returns void]
swffill->rotateto(|float degrees)
[SWFFill->scaleTo | Sets fill's scale, returns void]
swffill->scaleto(|int x, int y)
[SWFFill->skewXTo | Sets fill x-skew, returns void]
swffill->skewxto(|float x)
[SWFFill->skewYTo | Sets fill y-skew, returns void]
swffill->skewyto(|float y)
[SWFFill | Loads SWFFill object, returns new]
SWFFill()|
[swffont->getwidth | Returns the string's width, returns int]
swffont->getwidth(|string string)
[SWFFont | Loads a font definition, returns new]
swffont(|string filename)
[SWFGradient->addEntry | Adds an entry to the gradient list., returns void]
swfgradient->addentry(|float ratio, int red, int green, int blue, [int a])
[SWFGradient | Creates a gradient object, returns new]
swfgradient()|
[SWFMorph->getshape1 | Gets a handle to the starting shape, returns mixed]
swfmorph->getshape1()|
[SWFMorph->getshape2 | Gets a handle to the ending shape, returns mixed]
swfmorph->getshape2()|
[SWFMorph | Creates a new SWFMorph object., returns new]
swfmorph()|
[SWFMovie->add | Adds any type of data to a movie., returns void]
swfmovie->add(|resource instance)
[SWFMovie->nextframe | Moves to the next frame of the animation., returns void]
swfmovie->nextframe()|
[SWFMovie->output | Dumps your lovingly prepared movie out., returns void]
swfmovie->output()|
[swfmovie->remove | Removes the object instance from the display list., returns void]
swfmovie->remove(|resource instance)
[SWFMovie->save | Saves your movie in a file., returns void]
swfmovie->save(|string filename)
[SWFMovie->setbackground | Sets the background color., returns void]
swfmovie->setbackground(|int red, int green, int blue)
[SWFMovie->setdimension | Sets the movie's width and height., returns void]
swfmovie->setdimension(|int width, int height)
[SWFMovie->setframes | Sets the total number of frames in the animation., returns void]
swfmovie->setframes(|string numberofframes)
[SWFMovie->setrate | Sets the animation's frame rate., returns void]
swfmovie->setrate(|int rate)
[SWFMovie->streammp3 | Streams a MP3 file., returns void]
swfmovie->streammp3(|string mp3FileName)
[SWFMovie | Creates a new movie object, representing an SWF version 4 movie., returns new]
swfmovie()|
[SWFShape->addFill | Adds a solid fill to the shape., returns void]
swfshape->addfill(|int red, int green, int blue, [int a])
[SWFShape->drawCurve | Draws a curve (relative)., returns void]
swfshape->drawcurve(|int controldx, int controldy, int anchordx, int anchordy)
[SWFShape->drawCurveTo | Draws a curve., returns void]
swfshape->drawcurveto(|int controlx, int controly, int anchorx, int anchory)
[SWFShape->drawLine | Draws a line (relative)., returns void]
swfshape->drawline(|int dx, int dy)
[SWFShape->drawLineTo | Draws a line., returns void]
swfshape->drawlineto(|int x, int y)
[SWFShape->movePen | Moves the shape's pen (relative)., returns void]
swfshape->movepen(|int dx, int dy)
[SWFShape->movePenTo | Moves the shape's pen., returns void]
swfshape->movepento(|int x, int y)
[SWFShape->setLeftFill | Sets left rasterizing color., returns void]
swfshape->setleftfill(|swfgradient fill)
[SWFShape->setLine | Sets the shape's line style., returns void]
swfshape->setline(|int width, [int red], [int green], [int blue], [int a])
[SWFShape->setRightFill | Sets right rasterizing color., returns void]
swfshape->setrightfill(|swfgradient fill)
[SWFShape | Creates a new shape object., returns new]
swfshape()|
[swfsprite->add | Adds an object to a sprite, returns void]
swfsprite->add(|resource object)
[SWFSprite->nextframe | Moves to the next frame of the animation., returns void]
swfsprite->nextframe()|
[SWFSprite->remove | Removes an object to a sprite, returns void]
swfsprite->remove(|resource object)
[SWFSprite->setframes | Sets the total number of frames in the animation., returns void]
swfsprite->setframes(|int numberofframes)
[SWFSprite | Creates a movie clip (a sprite), returns new]
swfsprite()|
[SWFText->addString | Draws a string, returns void]
swftext->addstring(|string string)
[SWFText->getWidth | Computes string's width, returns void]
swftext->getwidth(|string string)
[SWFText->moveTo | Moves the pen, returns void]
swftext->moveto(|int x, int y)
[SWFText->setColor | Sets the current font color, returns void]
swftext->setcolor(|int red, int green, int blue, [int a])
[SWFText->setFont | Sets the current font, returns void]
swftext->setfont(|string font)
[SWFText->setHeight | Sets the current font height, returns void]
swftext->setheight(|int height)
[SWFText->setSpacing | Sets the current font spacing, returns void]
swftext->setspacing(|float spacing)
[SWFText | Creates a new SWFText object., returns new]
swftext()|
[SWFTextField->addstring | Concatenates the given string to the text field, returns void]
swftextfield->addstring(|string string)
[SWFTextField->align | Sets the text field alignment, returns void]
swftextfield->align(|int alignement)
[SWFTextField->setbounds | Sets the text field width and height, returns void]
swftextfield->setbounds(|int width, int height)
[SWFTextField->setcolor | Sets the color of the text field., returns void]
swftextfield->setcolor(|int red, int green, int blue, [int a])
[SWFTextField->setFont | Sets the text field font, returns void]
swftextfield->setfont(|string font)
[SWFTextField->setHeight | Sets the font height of this text field font., returns void]
swftextfield->setheight(|int height)
[SWFTextField->setindentation | Sets the indentation of the first line., returns void]
swftextfield->setindentation(|int width)
[SWFTextField->setLeftMargin | Sets the left margin width of the text field., returns void]
swftextfield->setleftmargin(|int width)
[SWFTextField->setLineSpacing | Sets the line spacing of the text field., returns void]
swftextfield->setlinespacing(|int height)
[SWFTextField->setMargins | Sets the margins width of the text field., returns void]
swftextfield->setmargins(|int left, int right)
[SWFTextField->setname | Sets the variable name, returns void]
swftextfield->setname(|string name)
[SWFTextField->setrightMargin | Sets the right margin width of the text field., returns void]
swftextfield->setrightmargin(|int width)
[SWFTextField | Creates a text field object, returns new]
swftextfield(|[int flags])
; -----------------------------------------------------------------------------
; Misc. - Miscellaneous functions
; -----------------------------------------------------------------------------
[connection_aborted | Returns TRUE if client disconnected, returns int]
connection_aborted()|
[connection_status | Returns connection status bitfield, returns int]
connection_status()|
[connection_timeout | Return TRUE if script timed out, returns bool]
connection_timeout()|
[constant | Returns the value of a constant, returns mixed]
constant(|string name)
[define | Defines a named constant., returns bool]
define(|string name, mixed value, [bool case_insensitive])
[defined | Checks whether a given named constant exists, returns bool]
defined(|string name)
[die | Alias of exit]
die(|)
[eval | Evaluate a string as PHP code, returns mixed]
eval(|string code_str)
[exit | Output a message and terminate the current script, returns void]
exit(|[string status])
[get_browser | Tells what the user's browser is capable of, returns object]
get_browser(|[string user_agent])
[highlight_file | Syntax highlighting of a file, returns mixed]
highlight_file(|string filename, [bool return])
[highlight_string | Syntax highlighting of a string, returns mixed]
highlight_string(|string str, [bool return])
[ignore_user_abort | Set whether a client disconnect should abort script execution, returns int]
ignore_user_abort(|[bool setting])
[pack | Pack data into binary string., returns string]
pack(|string format, [mixed args])
[show_source | Alias of highlight_file]
show_source(|)
[sleep | Delay execution, returns void]
sleep(|int seconds)
[uniqid | Generate a unique ID, returns string]
uniqid(|string prefix, [bool lcg])
[unpack | Unpack data from binary string, returns array]
unpack(|string format, string data)
[usleep | Delay execution in microseconds, returns void]
usleep(|int micro_seconds)
; -----------------------------------------------------------------------------
; mnoGoSearch - mnoGoSearch Functions
; -----------------------------------------------------------------------------
[udm_add_search_limit | Add various search limits, returns bool]
udm_add_search_limit(|resource agent, int var, string val)
[udm_alloc_agent | Allocate mnoGoSearch session, returns resource]
udm_alloc_agent(|string dbaddr, [string dbmode])
[udm_api_version | Get mnoGoSearch API version., returns int]
udm_api_version()|
[udm_cat_list | Get all the categories on the same level with the current one., returns array]
udm_cat_list(|resource agent, string category)
[udm_cat_path | Get the path to the current category., returns array]
udm_cat_path(|resource agent, string category)
[udm_check_charset | Check if the given charset is known to mnogosearch, returns bool]
udm_check_charset(|resource agent, string charset)
[udm_check_stored | Check connection to stored, returns int]
udm_check_stored(|resource agent, int link, string doc_id)
[udm_clear_search_limits | Clear all mnoGoSearch search restrictions, returns bool]
udm_clear_search_limits(|resource agent)
[udm_close_stored | Close connection to stored, returns int]
udm_close_stored(|resource agent, int link)
[udm_crc32 | Return CRC32 checksum of gived string, returns int]
udm_crc32(|resource agent, string str)
[udm_errno | Get mnoGoSearch error number, returns int]
udm_errno(|resource agent)
[udm_error | Get mnoGoSearch error message, returns string]
udm_error(|resource agent)
[udm_find | Perform search, returns resource]
udm_find(|resource agent, string query)
[udm_free_agent | Free mnoGoSearch session, returns int]
udm_free_agent(|resource agent)
[udm_free_ispell_data | Free memory allocated for ispell data, returns bool]
udm_free_ispell_data(|int agent)
[udm_free_res | Free mnoGoSearch result, returns bool]
udm_free_res(|resource res)
[udm_get_doc_count | Get total number of documents in database., returns int]
udm_get_doc_count(|resource agent)
[udm_get_res_field | Fetch mnoGoSearch result field, returns string]
udm_get_res_field(|resource res, int row, int field)
[udm_get_res_param | Get mnoGoSearch result parameters, returns string]
udm_get_res_param(|resource res, int param)
[udm_load_ispell_data | Load ispell data, returns bool]
udm_load_ispell_data(|resource agent, int var, string val1, string val2, int flag)
[udm_open_stored | Open connection to stored, returns int]
udm_open_stored(|resource agent, string storedaddr)
[udm_set_agent_param | Set mnoGoSearch agent session parameters, returns bool]
udm_set_agent_param(|resource agent, int var, string val)
; -----------------------------------------------------------------------------
; mSQL - mSQL functions
; -----------------------------------------------------------------------------
[msql_affected_rows | Returns number of affected rows, returns int]
msql_affected_rows(|int query_identifier)
[msql_close | Close mSQL connection, returns int]
msql_close(|int link_identifier)
[msql_connect | Open mSQL connection, returns int]
msql_connect(|[string hostname], [string server], [string username], [string password])
[msql_create_db | Create mSQL database, returns int]
msql_create_db(|string database_name, [int link_identifier])
[msql_createdb | Create mSQL database, returns int]
msql_createdb(|string database_name, [int link_identifier])
[msql_data_seek | Move internal row pointer, returns int]
msql_data_seek(|int query_identifier, int row_number)
[msql_dbname | Get current mSQL database name, returns string]
msql_dbname(|int query_identifier, int i)
[msql_drop_db | Drop (delete) mSQL database, returns int]
msql_drop_db(|string database_name, int link_identifier)
[msql_dropdb | Drop (delete) mSQL database]
[msql_error | Returns error message of last msql call, returns string]
msql_error(|[int link_identifier])
[msql_fetch_array | Fetch row as array, returns int]
msql_fetch_array(|int query_identifier, [int result_type])
[msql_fetch_field | Get field information, returns object]
msql_fetch_field(|int query_identifier, int field_offset)
[msql_fetch_object | Fetch row as object, returns int]
msql_fetch_object(|int query_identifier, [int result_type])
[msql_fetch_row | Get row as enumerated array, returns array]
msql_fetch_row(|int query_identifier)
[msql_field_seek | Set field offset, returns int]
msql_field_seek(|int query_identifier, int field_offset)
[msql_fieldflags | Get field flags, returns string]
msql_fieldflags(|int query_identifier, int i)
[msql_fieldlen | Get field length, returns int]
msql_fieldlen(|int query_identifier, int i)
[msql_fieldname | Get field name, returns string]
msql_fieldname(|int query_identifier, int field)
[msql_fieldtable | Get table name for field, returns int]
msql_fieldtable(|int query_identifier, int field)
[msql_fieldtype | Get field type, returns string]
msql_fieldtype(|int query_identifier, int i)
[msql_free_result | Free result memory, returns int]
msql_free_result(|int query_identifier)
[msql_freeresult | Free result memory]
[msql_list_dbs | List mSQL databases on server, returns int]
msql_list_dbs()|
[msql_list_fields | List result fields, returns int]
msql_list_fields(|string database, string tablename)
[msql_list_tables | List tables in an mSQL database, returns int]
msql_list_tables(|string database)
[msql_listdbs | List mSQL databases on server]
[msql_listfields | List result fields]
[msql_listtables | List tables in an mSQL database]
[msql_num_fields | Get number of fields in result, returns int]
msql_num_fields(|int query_identifier)
[msql_num_rows | Get number of rows in result, returns int]
msql_num_rows(|resource query_identifier)
[msql_numfields | Get number of fields in result, returns int]
msql_numfields(|int query_identifier)
[msql_numrows | Get number of rows in result, returns int]
msql_numrows()|
[msql_pconnect | Open persistent mSQL connection, returns int]
msql_pconnect(|[string server], [string username], [string password])
[msql_query | Send mSQL query, returns int]
msql_query(|string query, int link_identifier)
[msql_regcase | Make regular expression for case insensitive match]
[msql_result | Get result data, returns int]
msql_result(|int query_identifier, int i, mixed field)
[msql_select_db | Select mSQL database, returns int]
msql_select_db(|string database_name, int link_identifier)
[msql_selectdb | Select mSQL database]
[msql_tablename | Get table name of field, returns string]
msql_tablename(|int query_identifier, int field)
[msql | Send mSQL query, returns int]
msql(|string database, string query, int link_identifier)
; -----------------------------------------------------------------------------
; MySQL - MySQL Functions
; -----------------------------------------------------------------------------
[mysql_affected_rows | Get number of affected rows in previous MySQL operation, returns int]
mysql_affected_rows(|[resource link_identifier])
[mysql_change_user | Change logged in user of the active connection, returns int]
mysql_change_user(|string user, string password, [string database], [resource link_identifier])
[mysql_client_encoding | Returns the name of the character set, returns int]
mysql_client_encoding(|[resource link_identifier])
[mysql_close | Close MySQL connection, returns bool]
mysql_close(|[resource link_identifier])
[mysql_connect | Open a connection to a MySQL Server, returns resource]
mysql_connect(|[string server], [string username], [string password], [bool new_link], [int client_flags])
[mysql_create_db | Create a MySQL database, returns bool]
mysql_create_db(|string database_name, [resource link_identifier])
[mysql_data_seek | Move internal result pointer, returns bool]
mysql_data_seek(|resource result_identifier, int row_number)
[mysql_db_name | Get result data, returns string]
mysql_db_name(|resource result, int row, [mixed field])
[mysql_db_query | Send a MySQL query, returns resource]
mysql_db_query(|string database, string query, [resource link_identifier])
[mysql_drop_db | Drop (delete) a MySQL database, returns bool]
mysql_drop_db(|string database_name, [resource link_identifier])
[mysql_errno | Returns the numerical value of the error message from previous MySQL operation, returns int]
mysql_errno(|[resource link_identifier])
[mysql_error | Returns the text of the error message from previous MySQL operation, returns string]
mysql_error(|[resource link_identifier])
[mysql_escape_string | Escapes a string for use in a mysql_query., returns string]
mysql_escape_string(|string unescaped_string)
[mysql_fetch_array | Fetch a result row as an associative array, a numeric array, or both., returns array]
mysql_fetch_array(|resource result, [int result_type])
[mysql_fetch_assoc | Fetch a result row as an associative array, returns array]
mysql_fetch_assoc(|resource result)
[mysql_fetch_field | Get column information from a result and return as an object, returns object]
mysql_fetch_field(|resource result, [int field_offset])
[mysql_fetch_lengths | Get the length of each output in a result, returns array]
mysql_fetch_lengths(|resource result)
[mysql_fetch_object | Fetch a result row as an object, returns object]
mysql_fetch_object(|resource result)
[mysql_fetch_row | Get a result row as an enumerated array, returns array]
mysql_fetch_row(|resource result)
[mysql_field_flags | Get the flags associated with the specified field in a result, returns string]
mysql_field_flags(|resource result, int field_offset)
[mysql_field_len | Returns the length of the specified field, returns int]
mysql_field_len(|resource result, int field_offset)
[mysql_field_name | Get the name of the specified field in a result, returns string]
mysql_field_name(|resource result, int field_index)
[mysql_field_seek | Set result pointer to a specified field offset, returns int]
mysql_field_seek(|resource result, int field_offset)
[mysql_field_table | Get name of the table the specified field is in, returns string]
mysql_field_table(|resource result, int field_offset)
[mysql_field_type | Get the type of the specified field in a result, returns string]
mysql_field_type(|resource result, int field_offset)
[mysql_free_result | Free result memory, returns bool]
mysql_free_result(|resource result)
[mysql_get_client_info | Get MySQL client info, returns string]
mysql_get_client_info()|
[mysql_get_host_info | Get MySQL host info, returns string]
mysql_get_host_info(|[resource link_identifier])
[mysql_get_proto_info | Get MySQL protocol info, returns int]
mysql_get_proto_info(|[resource link_identifier])
[mysql_get_server_info | Get MySQL server info, returns string]
mysql_get_server_info(|[resource link_identifier])
[mysql_info | Get information about the most recent query, returns string]
mysql_info(|[resource link_identifier])
[mysql_insert_id | Get the ID generated from the previous INSERT operation, returns int]
mysql_insert_id(|[resource link_identifier])
[mysql_list_dbs | List databases available on a MySQL server, returns resource]
mysql_list_dbs(|[resource link_identifier])
[mysql_list_fields | List MySQL table fields, returns resource]
mysql_list_fields(|string database_name, string table_name, [resource link_identifier])
[mysql_list_processes | List MySQL processes, returns resource]
mysql_list_processes(|[resource link_identifier])
[mysql_list_tables | List tables in a MySQL database, returns resource]
mysql_list_tables(|string database, [resource link_identifier])
[mysql_num_fields | Get number of fields in result, returns int]
mysql_num_fields(|resource result)
[mysql_num_rows | Get number of rows in result, returns int]
mysql_num_rows(|resource result)
[mysql_pconnect | Open a persistent connection to a MySQL server, returns resource]
mysql_pconnect(|[string server], [string username], [string password], [int client_flags])
[mysql_ping | Ping a server connection or reconnect if there is no connection, returns bool]
mysql_ping(|[resource link_identifier])
[mysql_query | Send a MySQL query, returns resource]
mysql_query(|string query, [resource link_identifier])
[mysql_real_escape_string | Escapes special characters in a string for use in a SQL statement, taking into account the current charset of the connection., returns string]
mysql_real_escape_string(|string unescaped_string, [resource link_identifier])
[mysql_result | Get result data, returns mixed]
mysql_result(|resource result, int row, [mixed field])
[mysql_select_db | Select a MySQL database, returns bool]
mysql_select_db(|string database_name, [resource link_identifier])
[mysql_stat | Get current system status, returns string]
mysql_stat(|[resource link_identifier])
[mysql_tablename | Get table name of field, returns string]
mysql_tablename(|resource result, int i)
[mysql_thread_id | Return the current thread ID, returns int]
mysql_thread_id(|[resource link_identifier])
[mysql_unbuffered_query | Send an SQL query to MySQL, without fetching and buffering the result rows, returns resource]
mysql_unbuffered_query(|string query, [resource link_identifier])
; -----------------------------------------------------------------------------
; mysqli - Improved MySQL Extension
; -----------------------------------------------------------------------------
[mysqli_affected_rows | Gets the number of affected rows in a previous MySQL operation, returns mixed]
mysqli_affected_rows(|object link)
[mysqli_autocommit | Turns on or off auto-commiting database modifications, returns bool]
mysqli_autocommit(|object link, bool mode)
[mysqli_bind_param | Binds variables to a prepared statement as parameters, returns bool]
mysqli_bind_param(|object stmt, array types, mixed var1, [mixed var2, ...])
[mysqli_bind_result | Binds variables to a prepared statement for result storage, returns bool]
mysqli_bind_result(|resource stmt, mixed var, int len)
[mysqli_change_user | Changes the user of the specified database connection, returns bool]
mysqli_change_user(|resource link, string user, string password, string database)
[mysqli_character_set_name | Returns the default character set for the database connection, returns string]
mysqli_character_set_name(|resource link)
[mysqli_close | Closes a previously opened database connection, returns bool]
mysqli_close(|resource link)
[mysqli_commit | Commits the current transaction, returns bool]
mysqli_commit(|resource link)
[mysqli_connect | Open a new connection to the MySQL server, returns resource]
mysqli_connect(|[string hostname], [string username], [string passwd], [string dbname], [int port], [string socket])
[mysqli_data_seek | Adjusts the result pointer to an arbitary row in the result, returns void]
mysqli_data_seek(|resource result, int offset)
[mysqli_debug | Performs debugging operations, returns void]
mysqli_debug(|string debug)
[mysqli_disable_reads_from_master | , returns void]
mysqli_disable_reads_from_master(|resource link)
[mysqli_disable_rpl_parse | , returns void]
mysqli_disable_rpl_parse(|resource link)
[mysqli_dump_debug_info | Dump debugging information into the log, returns bool]
mysqli_dump_debug_info(|resource link)
[mysqli_enable_reads_from_master | , returns void]
mysqli_enable_reads_from_master(|resource link)
[mysqli_enable_rpl_parse | , returns void]
mysqli_enable_rpl_parse(|resource link)
[mysqli_errno | Returns the error code for the most recent function call, returns int]
mysqli_errno(|resource link)
[mysqli_error | Returns a string description of the last error, returns string]
mysqli_error(|resource link)
[mysqli_execute | Executes a prepared Query, returns int]
mysqli_execute(|resource stmt)
[mysqli_fetch_array | Fetch a result row as an associative, a numeric array, or both., returns array]
mysqli_fetch_array(|resource result, [int resulttype])
[mysqli_fetch_assoc | Fetch a result row as an associative array, returns array]
mysqli_fetch_assoc(|resource result)
[mysqli_fetch_field_direct | Fetch meta-data for a single field, returns int]
mysqli_fetch_field_direct(|resource result, int offset)
[mysqli_fetch_field | Returns the next field in the result set, returns object]
mysqli_fetch_field(|resource result)
[mysqli_fetch_fields | Returns an array of objects representing the fields in a result set, returns array]
mysqli_fetch_fields(|resource result)
[mysqli_fetch_lengths | Returns the lengths of the columns of the current row in the result set, returns array]
mysqli_fetch_lengths(|resource result)
[mysqli_fetch_object | Returns the current row of a result set as an object, returns object]
mysqli_fetch_object(|resource result)
[mysqli_fetch_row | Get a result row as an enumerated array, returns array]
mysqli_fetch_row(|resource result)
[mysqli_fetch | Fetch results from a prepared statement into the bound variables, returns int]
mysqli_fetch(|resource stmt)
[mysqli_field_count | Returns the number of columns for the most recent query, returns int]
mysqli_field_count(|resource link)
[mysqli_field_seek | Set result pointer to a specified field offset, returns int]
mysqli_field_seek(|resource link, int fieldnr)
[mysqli_field_tell | Get current field offset of a result pointer, returns int]
mysqli_field_tell(|resource result)
[mysqli_free_result | Frees the memory associated with a result, returns int]
mysqli_free_result(|resource result)
[mysqli_get_client_info | Returns the MySQL client version as a string, returns string]
mysqli_get_client_info(|void )
[mysqli_get_host_info | Returns a string representing the type of connection used, returns string]
mysqli_get_host_info(|resource link)
[mysqli_get_proto_info | Returns the version of the MySQL protocol used, returns int]
mysqli_get_proto_info(|resource link)
[mysqli_get_server_info | Returns the version of the MySQL server, returns string]
mysqli_get_server_info(|resource link)
[mysqli_get_server_version | Returns the version of the MySQL server as an integer, returns int]
mysqli_get_server_version(|resource link)
[mysqli_info | Retrieves information about the most recently executed query, returns string]
mysqli_info(|resource link)
[mysqli_init | Initializes MySQLi and returns a resource for use with mysqli_real_connect, returns resource]
mysqli_init()|
[mysqli_insert_id | Returns the auto generated id used in the last query, returns mixed]
mysqli_insert_id(|resource link)
[mysqli_kill | Asks the server to kill a MySQL thread, returns bool]
mysqli_kill(|resource link, int processid)
[mysqli_master_query | Enforce execution of a query on the master in a master/slave setup, returns bool]
mysqli_master_query(|resource link, string query)
[mysqli_num_fields | Get the number of fields in a result, returns int]
mysqli_num_fields(|resource result)
[mysqli_num_rows | Gets the number of rows in a result, returns int]
mysqli_num_rows(|resource result)
[mysqli_options | set options, returns bool]
mysqli_options(|resource link, int flags, mixed values)
[mysqli_param_count | Returns the number of parameter for the given statement, returns int]
mysqli_param_count(|resource stmt)
[mysqli_ping | Ping a server connection, or reconnect if there is no connection, returns int]
mysqli_ping(|resource link)
[mysqli_prepare_result | , returns resource]
mysqli_prepare_result(|resource stmt)
[mysqli_prepare | Prepare a SQL statement for execution, returns resource]
mysqli_prepare(|resource link, string query)
[mysqli_profiler | , returns bool]
mysqli_profiler(|int flags, string info, int port)
[mysqli_query | Performs a query on the database, returns resource]
mysqli_query(|resource link, string query, [int resultmode])
[mysqli_read_query_result | , returns bool]
mysqli_read_query_result(|resource link)
[mysqli_real_connect | Opens a connection to a mysql server, returns bool]
mysqli_real_connect(|resource link, [string hostname], [string username], [string passwd], [string dbname], [int port], [string socket])
[mysqli_real_escape_string | Escapes special characters in a string for use in a SQL statement, taking into account the current charset of the connection, returns string]
mysqli_real_escape_string(|resource link, string escapestr)
[mysqli_real_query | Execute an SQL query, returns bool]
mysqli_real_query(|resource link, string query)
[mysqli_reload | , returns bool]
mysqli_reload(|resource link)
[mysqli_rollback | , returns bool]
mysqli_rollback(|resource link)
[mysqli_rpl_parse_enabled | , returns int]
mysqli_rpl_parse_enabled(|resource link)
[mysqli_rpl_probe | , returns bool]
mysqli_rpl_probe(|resource link)
[mysqli_rpl_query_type | , returns int]
mysqli_rpl_query_type(|string query)
[mysqli_select_db | Selects the default database for database queries, returns bool]
mysqli_select_db(|resource link, string dbname)
[mysqli_send_long_data | , returns bool]
mysqli_send_long_data(|resource stmt, int param_nr, string data)
[mysqli_send_query | , returns bool]
mysqli_send_query(|resource link, string query)
[mysqli_slave_query | Enforces execution of a query on a slave in a master/slave setup, returns bool]
mysqli_slave_query(|resource link, string query)
[mysqli_ssl_set | , returns string]
mysqli_ssl_set(|resource link, [string key], [string cert], [string ca], [string capath], [string cipher])
[mysqli_stat | Gets the current system status, returns string]
mysqli_stat(|resource link)
[mysqli_stmt_affected_rows | , returns mixed]
mysqli_stmt_affected_rows(|object stmt)
[mysqli_stmt_close | close statement, returns bool]
mysqli_stmt_close(|resource stmt)
[mysqli_stmt_errno | , returns int]
mysqli_stmt_errno(|resource stmt)
[mysqli_stmt_error | , returns string]
mysqli_stmt_error(|resource stmt)
[mysqli_stmt_store_result | , returns resource]
mysqli_stmt_store_result(|resource stmt)
[mysqli_store_result | Transfers a result set from the last query, returns resource]
mysqli_store_result(|resource link)
[mysqli_thread_id | Returns the thread ID for the current connection, returns int]
mysqli_thread_id(|resource link)
[mysqli_thread_safe | Returns whether thread safety is given or not, returns bool]
mysqli_thread_safe(|void )
[mysqli_use_result | Initiate a result set retrieval, returns resource]
mysqli_use_result(|resource link)
[mysqli_warning_count | Returns the number of warnings from the last query for the given link, returns resource]
mysqli_warning_count(|resource link)
; -----------------------------------------------------------------------------
; Msession - Mohawk Software session handler functions
; -----------------------------------------------------------------------------
[msession_connect | Connect to msession server, returns bool]
msession_connect(|string host, string port)
[msession_count | Get session count, returns int]
msession_count()|
[msession_create | Create a session, returns bool]
msession_create(|string session)
[msession_destroy | Destroy a session, returns bool]
msession_destroy(|string name)
[msession_disconnect | Close connection to msession server, returns void]
msession_disconnect()|
[msession_find | Find value, returns array]
msession_find(|string name, string value)
[msession_get_array | Get array of ... ?, returns array]
msession_get_array(|string session)
[msession_get | Get value from session, returns string]
msession_get(|string session, string name, string value)
[msession_getdata | Get data ... ?, returns string]
msession_getdata(|string session)
[msession_inc | Increment value in session, returns string]
msession_inc(|string session, string name)
[msession_list | List ... ?, returns array]
msession_list()|
[msession_listvar | List sessions with variable, returns array]
msession_listvar(|string name)
[msession_lock | Lock a session, returns int]
msession_lock(|string name)
[msession_plugin | Call an escape function within the msession personality plugin, returns string]
msession_plugin(|string session, string val, [string param])
[msession_randstr | Get random string, returns string]
msession_randstr(|int param)
[msession_set_array | Set array of ..., returns bool]
msession_set_array(|string session, array tuples)
[msession_set | Set value in session, returns bool]
msession_set(|string session, string name, string value)
[msession_setdata | Set data ... ?, returns bool]
msession_setdata(|string session, string value)
[msession_timeout | Set/get session timeout, returns int]
msession_timeout(|string session, [int param])
[msession_uniq | Get uniq id, returns string]
msession_uniq(|int param)
[msession_unlock | Unlock a session, returns int]
msession_unlock(|string session, int key)
; -----------------------------------------------------------------------------
; muscat - muscat functions
; -----------------------------------------------------------------------------
[muscat_close | Shuts down the muscat session and releases any memory back to PHP., returns int]
muscat_close(|resource muscat_handle)
[muscat_get | Gets a line back from the core muscat API., returns string]
muscat_get(|resource muscat_handle)
[muscat_give | Sends string to the core muscat API, returns int]
muscat_give(|resource muscat_handle, string string)
[muscat_setup_net | Creates a new muscat session and returns the handle., returns resource]
muscat_setup_net(|string muscat_host, int port)
[muscat_setup | Creates a new muscat session and returns the handle., returns resource]
muscat_setup(|int size, [string muscat_dir])
; -----------------------------------------------------------------------------
; Network - Network Functions
; -----------------------------------------------------------------------------
[checkdnsrr | Check DNS records corresponding to a given Internet host name or IP address, returns int]
checkdnsrr(|string host, [string type])
[closelog | Close connection to system logger, returns int]
closelog()|
[debugger_off | Disable internal PHP debugger (PHP 3), returns int]
debugger_off()|
[debugger_on | Enable internal PHP debugger (PHP 3), returns int]
debugger_on(|string address)
[define_syslog_variables | Initializes all syslog related constants, returns void]
define_syslog_variables()|
[dns_check_record | Synonym for checkdnsrr, returns int]
dns_check_record(|string host, [string type])
[dns_get_mx | Synonym for getmxrr, returns int]
dns_get_mx(|string hostname, array mxhosts, [array &weight])
[dns_get_record | Fetch DNS Resource Records associated with a hostname, returns array]
dns_get_record(|string hostname, [int type], [array &authns], array &addtl)
[fsockopen | Open Internet or Unix domain socket connection, returns int]
fsockopen(|string target, int port, [int errno], [string errstr], [float timeout])
[gethostbyaddr | Get the Internet host name corresponding to a given IP address, returns string]
gethostbyaddr(|string ip_address)
[gethostbyname | Get the IP address corresponding to a given Internet host name, returns string]
gethostbyname(|string hostname)
[gethostbynamel | Get a list of IP addresses corresponding to a given Internet host name, returns array]
gethostbynamel(|string hostname)
[getmxrr | Get MX records corresponding to a given Internet host name, returns int]
getmxrr(|string hostname, array mxhosts, [array weight])
[getprotobyname | Get protocol number associated with protocol name, returns int]
getprotobyname(|string name)
[getprotobynumber | Get protocol name associated with protocol number, returns string]
getprotobynumber(|int number)
[getservbyname | Get port number associated with an Internet service and protocol, returns int]
getservbyname(|string service, string protocol)
[getservbyport | Get Internet service which corresponds to port and protocol, returns string]
getservbyport(|int port, string protocol)
[ip2long | Converts a string containing an (IPv4) Internet Protocol dotted address into a proper address., returns int]
ip2long(|string ip_address)
[long2ip | Converts an (IPv4) Internet network address into a string in Internet standard dotted format, returns string]
long2ip(|int proper_address)
[openlog | Open connection to system logger, returns int]
openlog(|string ident, int option, int facility)
[pfsockopen | Open persistent Internet or Unix domain socket connection, returns int]
pfsockopen(|string hostname, int port, [int errno], [string errstr], [int timeout])
[socket_get_status | Alias of stream_get_meta_data.]
socket_get_status(|)
[socket_set_blocking | Alias for stream_set_blocking]
socket_set_blocking(|)
[socket_set_timeout | Alias for stream_set_timeout]
socket_set_timeout(|)
[syslog | Generate a system log message, returns int]
syslog(|int priority, string message)
; -----------------------------------------------------------------------------
; Ncurses - Ncurses terminal screen control functions
; -----------------------------------------------------------------------------
[ncurses_addch | Add character at current position and advance cursor, returns int]
ncurses_addch(|int ch)
[ncurses_addchnstr | Add attributed string with specified length at current position, returns int]
ncurses_addchnstr(|string s, int n)
[ncurses_addchstr | Add attributed string at current position, returns int]
ncurses_addchstr(|string s)
[ncurses_addnstr | Add string with specified length at current position, returns int]
ncurses_addnstr(|string s, int n)
[ncurses_addstr | Output text at current position, returns int]
ncurses_addstr(|string text)
[ncurses_assume_default_colors | Define default colors for color 0, returns int]
ncurses_assume_default_colors(|int fg, int bg)
[ncurses_attroff | Turn off the given attributes, returns int]
ncurses_attroff(|int attributes)
[ncurses_attron | Turn on the given attributes, returns int]
ncurses_attron(|int attributes)
[ncurses_attrset | Set given attributes, returns int]
ncurses_attrset(|int attributes)
[ncurses_baudrate | Returns baudrate of terminal, returns int]
ncurses_baudrate()|
[ncurses_beep | Let the terminal beep, returns int]
ncurses_beep()|
[ncurses_bkgd | Set background property for terminal screen, returns int]
ncurses_bkgd(|int attrchar)
[ncurses_bkgdset | Control screen background, returns void]
ncurses_bkgdset(|int attrchar)
[ncurses_border | Draw a border around the screen using attributed characters, returns int]
ncurses_border(|int left, int right, int top, int bottom, int tl_corner, int tr_corner, int bl_corner, int br_corner)
[ncurses_bottom_panel | Moves a visible panel to the bottom of the stack, returns int]
ncurses_bottom_panel(|resource panel)
[ncurses_can_change_color | Check if we can change terminals colors, returns bool]
ncurses_can_change_color()|
[ncurses_cbreak | Switch of input buffering, returns bool]
ncurses_cbreak()|
[ncurses_clear | Clear screen, returns bool]
ncurses_clear()|
[ncurses_clrtobot | Clear screen from current position to bottom, returns bool]
ncurses_clrtobot()|
[ncurses_clrtoeol | Clear screen from current position to end of line, returns bool]
ncurses_clrtoeol()|
[ncurses_color_content | Gets the RGB value for color, returns int]
ncurses_color_content(|int color, int &r, int &g, int &b)
[ncurses_color_set | Set fore- and background color, returns int]
ncurses_color_set(|int pair)
[ncurses_curs_set | Set cursor state, returns int]
ncurses_curs_set(|int visibility)
[ncurses_def_prog_mode | Saves terminals (program) mode, returns bool]
ncurses_def_prog_mode()|
[ncurses_def_shell_mode | Saves terminals (shell) mode, returns bool]
ncurses_def_shell_mode()|
[ncurses_define_key | Define a keycode, returns int]
ncurses_define_key(|string definition, int keycode)
[ncurses_del_panel | Remove panel from the stack and delete it (but not the associated window), returns int]
ncurses_del_panel(|resource panel)
[ncurses_delay_output | Delay output on terminal using padding characters, returns int]
ncurses_delay_output(|int milliseconds)
[ncurses_delch | Delete character at current position, move rest of line left, returns bool]
ncurses_delch()|
[ncurses_deleteln | Delete line at current position, move rest of screen up, returns bool]
ncurses_deleteln()|
[ncurses_delwin | Delete a ncurses window, returns int]
ncurses_delwin(|resource window)
[ncurses_doupdate | Write all prepared refreshes to terminal, returns bool]
ncurses_doupdate()|
[ncurses_echo | Activate keyboard input echo, returns bool]
ncurses_echo()|
[ncurses_echochar | Single character output including refresh, returns int]
ncurses_echochar(|int character)
[ncurses_end | Stop using ncurses, clean up the screen, returns int]
ncurses_end()|
[ncurses_erase | Erase terminal screen, returns bool]
ncurses_erase()|
[ncurses_erasechar | Returns current erase character, returns string]
ncurses_erasechar()|
[ncurses_filter | , returns int]
ncurses_filter()|
[ncurses_flash | Flash terminal screen (visual bell), returns bool]
ncurses_flash()|
[ncurses_flushinp | Flush keyboard input buffer, returns bool]
ncurses_flushinp()|
[ncurses_getch | Read a character from keyboard, returns int]
ncurses_getch()|
[ncurses_getmaxyx | Returns the size of a window, returns void]
ncurses_getmaxyx(|resource window, int &y, int &x)
[ncurses_getmouse | Reads mouse event, returns bool]
ncurses_getmouse(|array mevent)
[ncurses_getyx | Returns the current cursor position for a window, returns void]
ncurses_getyx(|resource window, int &y, int &x)
[ncurses_halfdelay | Put terminal into halfdelay mode, returns int]
ncurses_halfdelay(|int tenth)
[ncurses_has_colors | Check if terminal has colors, returns bool]
ncurses_has_colors()|
[ncurses_has_ic | Check for insert- and delete-capabilities, returns bool]
ncurses_has_ic()|
[ncurses_has_il | Check for line insert- and delete-capabilities, returns bool]
ncurses_has_il()|
[ncurses_has_key | Check for presence of a function key on terminal keyboard, returns int]
ncurses_has_key(|int keycode)
[ncurses_hide_panel | Remove panel from the stack, making it invisible, returns int]
ncurses_hide_panel(|resource panel)
[ncurses_hline | Draw a horizontal line at current position using an attributed character and max. n characters long, returns int]
ncurses_hline(|int charattr, int n)
[ncurses_inch | Get character and attribute at current position, returns string]
ncurses_inch()|
[ncurses_init_color | Set new RGB value for color, returns int]
ncurses_init_color(|int color, int r, int g, int b)
[ncurses_init_pair | Allocate a color pair, returns int]
ncurses_init_pair(|int pair, int fg, int bg)
[ncurses_init | Initialize ncurses, returns int]
ncurses_init()|
[ncurses_insch | Insert character moving rest of line including character at current position, returns int]
ncurses_insch(|int character)
[ncurses_insdelln | Insert lines before current line scrolling down (negative numbers delete and scroll up), returns int]
ncurses_insdelln(|int count)
[ncurses_insertln | Insert a line, move rest of screen down, returns bool]
ncurses_insertln()|
[ncurses_insstr | Insert string at current position, moving rest of line right, returns int]
ncurses_insstr(|string text)
[ncurses_instr | Reads string from terminal screen, returns int]
ncurses_instr(|string buffer)
[ncurses_isendwin | Ncurses is in endwin mode, normal screen output may be performed, returns bool]
ncurses_isendwin()|
[ncurses_keyok | Enable or disable a keycode, returns int]
ncurses_keyok(|int keycode, bool enable)
[ncurses_keypad | Turns keypad on or off, returns int]
ncurses_keypad(|resource window, bool bf)
[ncurses_killchar | Returns current line kill character, returns bool]
ncurses_killchar()|
[ncurses_longname | Returns terminals description, returns string]
ncurses_longname()|
[ncurses_meta | Enables/Disable 8-bit meta key information, returns long]
ncurses_meta(|resource window, bool 8bit)
[ncurses_mouse_trafo | Transforms coordinates, returns bool]
ncurses_mouse_trafo(|int &y, int &x, bool toscreen)
[ncurses_mouseinterval | Set timeout for mouse button clicks, returns int]
ncurses_mouseinterval(|int milliseconds)
[ncurses_mousemask | Sets mouse options, returns int]
ncurses_mousemask(|int newmask, int oldmask)
[ncurses_move_panel | Moves a panel so that it's upper-left corner is at [startx, starty], returns int]
ncurses_move_panel(|resource panel, int startx, int starty)
[ncurses_move | Move output position, returns int]
ncurses_move(|int y, int x)
[ncurses_mvaddch | Move current position and add character, returns int]
ncurses_mvaddch(|int y, int x, int c)
[ncurses_mvaddchnstr | Move position and add attrributed string with specified length, returns int]
ncurses_mvaddchnstr(|int y, int x, string s, int n)
[ncurses_mvaddchstr | Move position and add attributed string, returns int]
ncurses_mvaddchstr(|int y, int x, string s)
[ncurses_mvaddnstr | Move position and add string with specified length, returns int]
ncurses_mvaddnstr(|int y, int x, string s, int n)
[ncurses_mvaddstr | Move position and add string, returns int]
ncurses_mvaddstr(|int y, int x, string s)
[ncurses_mvcur | Move cursor immediately, returns int]
ncurses_mvcur(|int old_y, int old_x, int new_y, int new_x)
[ncurses_mvdelch | Move position and delete character, shift rest of line left, returns int]
ncurses_mvdelch(|int y, int x)
[ncurses_mvgetch | Move position and get character at new position, returns int]
ncurses_mvgetch(|int y, int x)
[ncurses_mvhline | Set new position and draw a horizontal line using an attributed character and max. n characters long, returns int]
ncurses_mvhline(|int y, int x, int attrchar, int n)
[ncurses_mvinch | Move position and get attributed character at new position, returns int]
ncurses_mvinch(|int y, int x)
[ncurses_mvvline | Set new position and draw a vertical line using an attributed character and max. n characters long, returns int]
ncurses_mvvline(|int y, int x, int attrchar, int n)
[ncurses_mvwaddstr | Add string at new position in window, returns int]
ncurses_mvwaddstr(|resource window, int y, int x, string text)
[ncurses_napms | Sleep, returns int]
ncurses_napms(|int milliseconds)
[ncurses_new_panel | Create a new panel and associate it with window, returns resource]
ncurses_new_panel(|resource window)
[ncurses_newpad | Creates a new pad (window), returns resource]
ncurses_newpad(|int rows, int cols)
[ncurses_newwin | Create a new window, returns int]
ncurses_newwin(|int rows, int cols, int y, int x)
[ncurses_nl | Translate newline and carriage return / line feed, returns bool]
ncurses_nl()|
[ncurses_nocbreak | Switch terminal to cooked mode, returns bool]
ncurses_nocbreak()|
[ncurses_noecho | Switch off keyboard input echo, returns bool]
ncurses_noecho()|
[ncurses_nonl | Do not translate newline and carriage return / line feed, returns bool]
ncurses_nonl()|
[ncurses_noqiflush | Do not flush on signal characters, returns int]
ncurses_noqiflush()|
[ncurses_noraw | Switch terminal out of raw mode, returns bool]
ncurses_noraw()|
[ncurses_pair_content | Gets the RGB value for color, returns int]
ncurses_pair_content(|int pair, int &f, int &b)
[ncurses_panel_above | Returns the panel above panel. If panel is null, returns the bottom panel in the stack, returns int]
ncurses_panel_above(|resource panel)
[ncurses_panel_below | Returns the panel below panel. If panel is null, returns the top panel in the stack, returns int]
ncurses_panel_below(|resource panel)
[ncurses_panel_window | Returns the window associated with panel, returns int]
ncurses_panel_window(|resource panel)
[ncurses_pnoutrefresh | Copys a region from a pad into the virtual screen, returns int]
ncurses_pnoutrefresh(|resource pad, int pminrow, int pmincol, int sminrow, int smincol, int smaxrow, int smaxcol)
[ncurses_prefresh | Copys a region from a pad into the virtual screen, returns int]
ncurses_prefresh(|resource pad, int pminrow, int pmincol, int sminrow, int smincol, int smaxrow, int smaxcol)
[ncurses_putp | , returns int]
ncurses_putp(|string text)
[ncurses_qiflush | Flush on signal characters, returns int]
ncurses_qiflush()|
[ncurses_raw | Switch terminal into raw mode, returns bool]
ncurses_raw()|
[ncurses_refresh | Refresh screen, returns int]
ncurses_refresh(|int ch)
[ncurses_replace_panel | Replaces the window associated with panel, returns int]
ncurses_replace_panel(|resource panel, resource window)
[ncurses_reset_prog_mode | Resets the prog mode saved by def_prog_mode, returns int]
ncurses_reset_prog_mode()|
[ncurses_reset_shell_mode | Resets the shell mode saved by def_shell_mode, returns int]
ncurses_reset_shell_mode()|
[ncurses_resetty | Restores saved terminal state, returns bool]
ncurses_resetty()|
[ncurses_savetty | Saves terminal state, returns bool]
ncurses_savetty()|
[ncurses_scr_dump | Dump screen content to file, returns int]
ncurses_scr_dump(|string filename)
[ncurses_scr_init | Initialize screen from file dump, returns int]
ncurses_scr_init(|string filename)
[ncurses_scr_restore | Restore screen from file dump, returns int]
ncurses_scr_restore(|string filename)
[ncurses_scr_set | Inherit screen from file dump, returns int]
ncurses_scr_set(|string filename)
[ncurses_scrl | Scroll window content up or down without changing current position, returns int]
ncurses_scrl(|int count)
[ncurses_show_panel | Places an invisible panel on top of the stack, making it visible, returns int]
ncurses_show_panel(|resource panel)
[ncurses_slk_attr | Returns current soft label key attribute, returns bool]
ncurses_slk_attr()|
[ncurses_slk_attroff | , returns int]
ncurses_slk_attroff(|int intarg)
[ncurses_slk_attron | , returns int]
ncurses_slk_attron(|int intarg)
[ncurses_slk_attrset | , returns int]
ncurses_slk_attrset(|int intarg)
[ncurses_slk_clear | Clears soft labels from screen, returns bool]
ncurses_slk_clear()|
[ncurses_slk_color | Sets color for soft label keys, returns int]
ncurses_slk_color(|int intarg)
[ncurses_slk_init | Initializes soft label key functions, returns bool]
ncurses_slk_init(|int format)
[ncurses_slk_noutrefresh | Copies soft label keys to virtual screen, returns bool]
ncurses_slk_noutrefresh()|
[ncurses_slk_refresh | Copies soft label keys to screen, returns bool]
ncurses_slk_refresh()|
[ncurses_slk_restore | Restores soft label keys, returns bool]
ncurses_slk_restore()|
[ncurses_slk_set | Sets function key labels, returns bool]
ncurses_slk_set(|int labelnr, string label, int format)
[ncurses_slk_touch | Fources output when ncurses_slk_noutrefresh is performed, returns bool]
ncurses_slk_touch()|
[ncurses_standend | Stop using 'standout' attribute, returns int]
ncurses_standend()|
[ncurses_standout | Start using 'standout' attribute, returns int]
ncurses_standout()|
[ncurses_start_color | Start using colors, returns int]
ncurses_start_color()|
[ncurses_termattrs | Returns a logical OR of all attribute flags supported by terminal, returns bool]
ncurses_termattrs()|
[ncurses_termname | Returns terminals (short)-name, returns string]
ncurses_termname()|
[ncurses_timeout | Set timeout for special key sequences, returns void]
ncurses_timeout(|int millisec)
[ncurses_top_panel | Moves a visible panel to the top of the stack, returns int]
ncurses_top_panel(|resource panel)
[ncurses_typeahead | Specify different filedescriptor for typeahead checking, returns int]
ncurses_typeahead(|int fd)
[ncurses_ungetch | Put a character back into the input stream, returns int]
ncurses_ungetch(|int keycode)
[ncurses_ungetmouse | Pushes mouse event to queue, returns bool]
ncurses_ungetmouse(|array mevent)
[ncurses_update_panels | Refreshes the virtual screen to reflect the relations between panels in the stack., returns void]
ncurses_update_panels()|
[ncurses_use_default_colors | Assign terminal default colors to color id -1, returns bool]
ncurses_use_default_colors()|
[ncurses_use_env | Control use of environment information about terminal size, returns void]
ncurses_use_env(|bool flag)
[ncurses_use_extended_names | Control use of extended names in terminfo descriptions, returns int]
ncurses_use_extended_names(|bool flag)
[ncurses_vidattr | , returns int]
ncurses_vidattr(|int intarg)
[ncurses_vline | Draw a vertical line at current position using an attributed character and max. n characters long, returns int]
ncurses_vline(|int charattr, int n)
[ncurses_waddch | Adds character at current position in a window and advance cursor, returns int]
ncurses_waddch(|resource window, int ch)
[ncurses_waddstr | Outputs text at current postion in window, returns int]
ncurses_waddstr(|resource window, string str, [int n])
[ncurses_wattroff | Turns off attributes for a window, returns int]
ncurses_wattroff(|resource window, int attrs)
[ncurses_wattron | Turns on attributes for a window, returns int]
ncurses_wattron(|resource window, int attrs)
[ncurses_wattrset | Set the attributes for a window, returns int]
ncurses_wattrset(|resource window, int attrs)
[ncurses_wborder | Draws a border around the window using attributed characters, returns int]
ncurses_wborder(|resource window, int left, int right, int top, int bottom, int tl_corner, int tr_corner, int bl_corner, int br_corner)
[ncurses_wclear | Clears window, returns int]
ncurses_wclear(|resource window)
[ncurses_wcolor_set | Sets windows color pairings, returns int]
ncurses_wcolor_set(|resource window, int color_pair)
[ncurses_werase | Erase window contents, returns long]
ncurses_werase(|resource window)
[ncurses_wgetch | Reads a character from keyboard (window), returns int]
ncurses_wgetch(|resource window)
[ncurses_whline | Draws a horizontal line in a window at current position using an attributed character and max. n characters long, returns int]
ncurses_whline(|resource window, int charattr, int n)
[ncurses_wmouse_trafo | Transforms window/stdscr coordinates, returns bool]
ncurses_wmouse_trafo(|resource window, int &y, int &x, bool toscreen)
[ncurses_wmove | Moves windows output position, returns int]
ncurses_wmove(|resource window, int y, int x)
[ncurses_wnoutrefresh | Copies window to virtual screen, returns int]
ncurses_wnoutrefresh(|resource window)
[ncurses_wrefresh | Refresh window on terminal screen, returns int]
ncurses_wrefresh(|resource window)
[ncurses_wstandend | End standout mode for a window, returns int]
ncurses_wstandend(|resource window)
[ncurses_wstandout | Enter standout mode for a window, returns int]
ncurses_wstandout(|resource window)
[ncurses_wvline | Draws a vertical line in a window at current position using an attributed character and max. n characters long, returns int]
ncurses_wvline(|resource window, int charattr, int n)
; -----------------------------------------------------------------------------
; Lotus Notes - Lotus Notes functions
; -----------------------------------------------------------------------------
[notes_body | Open the message msg_number in the specified mailbox on the specified server (leave serv, returns array]
notes_body(|string server, string mailbox, int msg_number)
[notes_copy_db | Create a note using form form_name, returns string]
notes_copy_db(|string from_database_name, string to_database_name)
[notes_create_db | Create a Lotus Notes database, returns bool]
notes_create_db(|string database_name)
[notes_create_note | Create a note using form form_name, returns string]
notes_create_note(|string database_name, string form_name)
[notes_drop_db | Drop a Lotus Notes database, returns bool]
notes_drop_db(|string database_name)
[notes_find_note | Returns a note id found in database_name. Specify the name of the note. Leaving type bla, returns bool]
notes_find_note(|string database_name, string name, [string type])
[notes_header_info | Open the message msg_number in the specified mailbox on the specified server (leave serv, returns object]
notes_header_info(|string server, string mailbox, int msg_number)
[notes_list_msgs | Returns the notes from a selected database_name, returns bool]
notes_list_msgs(|string db)
[notes_mark_read | Mark a note_id as read for the User user_name, returns string]
notes_mark_read(|string database_name, string user_name, string note_id)
[notes_mark_unread | Mark a note_id as unread for the User user_name, returns string]
notes_mark_unread(|string database_name, string user_name, string note_id)
[notes_nav_create | Create a navigator name, in database_name, returns bool]
notes_nav_create(|string database_name, string name)
[notes_search | Find notes that match keywords in database_name, returns string]
notes_search(|string database_name, string keywords)
[notes_unread | Returns the unread note id's for the current User user_name, returns string]
notes_unread(|string database_name, string user_name)
[notes_version | Get the version Lotus Notes, returns string]
notes_version(|string database_name)
; -----------------------------------------------------------------------------
; NSAPI - NSAPI-specific Functions
; -----------------------------------------------------------------------------
[nsapi_request_headers | Fetch all HTTP request headers, returns array]
nsapi_request_headers()|
[nsapi_response_headers | Fetch all HTTP response headers, returns array]
nsapi_response_headers()|
[nsapi_virtual | Perform an NSAPI sub-request, returns int]
nsapi_virtual(|string uri)
; -----------------------------------------------------------------------------
; ODBC - Unified ODBC functions
; -----------------------------------------------------------------------------
[odbc_autocommit | Toggle autocommit behaviour, returns bool]
odbc_autocommit(|resource connection_id, [bool OnOff])
[odbc_binmode | Handling of binary column data, returns int]
odbc_binmode(|resource result_id, int mode)
[odbc_close_all | Close all ODBC connections, returns void]
odbc_close_all()|
[odbc_close | Close an ODBC connection, returns void]
odbc_close(|resource connection_id)
[odbc_columnprivileges | Returns a result identifier that can be used to fetch a list of columns and associated privileges, returns int]
odbc_columnprivileges(|resource connection_id, [string qualifier], [string owner], [string table_name], [string column_name])
[odbc_columns | Lists the column names in specified tables. Returns a result identifier containing the information., returns resource]
odbc_columns(|resource connection_id, [string qualifier], [string schema], [string table_name], [string column_name])
[odbc_commit | Commit an ODBC transaction, returns bool]
odbc_commit(|resource connection_id)
[odbc_connect | Connect to a datasource, returns resource]
odbc_connect(|string dsn, string user, string password, [int cursor_type])
[odbc_cursor | Get cursorname, returns string]
odbc_cursor(|resource result_id)
[odbc_data_source | Returns information about a current connection, returns resource]
odbc_data_source(|resource connection_id, constant fetch_type)
[odbc_do | Synonym for odbc_exec, returns resource]
odbc_do(|resource conn_id, string query)
[odbc_error | Get the last error code, returns string]
odbc_error(|[resource connection_id])
[odbc_errormsg | Get the last error message, returns string]
odbc_errormsg(|[resource connection_id])
[odbc_exec | Prepare and execute a SQL statement, returns resource]
odbc_exec(|resource connection_id, string query_string)
[odbc_execute | Execute a prepared statement, returns bool]
odbc_execute(|resource result_id, [array parameters_array])
[odbc_fetch_array | Fetch a result row as an associative array, returns array]
odbc_fetch_array(|resource result, [int rownumber])
[odbc_fetch_into | Fetch one result row into array, returns bool]
odbc_fetch_into(|resource result_id, [int rownumber], array result_array)
[odbc_fetch_object | Fetch a result row as an object, returns object]
odbc_fetch_object(|resource result, [int rownumber])
[odbc_fetch_row | Fetch a row, returns bool]
odbc_fetch_row(|resource result_id, [int row_number])
[odbc_field_len | Get the length (precision) of a field, returns int]
odbc_field_len(|resource result_id, int field_number)
[odbc_field_name | Get the columnname, returns string]
odbc_field_name(|resource result_id, int field_number)
[odbc_field_num | Return column number, returns int]
odbc_field_num(|resource result_id, string field_name)
[odbc_field_precision | Synonym for odbc_field_len, returns string]
odbc_field_precision(|resource result_id, int field_number)
[odbc_field_scale | Get the scale of a field, returns string]
odbc_field_scale(|resource result_id, int field_number)
[odbc_field_type | Datatype of a field, returns string]
odbc_field_type(|resource result_id, int field_number)
[odbc_foreignkeys | Returns a list of foreign keys in the specified table or a list of foreign keys in other tables that refer to the primary key in the specified table, returns resource]
odbc_foreignkeys(|resource connection_id, string pk_qualifier, string pk_owner, string pk_table, string fk_qualifier, string fk_owner, string fk_table)
[odbc_free_result | Free resources associated with a result, returns bool]
odbc_free_result(|resource result_id)
[odbc_gettypeinfo | Returns a result identifier containing information about data types supported by the data source., returns int]
odbc_gettypeinfo(|resource connection_id, [int data_type])
[odbc_longreadlen | Handling of LONG columns, returns int]
odbc_longreadlen(|resource result_id, int length)
[odbc_next_result | Checks if multiple results are available, returns bool]
odbc_next_result(|resource result_id)
[odbc_num_fields | Number of columns in a result, returns int]
odbc_num_fields(|resource result_id)
[odbc_num_rows | Number of rows in a result, returns int]
odbc_num_rows(|resource result_id)
[odbc_pconnect | Open a persistent database connection, returns resource]
odbc_pconnect(|string dsn, string user, string password, [int cursor_type])
[odbc_prepare | Prepares a statement for execution, returns resource]
odbc_prepare(|resource connection_id, string query_string)
[odbc_primarykeys | Returns a result identifier that can be used to fetch the column names that comprise the primary key for a table, returns resource]
odbc_primarykeys(|resource connection_id, string qualifier, string owner, string table)
[odbc_procedurecolumns | Retrieve information about parameters to procedures, returns resource]
odbc_procedurecolumns(|resource connection_id, [string qualifier], [string owner], [string proc], [string column])
[odbc_procedures | Get the list of procedures stored in a specific data source. Returns a result identifier containing the information., returns resource]
odbc_procedures(|resource connection_id, [string qualifier], [string owner], [string name])
[odbc_result_all | Print result as HTML table, returns int]
odbc_result_all(|resource result_id, [string format])
[odbc_result | Get result data, returns string]
odbc_result(|resource result_id, mixed field)
[odbc_rollback | Rollback a transaction, returns int]
odbc_rollback(|resource connection_id)
[odbc_setoption | Adjust ODBC settings. Returns FALSE if an error occurs, otherwise TRUE., returns int]
odbc_setoption(|resource id, int function, int option, int param)
[odbc_specialcolumns | Returns either the optimal set of columns that uniquely identifies a row in the table or columns that are automatically updated when any value in the row is updated by a transaction, returns resource]
odbc_specialcolumns(|resource connection_id, int type, string qualifier, string owner, string table, int scope, int nullable)
[odbc_statistics | Retrieve statistics about a table, returns resource]
odbc_statistics(|resource connection_id, string qualifier, string owner, string table_name, int unique, int accuracy)
[odbc_tableprivileges | Lists tables and the privileges associated with each table, returns int]
odbc_tableprivileges(|resource connection_id, [string qualifier], [string owner], [string name])
[odbc_tables | Get the list of table names stored in a specific data source. Returns a result identifier containing the information., returns int]
odbc_tables(|resource connection_id, [string qualifier], [string owner], [string name], [string types])
; -----------------------------------------------------------------------------
; Object Aggregation - Object Aggregation/Composition Functions
; -----------------------------------------------------------------------------
[aggregate_info | returns an associative array of the methods and properties from each class that has been aggregated to the object., returns array]
aggregate_info(|object object)
[aggregate_methods_by_list | selective dynamic class methods aggregation to an object, returns void]
aggregate_methods_by_list(|object object, string class_name, array methods_list, [bool exclude])
[aggregate_methods_by_regexp | selective class methods aggregation to an object using a regular expression, returns void]
aggregate_methods_by_regexp(|object object, string class_name, string regexp, [bool exclude])
[aggregate_methods | dynamic class and object aggregation of methods, returns void]
aggregate_methods(|object object, string class_name)
[aggregate_properties_by_list | selective dynamic class properties aggregation to an object, returns void]
aggregate_properties_by_list(|object object, string class_name, array properties_list, [bool exclude])
[aggregate_properties_by_regexp | selective class properties aggregation to an object using a regular expression, returns void]
aggregate_properties_by_regexp(|object object, string class_name, string regexp, [bool exclude])
[aggregate_properties | dynamic aggregation of class properties to an object, returns void]
aggregate_properties(|object object, string class_name)
[aggregate | dynamic class and object aggregation of methods and properties, returns void]
aggregate(|object object, string class_name)
[aggregation_info | Alias for aggregate_info]
aggregation_info(|)
[deaggregate | Removes the aggregated methods and properties from an object, returns void]
deaggregate(|object object, [string class_name])
; -----------------------------------------------------------------------------
; OCI8 - Oracle 8 functions
; -----------------------------------------------------------------------------
[ocibindbyname | Bind a PHP variable to an Oracle Placeholder, returns bool]
ocibindbyname(|resource stmt, string ph_name, mixed &variable, [int maxlength], [int type])
[ocicancel | Cancel reading from cursor, returns bool]
ocicancel(|resource stmt)
[ocicloselob | Closes lob descriptor, returns bool]
ocicloselob()|
[ocicollappend | Append an object to the collection, returns bool]
ocicollappend(|string value)
[ocicollassign | Assign a collection from another existing collection, returns bool]
ocicollassign(|object from)
[ocicollassignelem | Assign element val to collection at index ndx, returns bool]
ocicollassignelem(|int ndx, string val)
[ocicollgetelem | Retrieve the value at collection index ndx, returns string]
ocicollgetelem(|int ndx)
[ocicollmax | Return the max value of a collection. For a varray this is the maximum length of the array, returns int]
ocicollmax()|
[ocicollsize | Return the size of a collection, returns int]
ocicollsize()|
[ocicolltrim | Trim num elements from the end of a collection, returns bool]
ocicolltrim(|int num)
[ocicolumnisnull | Test whether a result column is NULL, returns bool]
ocicolumnisnull(|resource stmt, mixed col)
[ocicolumnname | Returns the name of a column, returns string]
ocicolumnname(|resource stmt, int col)
[ocicolumnprecision | Tell the precision of a column, returns int]
ocicolumnprecision(|resource stmt, int col)
[ocicolumnscale | Tell the scale of a column, returns int]
ocicolumnscale(|resource stmt, int col)
[ocicolumnsize | Return result column size, returns int]
ocicolumnsize(|resource stmt, mixed column)
[ocicolumntype | Returns the data type of a column, returns mixed]
ocicolumntype(|resource stmt, int col)
[ocicolumntyperaw | Tell the raw oracle data type of a column, returns mixed]
ocicolumntyperaw(|resource stmt, int col)
[ocicommit | Commits outstanding transactions, returns bool]
ocicommit(|resource connection)
[ocidefinebyname | Use a PHP variable for the define-step during a SELECT, returns bool]
ocidefinebyname(|resource stmt, string column_name, mixed &variable, [int type])
[ocierror | Return the last error of stmt|conn|global, returns array]
ocierror(|[resource stmt|conn|global])
[ociexecute | Execute a statement, returns bool]
ociexecute(|resource stmt, [int mode])
[ocifetch | Fetches the next row into result-buffer, returns bool]
ocifetch(|resource stmt)
[ocifetchinto | Fetches the next row into an array, returns int]
ocifetchinto(|resource stmt, array &result, [int mode])
[ocifetchstatement | Fetch all rows of result data into an array, returns int]
ocifetchstatement(|resource stmt, array &output, [int skip], [int maxrows], [int flags])
[ocifreecollection | Deletes collection object, returns bool]
ocifreecollection()|
[ocifreecursor | Free all resources associated with a cursor, returns bool]
ocifreecursor(|resource stmt)
[ocifreedesc | Deletes a large object descriptor, returns bool]
ocifreedesc()|
[ocifreestatement | Free all resources associated with a statement, returns bool]
ocifreestatement(|resource stmt)
[ociinternaldebug | Enables or disables internal debug output, returns void]
ociinternaldebug(|int onoff)
[ociloadlob | Loads a large object, returns string]
ociloadlob()|
[ocilogoff | Disconnects from Oracle server, returns bool]
ocilogoff(|resource connection)
[ocilogon | Establishes a connection to Oracle, returns resource]
ocilogon(|string username, string password, [string db])
[ocinewcollection | Initialize a new collection, returns object]
ocinewcollection(|resource connection, string tdo, [string schema])
[ocinewcursor | Return a new cursor (Statement-Handle), returns resource]
ocinewcursor(|resource conn)
[ocinewdescriptor | Initialize a new empty LOB or FILE descriptor, returns object]
ocinewdescriptor(|resource connection, [int type])
[ocinlogon | Establishes a new connection to Oracle, returns resource]
ocinlogon(|string username, string password, [string db])
[ocinumcols | Return the number of result columns in a statement, returns int]
ocinumcols(|resource stmt)
[ociparse | Parse a query and return an Oracle statement, returns resource]
ociparse(|resource conn, string query)
[ociplogon | Connect to an Oracle database using a persistent connection, returns resource]
ociplogon(|string username, string password, [string db])
[ociresult | Returns column value for fetched row, returns mixed]
ociresult(|resource statement, mixed col)
[ocirollback | Rolls back outstanding transactions, returns bool]
ocirollback(|resource connection)
[ocirowcount | Gets the number of affected rows, returns int]
ocirowcount(|resource stmt)
[ocisavelob | Saves a large object, returns bool]
ocisavelob()|
[ocisavelobfile | Saves a large object file, returns bool]
ocisavelobfile()|
[ociserverversion | Return a string containing server version information, returns string]
ociserverversion(|resource conn)
[ocisetprefetch | Sets number of rows to be prefetched, returns bool]
ocisetprefetch(|resource stmt, int rows)
[ocistatementtype | Return the type of an OCI statement, returns string]
ocistatementtype(|resource stmt)
[ociwritelobtofile | Saves a large object file, returns bool]
ociwritelobtofile(|[string filename], [int start], [int length])
[ociwritetemporarylob | Writes temporary blob, returns bool]
ociwritetemporarylob(|string var, [int lob_type])
; -----------------------------------------------------------------------------
; OpenSSL - OpenSSL functions
; -----------------------------------------------------------------------------
[openssl_csr_export_to_file | Exports a CSR to a file, returns bool]
openssl_csr_export_to_file(|resource csr, string outfilename, [bool notext])
[openssl_csr_export | Exports a CSR as a string, returns bool]
openssl_csr_export(|resource csr, string &out, [bool notext])
[openssl_csr_new | Generates a CSR, returns bool]
openssl_csr_new(|array dn, resource privkey, [array configargs], [array extraattribs])
[openssl_csr_sign | Sign a CSR with another certificate (or itself) and generate a certificate, returns resource]
openssl_csr_sign(|mixed csr, mixed cacert, mixed priv_key, int days)
[openssl_error_string | Return openSSL error message, returns mixed]
openssl_error_string()|
[openssl_free_key | Free key resource, returns void]
openssl_free_key(|resource key_identifier)
[openssl_get_privatekey | Get a private key, returns resource]
openssl_get_privatekey(|mixed key, [string passphrase])
[openssl_get_publickey | Extract public key from certificate and prepare it for use, returns resource]
openssl_get_publickey(|mixed certificate)
[openssl_open | Open sealed data, returns bool]
openssl_open(|string sealed_data, string open_data, string env_key, mixed priv_key_id)
[openssl_pkcs7_decrypt | Decrypts an S/MIME encrypted message, returns bool]
openssl_pkcs7_decrypt(|string infilename, string outfilename, mixed recipcert, [mixed recipkey])
[openssl_pkcs7_encrypt | Encrypt an S/MIME message, returns bool]
openssl_pkcs7_encrypt(|string infile, string outfile, mixed recipcerts, array headers, [int flags])
[openssl_pkcs7_sign | sign an S/MIME message, returns bool]
openssl_pkcs7_sign(|string infilename, string outfilename, mixed signcert, mixed privkey, array headers, [int flags], [string extracerts])
[openssl_pkcs7_verify | Verifies the signature of an S/MIME signed message, returns bool]
openssl_pkcs7_verify(|string filename, int flags, [string outfilename], [array cainfo], [string extracerts])
[openssl_pkey_export_to_file | Gets an exportable representation of a key into a file, returns bool]
openssl_pkey_export_to_file(|mixed key, string outfilename, [string passphrase], [array configargs])
[openssl_pkey_export | Gets an exportable representation of a key into a string, returns bool]
openssl_pkey_export(|mixed key, string &out, [string passphrase], [array configargs])
[openssl_pkey_get_private | Get a private key, returns resource]
openssl_get_privatekey(|mixed key, [string passphrase])
[openssl_pkey_get_public | Extract public key from certificate and prepare it for use, returns resource]
openssl_pkey_get_public(|mixed certificate)
[openssl_pkey_new | Generates a new private key, returns resource]
openssl_pkey_new(|[array configargs])
[openssl_private_decrypt | Decrypts data with private key, returns bool]
openssl_private_decrypt(|string data, string &decrypted, mixed key, [int padding])
[openssl_private_encrypt | Encrypts data with private key, returns bool]
openssl_private_encrypt(|string data, string crypted, mixed key, [int padding])
[openssl_public_decrypt | Decrypts data with public key, returns bool]
openssl_public_decrypt(|string data, string crypted, resource key, [int padding])
[openssl_public_encrypt | Encrypts data with public key, returns bool]
openssl_public_encrypt(|string data, string crypted, mixed key, [int padding])
[openssl_seal | Seal (encrypt) data, returns int]
openssl_seal(|string data, string sealed_data, array env_keys, array pub_key_ids)
[openssl_sign | Generate signature, returns bool]
openssl_sign(|string data, string signature, mixed priv_key_id)
[openssl_verify | Verify signature, returns int]
openssl_verify(|string data, string signature, mixed pub_key_id)
[openssl_x509_check_private_key | Checks if a private key corresponds to a certificate, returns bool]
openssl_x509_check_private_key(|mixed cert, mixed key)
[openssl_x509_checkpurpose | Verifies if a certificate can be used for a particular purpose, returns bool]
openssl_x509_checkpurpose(|mixed x509cert, int purpose, array cainfo, [string untrustedfile])
[openssl_x509_export_to_file | Exports a certificate to file, returns bool]
openssl_x509_export_to_file(|mixed x509, string outfilename, [bool notext])
[openssl_x509_export | Exports a certificate as a string, returns bool]
openssl_x509_export(|mixed x509, string &output, [bool notext])
[openssl_x509_free | Free certificate resource, returns void]
openssl_x509_free(|resource x509cert)
[openssl_x509_parse | Parse an X509 certificate and return the information as an array, returns array]
openssl_x509_parse(|mixed x509cert, [bool shortnames])
[openssl_x509_read | Parse an X.509 certificate and return a resource identifier for it, returns resource]
openssl_x509_read(|mixed x509certdata)
; -----------------------------------------------------------------------------
; Oracle - Oracle functions
; -----------------------------------------------------------------------------
[ora_bind | Binds a PHP variable to an Oracle parameter, returns bool]
ora_bind(|resource cursor, string PHP_variable_name, string SQL_parameter_name, int length, [int type])
[ora_close | Closes an Oracle cursor, returns bool]
ora_close(|resource cursor)
[ora_columnname | Gets the name of an Oracle result column, returns string]
ora_columnname(|resource cursor, int column)
[ora_columnsize | Returns the size of an Oracle result column, returns int]
ora_columnsize(|resource cursor, int column)
[ora_columntype | Gets the type of an Oracle result column, returns string]
ora_columntype(|resource cursor, int column)
[ora_commit | Commit an Oracle transaction, returns bool]
ora_commit(|resource conn)
[ora_commitoff | Disable automatic commit, returns bool]
ora_commitoff(|resource conn)
[ora_commiton | Enable automatic commit, returns bool]
ora_commiton(|resource conn)
[ora_do | Parse, Exec, Fetch, returns resource]
ora_do(|resource conn, string query)
[ora_error | Gets an Oracle error message, returns string]
ora_error(|resource cursor_or_connection)
[ora_errorcode | Gets an Oracle error code, returns int]
ora_errorcode(|resource cursor_or_connection)
[ora_exec | Execute a parsed statement on an Oracle cursor, returns bool]
ora_exec(|resource cursor)
[ora_fetch_into | Fetch a row into the specified result array, returns int]
ora_fetch_into(|resource cursor, array result, [int flags])
[ora_fetch | Fetch a row of data from a cursor, returns bool]
ora_fetch(|resource cursor)
[ora_getcolumn | Get data from a fetched column, returns mixed]
ora_getcolumn(|resource cursor, int column)
[ora_logoff | Close an Oracle connection, returns bool]
ora_logoff(|resource connection)
[ora_logon | Open an Oracle connection, returns resource]
ora_logon(|string user, string password)
[ora_numcols | Returns the number of columns, returns int]
ora_numcols(|resource cursor)
[ora_numrows | Returns the number of rows, returns int]
ora_numrows(|resource cursor)
[ora_open | Opens an Oracle cursor, returns resource]
ora_open(|resource connection)
[ora_parse | Parse an SQL statement with Oracle, returns bool]
ora_parse(|resource cursor, string sql_statement, int defer)
[ora_plogon | Open a persistent Oracle connection, returns resource]
ora_plogon(|string user, string password)
[ora_rollback | Rolls back a transaction, returns bool]
ora_rollback(|resource connection)
; -----------------------------------------------------------------------------
; OvrimosSQL - Ovrimos SQL functions
; -----------------------------------------------------------------------------
[ovrimos_close | Closes the connection to ovrimos, returns void]
ovrimos_close(|int connection)
[ovrimos_commit | Commits the transaction, returns bool]
ovrimos_commit(|int connection_id)
[ovrimos_connect | Connect to the specified database, returns int]
ovrimos_connect(|string host, string db, string user, string password)
[ovrimos_cursor | Returns the name of the cursor, returns string]
ovrimos_cursor(|int result_id)
[ovrimos_exec | Executes an SQL statement, returns int]
ovrimos_exec(|int connection_id, string query)
[ovrimos_execute | Executes a prepared SQL statement, returns bool]
ovrimos_execute(|int result_id, [array parameters_array])
[ovrimos_fetch_into | Fetches a row from the result set, returns bool]
ovrimos_fetch_into(|int result_id, array result_array, [string how], [int rownumber])
[ovrimos_fetch_row | Fetches a row from the result set, returns bool]
ovrimos_fetch_row(|int result_id, [int how], [int row_number])
[ovrimos_field_len | Returns the length of the output column, returns int]
ovrimos_field_len(|int result_id, int field_number)
[ovrimos_field_name | Returns the output column name, returns string]
ovrimos_field_name(|int result_id, int field_number)
[ovrimos_field_num | Returns the (1-based) index of the output column, returns int]
ovrimos_field_num(|int result_id, string field_name)
[ovrimos_field_type | Returns the (numeric) type of the output column, returns int]
ovrimos_field_type(|int result_id, int field_number)
[ovrimos_free_result | Frees the specified result_id, returns bool]
ovrimos_free_result(|int result_id)
[ovrimos_longreadlen | Specifies how many bytes are to be retrieved from long datatypes, returns bool]
ovrimos_longreadlen(|int result_id, int length)
[ovrimos_num_fields | Returns the number of columns, returns int]
ovrimos_num_fields(|int result_id)
[ovrimos_num_rows | Returns the number of rows affected by update operations, returns int]
ovrimos_num_rows(|int result_id)
[ovrimos_prepare | Prepares an SQL statement, returns int]
ovrimos_prepare(|int connection_id, string query)
[ovrimos_result_all | Prints the whole result set as an HTML table, returns int]
ovrimos_result_all(|int result_id, [string format])
[ovrimos_result | Retrieves the output column, returns string]
ovrimos_result(|int result_id, mixed field)
[ovrimos_rollback | Rolls back the transaction, returns bool]
ovrimos_rollback(|int connection_id)
; -----------------------------------------------------------------------------
; Output Control - Output Control Functions
; -----------------------------------------------------------------------------
[flush | Flush the output buffer, returns void]
flush()|
[ob_clean | Clean (erase) the output buffer, returns void]
ob_clean()|
[ob_end_clean | Clean (erase) the output buffer and turn off output buffering, returns bool]
ob_end_clean()|
[ob_end_flush | Flush (send) the output buffer and turn off output buffering, returns bool]
ob_end_flush()|
[ob_flush | Flush (send) the output buffer, returns void]
ob_flush()|
[ob_get_clean | Get current buffer contents and delete current output buffer, returns string]
ob_get_clean()|
[ob_get_contents | Return the contents of the output buffer, returns string]
ob_get_contents()|
[ob_get_length | Return the length of the output buffer, returns int]
ob_get_length()|
[ob_get_level | Return the nesting level of the output buffering mechanism, returns int]
ob_get_level()|
[ob_get_status | Get status of output buffers, returns array]
ob_get_status(|[bool full_status])
[ob_gzhandler | ob_start callback function to gzip output buffer, returns string]
ob_gzhandler(|string buffer, [int mode])
[ob_implicit_flush | Turn implicit flush on/off, returns void]
ob_implicit_flush(|[int flag])
[ob_start | Turn on output buffering, returns bool]
ob_start(|[callback output_callback])
; -----------------------------------------------------------------------------
; Object overloading - Object property and method call overloading
; -----------------------------------------------------------------------------
[overload | Enable property and method call overloading for a class, returns void]
overload(|[string class_name])
; -----------------------------------------------------------------------------
; PDF - PDF functions
; -----------------------------------------------------------------------------
[pdf_add_annotation | Deprecated: Adds annotation]
[pdf_add_bookmark | Adds bookmark for current page, returns int]
pdf_add_bookmark(|resource pdfdoc, string text, [int parent], [int open])
[pdf_add_launchlink | Add a launch annotation for current page, returns bool]
pdf_add_launchlink(|resource pdfdoc, float llx, float lly, float urx, float ury, string filename)
[pdf_add_locallink | Add a link annotation for current page, returns bool]
pdf_add_locallink(|resource pdfdoc, float lowerleftx, float lowerlefty, float upperrightx, float upperrighty, int page, string dest)
[pdf_add_note | Sets annotation for current page, returns bool]
pdf_add_note(|resource pdfdoc, float llx, float lly, float urx, float ury, string contents, string title, string icon, int open)
[pdf_add_outline | Deprecated: Adds bookmark for current page]
[pdf_add_pdflink | Adds file link annotation for current page, returns bool]
pdf_add_pdflink(|resource pdfdoc, float bottom_left_x, float bottom_left_y, float up_right_x, float up_right_y, string filename, int page, string dest)
[pdf_add_thumbnail | Adds thumbnail for current page, returns bool]
pdf_add_thumbnail(|resource pdfdoc, int image)
[pdf_add_weblink | Adds weblink for current page, returns bool]
pdf_add_weblink(|resource pdfdoc, float lowerleftx, float lowerlefty, float upperrightx, float upperrighty, string url)
[pdf_arc | Draws an arc (counterclockwise), returns bool]
pdf_arc(|resource pdfdoc, float x, float y, float r, float alpha, float beta)
[pdf_arcn | Draws an arc (clockwise), returns bool]
pdf_arcn(|resource pdfdoc, float x, float y, float r, float alpha, float beta)
[pdf_attach_file | Adds a file attachment for current page, returns bool]
pdf_attach_file(|resource pdfdoc, float llx, float lly, float urx, float ury, string filename, string description, string author, string mimetype, string icon)
[pdf_begin_page | Starts new page, returns bool]
pdf_begin_page(|resource pdfdoc, float width, float height)
[pdf_begin_pattern | Starts new pattern, returns int]
pdf_begin_pattern(|resource pdfdoc, float width, float height, float xstep, float ystep, int painttype)
[pdf_begin_template | Starts new template, returns int]
pdf_begin_template(|resource pdfdoc, float width, float height)
[pdf_circle | Draws a circle, returns bool]
pdf_circle(|resource pdfdoc, float x, float y, float r)
[pdf_clip | Clips to current path, returns bool]
pdf_clip(|resource pdfdoc)
[pdf_close_image | Closes an image, returns void]
pdf_close_image(|resource pdfdoc, int image)
[pdf_close_pdi_page | Close the page handle, returns bool]
pdf_close_pdi_page(|resource pdfdoc, int pagehandle)
[pdf_close_pdi | Close the input PDF document, returns bool]
pdf_close_pdi(|resource pdfdoc, int dochandle)
[pdf_close | Closes a pdf resource, returns bool]
pdf_close(|resource pdfdoc)
[pdf_closepath_fill_stroke | Closes, fills and strokes current path, returns bool]
pdf_closepath_fill_stroke(|resource pdfdoc)
[pdf_closepath_stroke | Closes path and draws line along path, returns bool]
pdf_closepath_stroke(|resource pdfdoc)
[pdf_closepath | Closes path, returns bool]
pdf_closepath(|resource pdfdoc)
[pdf_concat | Concatenate a matrix to the CTM, returns bool]
pdf_concat(|resource pdfdoc, float a, float b, float c, float d, float e, float f)
[pdf_continue_text | Outputs text in next line, returns bool]
pdf_continue_text(|resource pdfdoc, string text)
[pdf_curveto | Draws a curve, returns bool]
pdf_curveto(|resource pdfdoc, float x1, float y1, float x2, float y2, float x3, float y3)
[pdf_delete | Deletes a PDF object, returns bool]
pdf_delete(|resource pdfdoc)
[pdf_end_page | Ends a page, returns bool]
pdf_end_page(|resource pdfdoc)
[pdf_end_pattern | Finish pattern, returns bool]
pdf_end_pattern(|resource pdfdoc)
[pdf_end_template | Finish template, returns bool]
pdf_end_template(|resource pdfdoc)
[pdf_endpath | Deprecated: Ends current path]
[pdf_fill_stroke | Fills and strokes current path, returns bool]
pdf_fill_stroke(|resource pdfdoc)
[pdf_fill | Fills current path, returns bool]
pdf_fill(|resource pdfdoc)
[pdf_findfont | Prepare font for later use with pdf_setfont., returns int]
pdf_findfont(|resource pdfdoc, string fontname, string encoding, [int embed])
[pdf_get_buffer | Fetch the buffer containig the generated PDF data., returns string]
pdf_get_buffer(|resource pdfdoc)
[pdf_get_font | Deprecated: font handling]
[pdf_get_fontname | Deprecated: font handling]
[pdf_get_fontsize | Deprecated: font handling]
[pdf_get_image_height | Deprecated: returns height of an image]
[pdf_get_image_width | Deprecated: Returns width of an image]
[pdf_get_majorversion | Returns the major version number of the PDFlib, returns int]
pdf_get_majorversion()|
[pdf_get_minorversion | Returns the minor version number of the PDFlib, returns int]
pdf_get_minorversion()|
[pdf_get_parameter | Gets certain parameters, returns string]
pdf_get_parameter(|resource pdfdoc, string key, [float modifier])
[pdf_get_pdi_parameter | Get some PDI string parameters, returns string]
pdf_get_pdi_parameter(|resource pdfdoc, string key, int document, int page, int index)
[pdf_get_pdi_value | Gets some PDI numerical parameters, returns string]
pdf_get_pdi_value(|resource pdfdoc, string key, int doc, int page, int index)
[pdf_get_value | Gets certain numerical value, returns float]
pdf_get_value(|resource pdfdoc, string key, [float modifier])
[pdf_initgraphics | Resets graphic state, returns bool]
pdf_initgraphics(|resource pdfdoc)
[pdf_lineto | Draws a line, returns bool]
pdf_lineto(|resource pdfdoc, float x, float y)
[pdf_makespotcolor | Makes a spotcolor, returns bool]
pdf_makespotcolor(|resource pdfdoc, string spotname)
[pdf_moveto | Sets current point, returns bool]
pdf_moveto(|resource pdfdoc, float x, float y)
[pdf_new | Creates a new pdf resource, returns resource]
pdf_new(| )
[pdf_open_CCITT | Opens a new image file with raw CCITT data, returns int]
pdf_open_CCITT(|resource pdfdoc, string filename, int width, int height, int BitReverse, int k, int Blackls1)
[pdf_open_file | Opens a new pdf object, returns bool]
pdf_open_file(|resource pdfdoc, [string filename])
[pdf_open_gif | Deprecated: Opens a GIF image]
[pdf_open_image_file | Reads an image from a file, returns int]
pdf_open_image_file(|resource pdfdoc, string imagetype, string filename, [string stringparam], [string intparam])
[pdf_open_image | Versatile function for images, returns int]
pdf_open_image(|resource PDF-document, string imagetype, string source, string data, long length, int width, int height, int components, int bpc, string params)
[pdf_open_jpeg | Deprecated: Opens a JPEG image]
[pdf_open_memory_image | Opens an image created with PHP's image functions, returns int]
pdf_open_memory_image(|resource pdfdoc, resource image)
[pdf_open_pdi_page | Prepare a page, returns int]
pdf_open_pdi_page(|resource pdfdoc, int dochandle, int pagenumber, string pagelabel)
[pdf_open_pdi | Opens a PDF file, returns int]
pdf_open_pdi(|resource pdfdoc, string filename, string stringparam, int intparam)
[pdf_open_png | Deprecated: Opens a PNG image]
[pdf_open_tiff | Deprecated: Opens a TIFF image]
[pdf_open | Deprecated: Open a new pdf object]
[pdf_place_image | Places an image on the page, returns bool]
pdf_place_image(|resource pdfdoc, int image, float x, float y, float scale)
[pdf_place_pdi_page | Places an image on the page, returns bool]
pdf_place_pdi_page(|resource pdfdoc, int page, float x, float y, float sx, float sy)
[pdf_rect | Draws a rectangle, returns bool]
pdf_rect(|resource pdfdoc, float x, float y, float width, float height)
[pdf_restore | Restores formerly saved environment, returns bool]
pdf_restore(|resource pdfdoc)
[pdf_rotate | Sets rotation, returns bool]
pdf_rotate(|resource pdfdoc, float phi)
[pdf_save | Saves the current environment, returns bool]
pdf_save(|resource pdfdoc)
[pdf_scale | Sets scaling, returns bool]
pdf_scale(|resource pdfdoc, float x-scale, float y-scale)
[pdf_set_border_color | Sets color of border around links and annotations, returns bool]
pdf_set_border_color(|resource pdfdoc, float red, float green, float blue)
[pdf_set_border_dash | Sets dash style of border around links and annotations, returns bool]
pdf_set_border_dash(|resource pdfdoc, float black, float white)
[pdf_set_border_style | Sets style of border around links and annotations, returns bool]
pdf_set_border_style(|resource pdfdoc, string style, float width)
[pdf_set_char_spacing | Deprecated: Sets character spacing]
[pdf_set_duration | Deprecated: Sets duration between pages]
[pdf_set_font | Deprecated: Selects a font face and size]
[pdf_set_horiz_scaling | Sets horizontal scaling of text]
[pdf_set_info_author | Deprecated: Fills the author field of the document]
[pdf_set_info_creator | Deprecated: Fills the creator field of the document]
[pdf_set_info_keywords | Deprecated: Fills the keywords field of the document]
[pdf_set_info_subject | Deprecated: Fills the subject field of the document]
[pdf_set_info_title | Deprecated: Fills the title field of the document]
[pdf_set_info | Fills a field of the document information, returns bool]
pdf_set_info(|resource pdfdoc, string key, string value)
[pdf_set_leading | Deprecated: Sets distance between text lines]
[pdf_set_parameter | Sets certain parameters, returns bool]
pdf_set_parameter(|resource pdfdoc, string key, string value)
[pdf_set_text_matrix | Deprecated: Sets the text matrix]
[pdf_set_text_pos | Sets text position, returns bool]
pdf_set_text_pos(|resource pdfdoc, float x, float y)
[pdf_set_text_rendering | Deprecated: Determines how text is rendered]
[pdf_set_text_rise | Deprecated: Sets the text rise]
[pdf_set_value | Sets certain numerical value, returns bool]
pdf_set_value(|resource pdfdoc, string key, float value)
[pdf_set_word_spacing | Deprecated: Sets spacing between words]
[pdf_setcolor | Sets fill and stroke color, returns bool]
pdf_setcolor(|resource pdfdoc, string type, string colorspace, float c1, [float c2], [float c3], [float c4])
[pdf_setdash | Sets dash pattern, returns bool]
pdf_setdash(|resource pdfdoc, float b, float w)
[pdf_setflat | Sets flatness, returns bool]
pdf_setflat(|resource pdfdoc, float flatness)
[pdf_setfont | Set the current font, returns bool]
pdf_setfont(|resource pdfdoc, int font, float size)
[pdf_setgray_fill | Sets filling color to gray value, returns bool]
pdf_setgray_fill(|resource pdfdoc, float gray)
[pdf_setgray_stroke | Sets drawing color to gray value, returns bool]
pdf_setgray_stroke(|resource pdfdoc, float gray)
[pdf_setgray | Sets drawing and filling color to gray value, returns bool]
pdf_setgray(|resource pdfdoc, float gray)
[pdf_setlinecap | Sets linecap parameter, returns void]
pdf_setlinecap(|resource pdfdoc, int linecap)
[pdf_setlinejoin | Sets linejoin parameter, returns bool]
pdf_setlinejoin(|resource pdfdoc, int value)
[pdf_setlinewidth | Sets line width, returns void]
pdf_setlinewidth(|resource pdfdoc, float width)
[pdf_setmatrix | Sets current transformation matrix, returns bool]
pdf_setmatrix(|resource pdfdoc, float a, float b, float c, float d, float e, float f)
[pdf_setmiterlimit | Sets miter limit, returns bool]
pdf_setmiterlimit(|resource pdfdoc, float miter)
[pdf_setpolydash | Deprecated: Sets complicated dash pattern]
[pdf_setrgbcolor_fill | Sets filling color to rgb color value, returns bool]
pdf_setrgbcolor_fill(|resource pdfdoc, float red_value, float green_value, float blue_value)
[pdf_setrgbcolor_stroke | Sets drawing color to rgb color value, returns bool]
pdf_setrgbcolor_stroke(|resource pdfdoc, float red_value, float green_value, float blue_value)
[pdf_setrgbcolor | Sets drawing and filling color to rgb color value, returns bool]
pdf_setrgbcolor(|resource pdfdoc, float red_value, float green_value, float blue_value)
[pdf_show_boxed | Output text in a box, returns int]
pdf_show_boxed(|resource pdfdoc, string text, float left, float top, float width, float height, string mode, [string feature])
[pdf_show_xy | Output text at given position, returns bool]
pdf_show_xy(|resource pdfdoc, string text, float x, float y)
[pdf_show | Output text at current position, returns bool]
pdf_show(|resource pdfdoc, string text)
[pdf_skew | Skews the coordinate system, returns bool]
pdf_skew(|resource pdfdoc, float alpha, float beta)
[pdf_stringwidth | Returns width of text using current font, returns float]
pdf_stringwidth(|resource pdfdoc, string text, [int font], [float size])
[pdf_stroke | Draws line along path, returns bool]
pdf_stroke(|resource pdfdoc)
[pdf_translate | Sets origin of coordinate system, returns bool]
pdf_translate(|resource pdfdoc, float tx, float ty)
; -----------------------------------------------------------------------------
; Verisign Payflow Pro - Verisign Payflow Pro functions
; -----------------------------------------------------------------------------
[pfpro_cleanup | Shuts down the Payflow Pro library, returns void]
pfpro_cleanup()|
[pfpro_init | Initialises the Payflow Pro library, returns void]
pfpro_init()|
[pfpro_process_raw | Process a raw transaction with Payflow Pro, returns string]
pfpro_process_raw(|string parameters, [string address], [int port], [int timeout], [string proxy_address], [int proxy_port], [string proxy_logon], [string proxy_password])
[pfpro_process | Process a transaction with Payflow Pro, returns array]
pfpro_process(|array parameters, [string address], [int port], [int timeout], [string proxy_address], [int proxy_port], [string proxy_logon], [string proxy_password])
[pfpro_version | Returns the version of the Payflow Pro software, returns string]
pfpro_version()|
; -----------------------------------------------------------------------------
; PHP Options/Info - PHP Options&Information
; -----------------------------------------------------------------------------
[assert_options | Set/get the various assert flags, returns mixed]
assert_options(|int what, [mixed value])
[assert | Checks if assertion is FALSE, returns int]
assert(|mixed assertion)
[dl | Loads a PHP extension at runtime, returns int]
dl(|string library)
[extension_loaded | Find out whether an extension is loaded, returns bool]
extension_loaded(|string name)
[get_cfg_var | Gets the value of a PHP configuration option, returns string]
get_cfg_var(|string varname)
[get_current_user | Gets the name of the owner of the current PHP script, returns string]
get_current_user()|
[get_defined_constants | Returns an associative array with the names of all the constants and their values, returns array]
get_defined_constants()|
[get_extension_funcs | Returns an array with the names of the functions of a module, returns array]
get_extension_funcs(|string module_name)
[get_include_path | Gets the current include_path configuration option, returns string]
get_include_path()|
[get_included_files | Returns an array with the names of included or required files, returns array]
get_included_files()|
[get_loaded_extensions | Returns an array with the names of all modules compiled and loaded, returns array]
get_loaded_extensions()|
[get_magic_quotes_gpc | Gets the current active configuration setting of magic quotes gpc, returns int]
get_magic_quotes_gpc()|
[get_magic_quotes_runtime | Gets the current active configuration setting of magic_quotes_runtime, returns int]
get_magic_quotes_runtime()|
[get_required_files | Alias of get_included_files]
get_required_files(|)
[getenv | Gets the value of an environment variable, returns string]
getenv(|string varname)
[getlastmod | Gets time of last page modification, returns int]
getlastmod()|
[getmygid | Get PHP script owner's GID, returns int]
getmygid()|
[getmyinode | Gets the inode of the current script, returns int]
getmyinode()|
[getmypid | Gets PHP's process ID, returns int]
getmypid()|
[getmyuid | Gets PHP script owner's UID, returns int]
getmyuid()|
[getopt | Gets options from the command line argument list, returns string]
getopt(|string options)
[getrusage | Gets the current resource usages, returns array]
getrusage(|[int who])
[ini_alter | Alias of ini_set]
ini_alter(|)
[ini_get_all | Gets all configuration options, returns array]
ini_get_all(|[string extension])
[ini_get | Gets the value of a configuration option, returns string]
ini_get(|string varname)
[ini_restore | Restores the value of a configuration option, returns string]
ini_restore(|string varname)
[ini_set | Sets the value of a configuration option, returns string]
ini_set(|string varname, string newvalue)
[main | Dummy for main]
[memory_get_usage | Returns the amount of memory allocated to PHP, returns int]
memory_get_usage()|
[php_ini_scanned_files | Return a list of .ini files parsed from the additional ini dir, returns string]
php_ini_scanned_files()|
[php_logo_guid | Gets the logo guid, returns string]
php_logo_guid()|
[php_sapi_name | Returns the type of interface between web server and PHP, returns string]
php_sapi_name()|
[php_uname | Returns information about the operating system PHP was built on, returns string]
php_uname()|
[phpcredits | Prints out the credits for PHP, returns void]
phpcredits(|[int flag])
[phpinfo | Outputs lots of PHP information, returns int]
phpinfo(|[int what])
[phpversion | Gets the current PHP version, returns string]
phpversion()|
[putenv | Sets the value of an environment variable, returns void]
putenv(|string setting)
[restore_include_path | Restores the value of the include_path configuration option, returns void]
restore_include_path()|
[set_include_path | Sets the include_path configuration option, returns string]
set_include_path(|string new_include_path)
[set_magic_quotes_runtime | Sets the current active configuration setting of magic_quotes_runtime, returns bool]
set_magic_quotes_runtime(|int new_setting)
[set_time_limit | Limits the maximum execution time, returns void]
set_time_limit(|int seconds)
[version_compare | Compares two "PHP-standardized" version number strings, returns int]
version_compare(|string version1, string version2, [string operator])
[zend_logo_guid | Gets the zend guid, returns string]
zend_logo_guid()|
[zend_version | Gets the version of the current Zend engine, returns string]
zend_version()|
; -----------------------------------------------------------------------------
; POSIX - POSIX functions
; -----------------------------------------------------------------------------
[posix_ctermid | Get path name of controlling terminal, returns string]
posix_ctermid()|
[posix_get_last_error | Retrieve the error number set by the last posix function that failed., returns int]
posix_get_last_error()|
[posix_getcwd | Pathname of current directory, returns string]
posix_getcwd()|
[posix_getegid | Return the effective group ID of the current process, returns int]
posix_getegid()|
[posix_geteuid | Return the effective user ID of the current process, returns int]
posix_geteuid()|
[posix_getgid | Return the real group ID of the current process, returns int]
posix_getgid()|
[posix_getgrgid | Return info about a group by group id, returns array]
posix_getgrgid(|int gid)
[posix_getgrnam | Return info about a group by name, returns array]
posix_getgrnam(|string name)
[posix_getgroups | Return the group set of the current process, returns array]
posix_getgroups()|
[posix_getlogin | Return login name, returns string]
posix_getlogin()|
[posix_getpgid | Get process group id for job control, returns int]
posix_getpgid(|int pid)
[posix_getpgrp | Return the current process group identifier, returns int]
posix_getpgrp()|
[posix_getpid | Return the current process identifier, returns int]
posix_getpid()|
[posix_getppid | Return the parent process identifier, returns int]
posix_getppid()|
[posix_getpwnam | Return info about a user by username, returns array]
posix_getpwnam(|string username)
[posix_getpwuid | Return info about a user by user id, returns array]
posix_getpwuid(|int uid)
[posix_getrlimit | Return info about system resource limits, returns array]
posix_getrlimit()|
[posix_getsid | Get the current sid of the process, returns int]
posix_getsid(|int pid)
[posix_getuid | Return the real user ID of the current process, returns int]
posix_getuid()|
[posix_isatty | Determine if a file descriptor is an interactive terminal, returns bool]
posix_isatty(|int fd)
[posix_kill | Send a signal to a process, returns bool]
posix_kill(|int pid, int sig)
[posix_mkfifo | Create a fifo special file (a named pipe), returns bool]
posix_mkfifo(|string pathname, int mode)
[posix_setegid | Set the effective GID of the current process, returns bool]
posix_setegid(|int gid)
[posix_seteuid | Set the effective UID of the current process, returns bool]
posix_seteuid(|int uid)
[posix_setgid | Set the GID of the current process, returns bool]
posix_setgid(|int gid)
[posix_setpgid | set process group id for job control, returns int]
posix_setpgid(|int pid, int pgid)
[posix_setsid | Make the current process a session leader, returns int]
posix_setsid()|
[posix_setuid | Set the UID of the current process, returns bool]
posix_setuid(|int uid)
[posix_strerror | Retrieve the system error message associated with the given errno., returns string]
posix_strerror(|int errno)
[posix_times | Get process times, returns array]
posix_times()|
[posix_ttyname | Determine terminal device name, returns string]
posix_ttyname(|int fd)
[posix_uname | Get system name, returns array]
posix_uname()|
; -----------------------------------------------------------------------------
; PostgreSQL - PostgreSQL functions
; -----------------------------------------------------------------------------
[pg_affected_rows | Returns number of affected records (tuples), returns int]
pg_affected_rows(|resource result)
[pg_cancel_query | Cancel asynchronous query, returns bool]
pg_cancel_query(|resource connection)
[pg_client_encoding | Gets the client encoding, returns string]
pg_client_encoding(|[resource connection])
[pg_close | Closes a PostgreSQL connection, returns bool]
pg_close(|resource connection)
[pg_connect | Open a PostgreSQL connection, returns resource]
pg_connect(|string connection_string)
[pg_connection_busy | Get connection is busy or not, returns bool]
pg_connection_busy(|resource connection)
[pg_connection_reset | Reset connection (reconnect), returns bool]
pg_connection_reset(|resource connection)
[pg_connection_status | Get connection status, returns int]
pg_connection_status(|resource connection)
[pg_convert | Convert associative array value into suitable for SQL statement., returns array]
pg_convert(|resource connection, string table_name, array assoc_array, [int options])
[pg_copy_from | Insert records into a table from an array, returns bool]
pg_copy_from(|resource connection, string table_name, array rows, [string delimiter], [string null_as])
[pg_copy_to | Copy a table to an array, returns array]
pg_copy_to(|resource connection, string table_name, [string delimiter], [string null_as])
[pg_dbname | Get the database name, returns string]
pg_dbname(|resource connection)
[pg_delete | Deletes records., returns mixed]
pg_delete(|resource connection, string table_name, array assoc_array, [int options])
[pg_end_copy | Sync with PostgreSQL backend, returns bool]
pg_end_copy(|[resource connection])
[pg_escape_bytea | Escape binary for bytea type, returns string]
pg_escape_bytea(|string data)
[pg_escape_string | Escape string for text/char type, returns string]
pg_escape_string(|string data)
[pg_fetch_all | Fetches all rows from a result as an array, returns array]
pg_fetch_all(|resource result)
[pg_fetch_array | Fetch a row as an array, returns array]
pg_fetch_array(|resource result, [int row], [int result_type])
[pg_fetch_assoc | Fetch a row as an associative array, returns array]
pg_fetch_assoc(|resource result, [int row])
[pg_fetch_object | Fetch a row as an object, returns object]
pg_fetch_object(|resource result, [int row], [int result_type])
[pg_fetch_result | Returns values from a result resource, returns mixed]
pg_fetch_result(|resource result, int row, mixed field)
[pg_fetch_row | Get a row as an enumerated array, returns array]
pg_fetch_row(|resource result, int row)
[pg_field_is_null | Test if a field is NULL, returns int]
pg_field_is_null(|resource result, int row, mixed field)
[pg_field_name | Returns the name of a field, returns string]
pg_field_name(|resource result, int field_number)
[pg_field_num | Returns the field number of the named field, returns int]
pg_field_num(|resource result, string field_name)
[pg_field_prtlen | Returns the printed length, returns int]
pg_field_prtlen(|resource result, int row_number, string field_name)
[pg_field_size | Returns the internal storage size of the named field, returns int]
pg_field_size(|resource result, int field_number)
[pg_field_type | Returns the type name for the corresponding field number, returns string]
pg_field_type(|resource result, int field_number)
[pg_free_result | Free result memory, returns bool]
pg_free_result(|resource result)
[pg_get_notify | Ping database connection, returns array]
pg_get_notify(|resource connection, [int result_type])
[pg_get_pid | Ping database connection, returns int]
pg_get_pid(|resource connection)
[pg_get_result | Get asynchronous query result, returns resource]
pg_get_result(|[resource connection])
[pg_host | Returns the host name associated with the connection, returns string]
pg_host(|resource connection)
[pg_insert | Insert array into table., returns bool]
pg_insert(|resource connection, string table_name, array assoc_array, [int options])
[pg_last_error | Get the last error message string of a connection, returns string]
pg_last_error(|[resource connection])
[pg_last_notice | Returns the last notice message from PostgreSQL server, returns string]
pg_last_notice(|resource connection)
[pg_last_oid | Returns the last object's oid, returns int]
pg_last_oid(|resource result)
[pg_lo_close | Close a large object, returns bool]
pg_lo_close(|resource large_object)
[pg_lo_create | Create a large object, returns int]
pg_lo_create(|resource connection)
[pg_lo_export | Export a large object to file, returns bool]
pg_lo_export(|int oid, string pathname, [resource connection])
[pg_lo_import | Import a large object from file, returns int]
pg_lo_import(|[resource connection], string pathname)
[pg_lo_open | Open a large object, returns resource]
pg_lo_open(|resource connection, int oid, string mode)
[pg_lo_read_all | Reads an entire large object and send straight to browser, returns int]
pg_lo_read_all(|resource large_object)
[pg_lo_read | Read a large object, returns string]
pg_lo_read(|resource large_object, int len)
[pg_lo_seek | Seeks position of large object, returns bool]
pg_lo_seek(|resource large_object, int offset, [int whence])
[pg_lo_tell | Returns current position of large object, returns int]
pg_lo_tell(|resource large_object)
[pg_lo_unlink | Delete a large object, returns bool]
pg_lo_unlink(|resource connection, int oid)
[pg_lo_write | Write a large object, returns int]
pg_lo_write(|resource large_object, string data)
[pg_meta_data | Get meta data for table., returns array]
pg_meta_data(|resource connection, string table_name)
[pg_num_fields | Returns the number of fields, returns int]
pg_num_fields(|resource result)
[pg_num_rows | Returns the number of rows, returns int]
pg_num_rows(|resource result)
[pg_options | Get the options associated with the connection, returns string]
pg_options(|resource connection)
[pg_pconnect | Open a persistent PostgreSQL connection, returns resource]
pg_pconnect(|string connection_string)
[pg_ping | Ping database connection, returns bool]
pg_ping(|resource connection)
[pg_port | Return the port number associated with the connection, returns int]
pg_port(|resource connection)
[pg_put_line | Send a NULL-terminated string to PostgreSQL backend, returns bool]
pg_put_line(|[resource connection], string data)
[pg_query | Execute a query, returns resource]
pg_query(|resource connection, string query)
[pg_result_error | Get error message associated with result, returns string]
pg_result_error(|resource result)
[pg_result_seek | Set internal row offset in result resource, returns array]
pg_result_seek(|resource result, int offset)
[pg_result_status | Get status of query result, returns int]
pg_result_status(|resource result)
[pg_select | Select records., returns array]
pg_select(|resource connection, string table_name, array assoc_array, [int options])
[pg_send_query | Sends asynchronous query, returns bool]
pg_send_query(|resource connection, string query)
[pg_set_client_encoding | Set the client encoding, returns int]
pg_set_client_encoding(|[resource connection], string encoding)
[pg_trace | Enable tracing a PostgreSQL connection, returns bool]
pg_trace(|string pathname, [string mode], [resource connection])
[pg_tty | Return the tty name associated with the connection, returns string]
pg_tty(|resource connection)
[pg_unescape_bytea | Escape binary for bytea type, returns string]
pg_unescape_bytea(|string data)
[pg_untrace | Disable tracing of a PostgreSQL connection, returns bool]
pg_untrace(|[resource connection])
[pg_update | Update table., returns mixed]
pg_update(|resource connection, string table_name, array data, array condition, [int options])
; -----------------------------------------------------------------------------
; PCNTL - Process Control Functions
; -----------------------------------------------------------------------------
[pcntl_exec | Executes specified program in current process space, returns bool]
pcntl_exec(|string path, [array args], [array envs])
[pcntl_fork | Forks the currently running process, returns int]
pcntl_fork()|
[pcntl_signal | Installs a signal handler, returns bool]
pcntl_signal(|int signo, callback handle, [bool restart_syscalls])
[pcntl_waitpid | Waits on or returns the status of a forked child, returns int]
pcntl_waitpid(|int pid, int &status, int options)
[pcntl_wexitstatus | Returns the return code of a terminated child, returns int]
pcntl_wexitstatus(|int status)
[pcntl_wifexited | Returns TRUE if status code represents a successful exit, returns int]
pcntl_wifexited(|int status)
[pcntl_wifsignaled | Returns TRUE if status code represents a termination due to a signal, returns int]
pcntl_wifsignaled(|int status)
[pcntl_wifstopped | Returns TRUE if child process is currently stopped, returns int]
pcntl_wifstopped(|int status)
[pcntl_wstopsig | Returns the signal which caused the child to stop, returns int]
pcntl_wstopsig(|int status)
[pcntl_wtermsig | Returns the signal which caused the child to terminate, returns int]
pcntl_wtermsig(|int status)
; -----------------------------------------------------------------------------
; Program Execution - Program Execution functions
; -----------------------------------------------------------------------------
[escapeshellarg | escape a string to be used as a shell argument, returns string]
escapeshellarg(|string arg)
[escapeshellcmd | escape shell metacharacters, returns string]
escapeshellcmd(|string command)
[exec | Execute an external program, returns string]
exec(|string command, [array output], [int return_var])
[passthru | Execute an external program and display raw output, returns void]
passthru(|string command, [int return_var])
[proc_close | Close a process opened by proc_open and return the exit code of that process., returns int]
proc_close(|resource process)
[proc_get_status | Get information about a process opened by proc_open, returns array]
proc_get_status(|resource process)
[proc_nice | Change the priority of the current process, returns bool]
proc_nice(|int priority)
[proc_open | Execute a command and open file pointers for input/output, returns resource]
proc_open(|string cmd, array descriptorspec, array pipes)
[proc_terminate | kills a process opened by proc_open, returns int]
proc_terminate(|resource process, [int signal])
[shell_exec | Execute command via shell and return the complete output as a string, returns string]
shell_exec(|string cmd)
[system | Execute an external program and display the output, returns string]
system(|string command, [int return_var])
; -----------------------------------------------------------------------------
; Printer - Printer functions
; -----------------------------------------------------------------------------
[printer_abort | Deletes the printer's spool file, returns void]
printer_abort(|resource handle)
[printer_close | Close an open printer connection, returns void]
printer_close(|resource handle)
[printer_create_brush | Create a new brush, returns mixed]
printer_create_brush(|int style, string color)
[printer_create_dc | Create a new device context, returns void]
printer_create_dc(|resource handle)
[printer_create_font | Create a new font, returns mixed]
printer_create_font(|string face, int height, int width, int font_weight, bool italic, bool underline, bool strikeout, int orientaton)
[printer_create_pen | Create a new pen, returns mixed]
printer_create_pen(|int style, int width, string color)
[printer_delete_brush | Delete a brush, returns bool]
printer_delete_brush(|resource handle)
[printer_delete_dc | Delete a device context, returns bool]
printer_delete_dc(|resource handle)
[printer_delete_font | Delete a font, returns bool]
printer_delete_font(|resource handle)
[printer_delete_pen | Delete a pen, returns bool]
printer_delete_pen(|resource handle)
[printer_draw_bmp | Draw a bmp, returns void]
printer_draw_bmp(|resource handle, string filename, int x, int y)
[printer_draw_chord | Draw a chord, returns void]
printer_draw_chord(|resource handle, int rec_x, int rec_y, int rec_x1, int rec_y1, int rad_x, int rad_y, int rad_x1, int rad_y1)
[printer_draw_elipse | Draw an ellipse, returns void]
printer_draw_elipse(|resource handle, int ul_x, int ul_y, int lr_x, int lr_y)
[printer_draw_line | Draw a line, returns void]
printer_draw_line(|resource printer_handle, int from_x, int from_y, int to_x, int to_y)
[printer_draw_pie | Draw a pie, returns void]
printer_draw_pie(|resource handle, int rec_x, int rec_y, int rec_x1, int rec_y1, int rad1_x, int rad1_y, int rad2_x, int rad2_y)
[printer_draw_rectangle | Draw a rectangle, returns void]
printer_draw_rectangle(|resource handle, int ul_x, int ul_y, int lr_x, int lr_y)
[printer_draw_roundrect | Draw a rectangle with rounded corners, returns void]
printer_draw_roundrect(|resource handle, int ul_x, int ul_y, int lr_x, int lr_y, int width, int height)
[printer_draw_text | Draw text, returns void]
printer_draw_text(|resource printer_handle, string text, int x, int y)
[printer_end_doc | Close document, returns bool]
printer_end_doc(|resource handle)
[printer_end_page | Close active page, returns bool]
printer_end_page(|resource handle)
[printer_get_option | Retrieve printer configuration data, returns mixed]
printer_get_option(|resource handle, string option)
[printer_list | Return an array of printers attached to the server, returns array]
printer_list(|int enumtype, [string name], [int level])
[printer_logical_fontheight | Get logical font height, returns int]
printer_logical_fontheight(|resource handle, int height)
[printer_open | Open connection to a printer, returns mixed]
printer_open(|[string devicename])
[printer_select_brush | Select a brush, returns void]
printer_select_brush(|resource printer_handle, resource brush_handle)
[printer_select_font | Select a font, returns void]
printer_select_font(|resource printer_handle, resource font_handle)
[printer_select_pen | Select a pen, returns void]
printer_select_pen(|resource printer_handle, resource pen_handle)
[printer_set_option | Configure the printer connection, returns bool]
printer_set_option(|resource handle, int option, mixed value)
[printer_start_doc | Start a new document, returns bool]
printer_start_doc(|resource handle, [string document])
[printer_start_page | Start a new page, returns bool]
printer_start_page(|resource handle)
[printer_write | Write data to the printer, returns bool]
printer_write(|resource handle, string content)
; -----------------------------------------------------------------------------
; Pspell - Pspell Functions
; -----------------------------------------------------------------------------
[pspell_add_to_personal | Add the word to a personal wordlist, returns int]
pspell_add_to_personal(|int dictionary_link, string word)
[pspell_add_to_session | Add the word to the wordlist in the current session, returns int]
pspell_add_to_session(|int dictionary_link, string word)
[pspell_check | Check a word, returns bool]
pspell_check(|int dictionary_link, string word)
[pspell_clear_session | Clear the current session, returns int]
pspell_clear_session(|int dictionary_link)
[pspell_config_create | Create a config used to open a dictionary, returns int]
pspell_config_create(|string language, [string spelling], [string jargon], [string encoding])
[pspell_config_ignore | Ignore words less than N characters long, returns int]
pspell_config_ignore(|int dictionary_link, int n)
[pspell_config_mode | Change the mode number of suggestions returned, returns int]
pspell_config_mode(|int dictionary_link, int mode)
[pspell_config_personal | Set a file that contains personal wordlist, returns int]
pspell_config_personal(|int dictionary_link, string file)
[pspell_config_repl | Set a file that contains replacement pairs, returns int]
pspell_config_repl(|int dictionary_link, string file)
[pspell_config_runtogether | Consider run-together words as valid compounds, returns int]
pspell_config_runtogether(|int dictionary_link, bool flag)
[pspell_config_save_repl | Determine whether to save a replacement pairs list along with the wordlist, returns int]
pspell_config_save_repl(|int dictionary_link, bool flag)
[pspell_new_config | Load a new dictionary with settings based on a given config, returns int]
pspell_new_config(|int config)
[pspell_new_personal | Load a new dictionary with personal wordlist, returns int]
pspell_new_personal(|string personal, string language, [string spelling], [string jargon], [string encoding], [int mode])
[pspell_new | Load a new dictionary, returns int]
pspell_new(|string language, [string spelling], [string jargon], [string encoding], [int mode])
[pspell_save_wordlist | Save the personal wordlist to a file, returns int]
pspell_save_wordlist(|int dictionary_link)
[pspell_store_replacement | Store a replacement pair for a word, returns int]
pspell_store_replacement(|int dictionary_link, string misspelled, string correct)
[pspell_suggest | Suggest spellings of a word, returns array]
pspell_suggest(|int dictionary_link, string word)
; -----------------------------------------------------------------------------
; Readline - GNU Readline
; -----------------------------------------------------------------------------
[readline_add_history | Adds a line to the history, returns void]
readline_add_history(|string line)
[readline_clear_history | Clears the history, returns bool]
readline_clear_history()|
[readline_completion_function | Registers a completion function, returns bool]
readline_completion_function(|string line)
[readline_info | Gets/sets various internal readline variables, returns mixed]
readline_info(|[string varname], [string newvalue])
[readline_list_history | Lists the history, returns array]
readline_list_history()|
[readline_read_history | Reads the history, returns bool]
readline_read_history(|string filename)
[readline_write_history | Writes the history, returns bool]
readline_write_history(|string filename)
[readline | Reads a line, returns string]
readline(|[string prompt])
; -----------------------------------------------------------------------------
; Recode - GNU Recode functions
; -----------------------------------------------------------------------------
[recode_file | Recode from file to file according to recode request, returns bool]
recode_file(|string request, resource input, resource output)
[recode_string | Recode a string according to a recode request, returns string]
recode_string(|string request, string string)
[recode | Alias for recode_string]
recode(|)
; -----------------------------------------------------------------------------
; PCRE - Regular Expression Functions (Perl-Compatible)
; -----------------------------------------------------------------------------
[Pattern Modifiers | Describes possible modifiers in regex patterns]
[Pattern Syntax | Describes PCRE regex syntax]
[preg_grep | Return array entries that match the pattern, returns array]
preg_grep(|string pattern, array input)
[preg_match_all | Perform a global regular expression match, returns int]
preg_match_all(|string pattern, string subject, array matches, [int flags])
[preg_match | Perform a regular expression match, returns int]
preg_match(|string pattern, string subject, [array matches], [int flags])
[preg_quote | Quote regular expression characters, returns string]
preg_quote(|string str, [string delimiter])
[preg_replace_callback | Perform a regular expression search and replace using a callback, returns mixed]
preg_replace_callback(|mixed pattern, callback callback, mixed subject, [int limit])
[preg_replace | Perform a regular expression search and replace, returns mixed]
preg_replace(|mixed pattern, mixed replacement, mixed subject, [int limit])
[preg_split | Split string by a regular expression, returns array]
preg_split(|string pattern, string subject, [int limit], [int flags])
; -----------------------------------------------------------------------------
; qtdom - qtdom functions
; -----------------------------------------------------------------------------
[qdom_error | Returns the error string from the last QDOM operation or FALSE if no errors occured, returns string]
qdom_error()|
[qdom_tree | creates a tree of an xml string, returns object]
qdom_tree(|string )
; -----------------------------------------------------------------------------
; Regexps - Regular Expression Functions (POSIX Extended)
; -----------------------------------------------------------------------------
[ereg_replace | Replace regular expression, returns string]
ereg_replace(|string pattern, string replacement, string string)
[ereg | Regular expression match, returns bool]
ereg(|string pattern, string string, [array regs])
[eregi_replace | replace regular expression case insensitive, returns string]
eregi_replace(|string pattern, string replacement, string string)
[eregi | case insensitive regular expression match, returns bool]
eregi(|string pattern, string string, [array regs])
[split | split string into array by regular expression, returns array]
split(|string pattern, string string, [int limit])
[spliti | Split string into array by regular expression case insensitive, returns array]
spliti(|string pattern, string string, [int limit])
[sql_regcase | Make regular expression for case insensitive match, returns string]
sql_regcase(|string string)
; -----------------------------------------------------------------------------
; Semaphore - Semaphore, Shared Memory and IPC Functions
; -----------------------------------------------------------------------------
[ftok | Convert a pathname and a project identifier to a System V IPC key, returns int]
ftok(|string pathname, string proj)
[msg_get_queue | Create or attach to a message queue, returns int]
msg_get_queue(|int key, [int perms])
[msg_receive | Receive a message from a message queue, returns bool]
msg_receive(|int queue, int desiredmsgtype, int msgtype, int maxsize, mixed message, [bool unserialize], [int flags], [int errorcode])
[msg_remove_queue | Destroy a message queue, returns bool]
msg_remove_queue(|int queue)
[msg_send | Send a message to a message queue, returns bool]
msg_send(|int queue, int msgtype, mixed message, [bool serialize], [bool blocking], [int errorcode])
[msg_set_queue | Set information in the message queue data structure, returns bool]
msg_set_queue(|int queue, array data)
[msg_stat_queue | Returns information from the message queue data structure, returns array]
msg_stat_queue(|int queue)
[sem_acquire | Acquire a semaphore, returns bool]
sem_acquire(|int sem_identifier)
[sem_get | Get a semaphore id, returns int]
sem_get(|int key, [int max_acquire], [int perm])
[sem_release | Release a semaphore, returns bool]
sem_release(|int sem_identifier)
[sem_remove | Remove a semaphore, returns bool]
sem_remove(|int sem_identifier)
[shm_attach | Creates or open a shared memory segment, returns int]
shm_attach(|int key, [int memsize], [int perm])
[shm_detach | Disconnects from shared memory segment, returns bool]
shm_detach(|int shm_identifier)
[shm_get_var | Returns a variable from shared memory, returns mixed]
shm_get_var(|int id, int variable_key)
[shm_put_var | Inserts or updates a variable in shared memory, returns int]
shm_put_var(|int shm_identifier, int variable_key, mixed variable)
[shm_remove_var | Removes a variable from shared memory, returns int]
shm_remove_var(|int id, int variable_key)
[shm_remove | Removes shared memory from Unix systems, returns int]
shm_remove(|int shm_identifier)
; -----------------------------------------------------------------------------
; SESAM - SESAM database functions
; -----------------------------------------------------------------------------
[sesam_affected_rows | Get number of rows affected by an immediate query, returns int]
sesam_affected_rows(|string result_id)
[sesam_commit | Commit pending updates to the SESAM database, returns bool]
sesam_commit()|
[sesam_connect | Open SESAM database connection, returns bool]
sesam_connect(|string catalog, string schema, string user)
[sesam_diagnostic | Return status information for last SESAM call, returns array]
sesam_diagnostic()|
[sesam_disconnect | Detach from SESAM connection, returns bool]
sesam_disconnect()|
[sesam_errormsg | Returns error message of last SESAM call, returns string]
sesam_errormsg()|
[sesam_execimm | Execute an "immediate" SQL-statement, returns string]
sesam_execimm(|string query)
[sesam_fetch_array | Fetch one row as an associative array, returns array]
sesam_fetch_array(|string result_id, [int whence], [int offset])
[sesam_fetch_result | Return all or part of a query result, returns mixed]
sesam_fetch_result(|string result_id, [int max_rows])
[sesam_fetch_row | Fetch one row as an array, returns array]
sesam_fetch_row(|string result_id, [int whence], [int offset])
[sesam_field_array | Return meta information about individual columns in a result, returns array]
sesam_field_array(|string result_id)
[sesam_field_name | Return one column name of the result set, returns int]
sesam_field_name(|string result_id, int index)
[sesam_free_result | Releases resources for the query, returns int]
sesam_free_result(|string result_id)
[sesam_num_fields | Return the number of fields/columns in a result set, returns int]
sesam_num_fields(|string result_id)
[sesam_query | Perform a SESAM SQL query and prepare the result, returns string]
sesam_query(|string query, [bool scrollable])
[sesam_rollback | Discard any pending updates to the SESAM database, returns bool]
sesam_rollback()|
[sesam_seek_row | Set scrollable cursor mode for subsequent fetches, returns bool]
sesam_seek_row(|string result_id, int whence, [int offset])
[sesam_settransaction | Set SESAM transaction parameters, returns bool]
sesam_settransaction(|int isolation_level, int read_only)
; -----------------------------------------------------------------------------
; Sessions - Session handling functions
; -----------------------------------------------------------------------------
[session_cache_expire | Return current cache expire, returns int]
session_cache_expire(|[int new_cache_expire])
[session_cache_limiter | Get and/or set the current cache limiter, returns string]
session_cache_limiter(|[string cache_limiter])
[session_decode | Decodes session data from a string, returns bool]
session_decode(|string data)
[session_destroy | Destroys all data registered to a session, returns bool]
session_destroy()|
[session_encode | Encodes the current session data as a string, returns string]
session_encode()|
[session_get_cookie_params | Get the session cookie parameters, returns array]
session_get_cookie_params()|
[session_id | Get and/or set the current session id, returns string]
session_id(|[string id])
[session_is_registered | Find out whether a global variable is registered in a session, returns bool]
session_is_registered(|string name)
[session_module_name | Get and/or set the current session module, returns string]
session_module_name(|[string module])
[session_name | Get and/or set the current session name, returns string]
session_name(|[string name])
[session_regenerate_id | Update the current session id with a newly generated one, returns bool]
session_regenerate_id()|
[session_register | Register one or more global variables with the current session, returns bool]
session_register(|mixed name, [mixed ...])
[session_save_path | Get and/or set the current session save path, returns string]
session_save_path(|[string path])
[session_set_cookie_params | Set the session cookie parameters, returns void]
session_set_cookie_params(|int lifetime, [string path], [string domain], [bool secure])
[session_set_save_handler | Sets user-level session storage functions, returns bool]
session_set_save_handler(|string open, string close, string read, string write, string destroy, string gc)
[session_start | Initialize session data, returns bool]
session_start()|
[session_unregister | Unregister a global variable from the current session, returns bool]
session_unregister(|string name)
[session_unset | Free all session variables, returns void]
session_unset()|
[session_write_close | Write session data and end session, returns void]
session_write_close()|
; -----------------------------------------------------------------------------
; shmop - Shared Memory Functions
; -----------------------------------------------------------------------------
[shmop_close | Close shared memory block, returns int]
shmop_close(|int shmid)
[shmop_delete | Delete shared memory block, returns int]
shmop_delete(|int shmid)
[shmop_open | Create or open shared memory block, returns int]
shmop_open(|int key, string flags, int mode, int size)
[shmop_read | Read data from shared memory block, returns string]
shmop_read(|int shmid, int start, int count)
[shmop_size | Get size of shared memory block, returns int]
shmop_size(|int shmid)
[shmop_write | Write data into shared memory block, returns int]
shmop_write(|int shmid, string data, int offset)
; -----------------------------------------------------------------------------
; SQLite - SQLite
; -----------------------------------------------------------------------------
[sqlite_array_query | Execute a query against a given database and returns an array., returns array]
sqlite_array_query(|resource dbhandle, string query, [int result_type], [bool decode_binary])
[sqlite_busy_timeout | Set busy timeout duration, or disable busy handlers., returns void]
sqlite_busy_timeout(|resource dbhandle, int milliseconds)
[sqlite_changes | Returns the number of rows that were changed by the most recent SQL statement., returns int]
sqlite_changes(|resource dbhandle)
[sqlite_close | Closes an open SQLite database., returns void]
sqlite_close(|resource dbhandle)
[sqlite_column | Fetches a column from the current row of a result set., returns mixed]
sqlite_column(|resource result, mixed index_or_name, [bool decode_binary])
[sqlite_create_aggregate | Register an aggregating UDF for use in SQL statements., returns bool]
sqlite_create_aggregate(|resource dbhandle, string function_name, mixed step_func, mixed finalize_func, [int num_args])
[sqlite_create_function | Registers a "regular" User Defined Function for use in SQL statements., returns bool]
sqlite_create_function(|resource dbhandle, string function_name, mixed callback, [int num_args])
[sqlite_current | Fetches the current row from a result set as an array., returns array]
sqlite_current(|resource result, [int result_type], [bool decode_binary])
[sqlite_error_string | Returns the textual description of an error code., returns string]
sqlite_error_string(|int error_code)
[sqlite_escape_string | Escapes a string for use as a query parameter, returns string]
sqlite_escape_string(|string item)
[sqlite_fetch_array | Fetches the next row from a result set as an array., returns array]
sqlite_fetch_array(|resource result, [int result_type], [bool decode_binary])
[sqlite_fetch_single | Fetches the first column of a result set as a string., returns string]
sqlite_fetch_single(|resource result, [int result_type], [bool decode_binary])
[sqlite_fetch_string | Alias of sqlite_fetch_single]
sqlite_fetch_string(|)
[sqlite_field_name | Returns the name of a particular field., returns string]
sqlite_field_name(|resource result, int field_index)
[sqlite_has_more | Returns whether or not more rows are available., returns bool]
sqlite_has_more(|resource result)
[sqlite_last_error | Returns the error code of the last error for a database., returns int]
sqlite_last_error(|resource dbhandle)
[sqlite_last_insert_rowid | Returns the rowid of the most recently inserted row., returns int]
sqlite_last_insert_rowid(|resource dbhandle)
[sqlite_libencoding | Returns the encoding of the linked SQLite library., returns string]
sqlite_libencoding()|
[sqlite_libversion | Returns the version of the linked SQLite library., returns string]
sqlite_libversion()|
[sqlite_next | Seek to the next row number., returns bool]
sqlite_next(|resource result)
[sqlite_num_fields | Returns the number of fields in a result set., returns int]
sqlite_num_fields(|resource result)
[sqlite_num_rows | Returns the number of rows in a buffered result set., returns int]
sqlite_num_rows(|resource result)
[sqlite_open | Opens a SQLite database. Will create the database if it does not exist, returns resource]
sqlite_open(|string filename, [int mode], [string &error_message])
[sqlite_popen | Opens a persistent handle to an SQLite database. Will create the database if it does not exist., returns resource]
sqlite_popen(|string filename, [int mode], [string &error_message])
[sqlite_query | Executes a query against a given database and returns a result handle., returns resource]
sqlite_query(|resource dbhandle, string query)
[sqlite_rewind | Seek to the first row number., returns bool]
sqlite_rewind(|resource result)
[sqlite_seek | Seek to a particular row number of a buffered result set., returns bool]
sqlite_seek(|resource result, int rownum)
[sqlite_udf_decode_binary | Decode binary data passed as parameters to an UDF., returns string]
sqlite_udf_decode_binary(|string data)
[sqlite_udf_encode_binary | Encode binary data before returning it from an UDF., returns string]
sqlite_udf_encode_binary(|string data)
[sqlite_unbuffered_query | Execute a query that does not prefetch and buffer all data, returns resource]
sqlite_unbuffered_query(|resource dbhandle, string query)
; -----------------------------------------------------------------------------
; SWF - Shockwave Flash functions
; -----------------------------------------------------------------------------
[swf_actiongeturl | Get a URL from a Shockwave Flash movie, returns void]
swf_actiongeturl(|string url, string target)
[swf_actiongotoframe | Play a frame and then stop, returns void]
swf_actiongotoframe(|int framenumber)
[swf_actiongotolabel | Display a frame with the specified label, returns void]
swf_actiongotolabel(|string label)
[swf_actionnextframe | Go foward one frame, returns void]
swf_actionnextframe()|
[swf_actionplay | Start playing the flash movie from the current frame, returns void]
swf_actionplay()|
[swf_actionprevframe | Go backwards one frame, returns void]
swf_actionprevframe()|
[swf_actionsettarget | Set the context for actions, returns void]
swf_actionsettarget(|string target)
[swf_actionstop | Stop playing the flash movie at the current frame, returns void]
swf_actionstop()|
[swf_actiontogglequality | Toggle between low and high quality, returns void]
swf_actiontogglequality()|
[swf_actionwaitforframe | Skip actions if a frame has not been loaded, returns void]
swf_actionwaitforframe(|int framenumber, int skipcount)
[swf_addbuttonrecord | Controls location, appearance and active area of the current button, returns void]
swf_addbuttonrecord(|int states, int shapeid, int depth)
[swf_addcolor | Set the global add color to the rgba value specified, returns void]
swf_addcolor(|float r, float g, float b, float a)
[swf_closefile | Close the current Shockwave Flash file, returns void]
swf_closefile(|[int return_file])
[swf_definebitmap | Define a bitmap, returns void]
swf_definebitmap(|int objid, string image_name)
[swf_definefont | Defines a font, returns void]
swf_definefont(|int fontid, string fontname)
[swf_defineline | Define a line, returns void]
swf_defineline(|int objid, float x1, float y1, float x2, float y2, float width)
[swf_definepoly | Define a polygon, returns void]
swf_definepoly(|int objid, array coords, int npoints, float width)
[swf_definerect | Define a rectangle, returns void]
swf_definerect(|int objid, float x1, float y1, float x2, float y2, float width)
[swf_definetext | Define a text string, returns void]
swf_definetext(|int objid, string str, int docenter)
[swf_endbutton | End the definition of the current button, returns void]
swf_endbutton()|
[swf_enddoaction | End the current action, returns void]
swf_enddoaction()|
[swf_endshape | Completes the definition of the current shape, returns void]
swf_endshape()|
[swf_endsymbol | End the definition of a symbol, returns void]
swf_endsymbol()|
[swf_fontsize | Change the font size, returns void]
swf_fontsize(|float size)
[swf_fontslant | Set the font slant, returns void]
swf_fontslant(|float slant)
[swf_fonttracking | Set the current font tracking, returns void]
swf_fonttracking(|float tracking)
[swf_getbitmapinfo | Get information about a bitmap, returns array]
swf_getbitmapinfo(|int bitmapid)
[swf_getfontinfo | The height in pixels of a capital A and a lowercase x, returns array]
swf_getfontinfo()|
[swf_getframe | Get the frame number of the current frame, returns int]
swf_getframe()|
[swf_labelframe | Label the current frame, returns void]
swf_labelframe(|string name)
[swf_lookat | Define a viewing transformation, returns void]
swf_lookat(|float view_x, float view_y, float view_z, float reference_x, float reference_y, float reference_z, float twist)
[swf_modifyobject | Modify an object, returns void]
swf_modifyobject(|int depth, int how)
[swf_mulcolor | Sets the global multiply color to the rgba value specified, returns void]
swf_mulcolor(|float r, float g, float b, float a)
[swf_nextid | Returns the next free object id, returns int]
swf_nextid()|
[swf_oncondition | Describe a transition used to trigger an action list, returns void]
swf_oncondition(|int transition)
[swf_openfile | Open a new Shockwave Flash file, returns void]
swf_openfile(|string filename, float width, float height, float framerate, float r, float g, float b)
[swf_ortho2 | Defines 2D orthographic mapping of user coordinates onto the current viewport, returns void]
swf_ortho2(|float xmin, float xmax, float ymin, float ymax)
[swf_ortho | Defines an orthographic mapping of user coordinates onto the current viewport, returns void]
swf_ortho(|float xmin, float xmax, float ymin, float ymax, float zmin, float zmax)
[swf_perspective | Define a perspective projection transformation, returns void]
swf_perspective(|float fovy, float aspect, float near, float far)
[swf_placeobject | Place an object onto the screen, returns void]
swf_placeobject(|int objid, int depth)
[swf_polarview | Define the viewer's position with polar coordinates, returns void]
swf_polarview(|float dist, float azimuth, float incidence, float twist)
[swf_popmatrix | Restore a previous transformation matrix, returns void]
swf_popmatrix()|
[swf_posround | Enables or Disables the rounding of the translation when objects are placed or moved, returns void]
swf_posround(|int round)
[swf_pushmatrix | Push the current transformation matrix back unto the stack, returns void]
swf_pushmatrix()|
[swf_removeobject | Remove an object, returns void]
swf_removeobject(|int depth)
[swf_rotate | Rotate the current transformation, returns void]
swf_rotate(|float angle, string axis)
[swf_scale | Scale the current transformation, returns void]
swf_scale(|float x, float y, float z)
[swf_setfont | Change the current font, returns void]
swf_setfont(|int fontid)
[swf_setframe | Switch to a specified frame, returns void]
swf_setframe(|int framenumber)
[swf_shapearc | Draw a circular arc, returns void]
swf_shapearc(|float x, float y, float r, float ang1, float ang2)
[swf_shapecurveto3 | Draw a cubic bezier curve, returns void]
swf_shapecurveto3(|float x1, float y1, float x2, float y2, float x3, float y3)
[swf_shapecurveto | Draw a quadratic bezier curve between two points, returns void]
swf_shapecurveto(|float x1, float y1, float x2, float y2)
[swf_shapefillbitmapclip | Set current fill mode to clipped bitmap, returns void]
swf_shapefillbitmapclip(|int bitmapid)
[swf_shapefillbitmaptile | Set current fill mode to tiled bitmap, returns void]
swf_shapefillbitmaptile(|int bitmapid)
[swf_shapefilloff | Turns off filling, returns void]
swf_shapefilloff()|
[swf_shapefillsolid | Set the current fill style to the specified color, returns void]
swf_shapefillsolid(|float r, float g, float b, float a)
[swf_shapelinesolid | Set the current line style, returns void]
swf_shapelinesolid(|float r, float g, float b, float a, float width)
[swf_shapelineto | Draw a line, returns void]
swf_shapelineto(|float x, float y)
[swf_shapemoveto | Move the current position, returns void]
swf_shapemoveto(|float x, float y)
[swf_showframe | Display the current frame, returns void]
swf_showframe()|
[swf_startbutton | Start the definition of a button, returns void]
swf_startbutton(|int objid, int type)
[swf_startdoaction | Start a description of an action list for the current frame, returns void]
swf_startdoaction()|
[swf_startshape | Start a complex shape, returns void]
swf_startshape(|int objid)
[swf_startsymbol | Define a symbol, returns void]
swf_startsymbol(|int objid)
[swf_textwidth | Get the width of a string, returns float]
swf_textwidth(|string str)
[swf_translate | Translate the current transformations, returns void]
swf_translate(|float x, float y, float z)
[swf_viewport | Select an area for future drawing, returns void]
swf_viewport(|float xmin, float xmax, float ymin, float ymax)
; -----------------------------------------------------------------------------
; SNMP - SNMP functions
; -----------------------------------------------------------------------------
[snmp_get_quick_print | Fetches the current value of the UCD library's quick_print setting, returns bool]
snmp_get_quick_print()|
[snmp_set_quick_print | Set the value of quick_print within the UCD SNMP library, returns void]
snmp_set_quick_print(|bool quick_print)
[snmpget | Fetch an SNMP object, returns string]
snmpget(|string hostname, string community, string object_id, [int timeout], [int retries])
[snmprealwalk | Return all objects including their respective object ID within the specified one, returns array]
snmprealwalk(|string host, string community, string object_id, [int timeout], [int retries])
[snmpset | Set an SNMP object, returns bool]
snmpset(|string hostname, string community, string object_id, string type, mixed value, [int timeout], [int retries])
[snmpwalk | Fetch all the SNMP objects from an agent, returns array]
snmpwalk(|string hostname, string community, string object_id, [int timeout], [int retries])
[snmpwalkoid | Query for a tree of information about a network entity, returns array]
snmpwalkoid(|string hostname, string community, string object_id, [int timeout], [int retries])
; -----------------------------------------------------------------------------
; Sockets - Socket functions
; -----------------------------------------------------------------------------
[socket_accept | Accepts a connection on a socket, returns resource]
socket_accept(|resource socket)
[socket_bind | Binds a name to a socket, returns bool]
socket_bind(|resource socket, string address, [int port])
[socket_clear_error | Clears the error on the socket or the last error code, returns void]
socket_clear_error(|[resource socket])
[socket_close | Closes a socket resource, returns void]
socket_close(|resource socket)
[socket_connect | Initiates a connection on a socket, returns bool]
socket_connect(|resource socket, string address, [int port])
[socket_create_listen | Opens a socket on port to accept connections, returns resource]
socket_create_listen(|int port, [int backlog])
[socket_create_pair | Creates a pair of indistinguishable sockets and stores them in fds., returns bool]
socket_create_pair(|int domain, int type, int protocol, array &fd)
[socket_create | Create a socket (endpoint for communication), returns resource]
socket_create(|int domain, int type, int protocol)
[socket_get_option | Gets socket options for the socket, returns mixed]
socket_get_option(|resource socket, int level, int optname)
[socket_getpeername | Queries the remote side of the given socket which may either result in host/port or in a UNIX filesystem path, dependent on its type., returns bool]
socket_getpeername(|resource socket, string &addr, [int &port])
[socket_getsockname | Queries the local side of the given socket which may either result in host/port or in a UNIX filesystem path, dependent on its type., returns bool]
socket_getsockname(|resource socket, string &addr, [int &port])
[socket_iovec_add | Adds a new vector to the scatter/gather array, returns bool]
socket_iovec_add(|resource iovec, int iov_len)
[socket_iovec_alloc | Builds a 'struct iovec' for use with sendmsg, recvmsg, writev, and readv, returns resource]
socket_iovec_alloc(|int num_vectors, [int ])
[socket_iovec_delete | Deletes a vector from an array of vectors, returns bool]
socket_iovec_delete(|resource iovec, int iov_pos)
[socket_iovec_fetch | Returns the data held in the iovec specified by iovec_id[iovec_position], returns string]
socket_iovec_fetch(|resource iovec, int iovec_position)
[socket_iovec_free | Frees the iovec specified by iovec_id, returns bool]
socket_iovec_free(|resource iovec)
[socket_iovec_set | Sets the data held in iovec_id[iovec_position] to new_val, returns bool]
socket_iovec_set(|resource iovec, int iovec_position, string new_val)
[socket_last_error | Returns the last error on the socket, returns int]
socket_last_error(|[resource socket])
[socket_listen | Listens for a connection on a socket, returns bool]
socket_listen(|resource socket, [int backlog])
[socket_read | Reads a maximum of length bytes from a socket, returns string]
socket_read(|resource socket, int length, [int type])
[socket_readv | Reads from an fd, using the scatter-gather array defined by iovec_id, returns bool]
socket_readv(|resource socket, resource iovec_id)
[socket_recv | Receives data from a connected socket, returns int]
socket_recv(|resource socket, string &buf, int len, int flags)
[socket_recvfrom | Receives data from a socket, connected or not, returns int]
socket_recvfrom(|resource socket, string &buf, int len, int flags, string &name, [int &port])
[socket_recvmsg | Used to receive messages on a socket, whether connection-oriented or not, returns bool]
socket_recvmsg(|resource socket, resource iovec, array &control, int &controllen, int &flags, string &addr, [int &port])
[socket_select | Runs the select() system call on the given arrays of sockets with a specified timeout, returns int]
socket_select(|array &read, array &write, array &except, int tv_sec, [int tv_usec])
[socket_send | Sends data to a connected socket, returns int]
socket_send(|resource socket, string buf, int len, int flags)
[socket_sendmsg | Sends a message to a socket, regardless of whether it is connection-oriented or not, returns bool]
socket_sendmsg(|resource socket, resource iovec, int flags, string addr, [int port])
[socket_sendto | Sends a message to a socket, whether it is connected or not, returns int]
socket_sendto(|resource socket, string buf, int len, int flags, string addr, [int port])
[socket_set_block | Sets blocking mode on a socket resource, returns bool]
socket_set_block(|resource socket)
[socket_set_nonblock | Sets nonblocking mode for file descriptor fd, returns bool]
socket_set_nonblock(|resource socket)
[socket_set_option | Sets socket options for the socket, returns bool]
socket_set_option(|resource socket, int level, int optname, mixed optval)
[socket_shutdown | Shuts down a socket for receiving, sending, or both., returns bool]
socket_shutdown(|resource socket, [int how])
[socket_strerror | Return a string describing a socket error, returns string]
socket_strerror(|int errno)
[socket_write | Write to a socket, returns int]
socket_write(|resource socket, string buffer, [int length])
[socket_writev | Writes to a file descriptor, fd, using the scatter-gather array defined by iovec_id, returns bool]
socket_writev(|resource socket, resource iovec_id)
; -----------------------------------------------------------------------------
; Streams - Stream functions
; -----------------------------------------------------------------------------
[stream_context_create | Create a streams context, returns resource]
stream_context_create(|array options)
[stream_context_get_options | Retrieve options for a stream/wrapper/context, returns array]
stream_context_get_options(|resource stream|context)
[stream_context_set_option | Sets an option for a stream/wrapper/context, returns bool]
stream_context_set_option(|resource context|stream, string wrapper, string option, mixed value)
[stream_context_set_params | Set parameters for a stream/wrapper/context, returns bool]
stream_context_set_params(|resource stream|context, array params)
[stream_copy_to_stream | Copies data from one stream to another, returns int]
stream_copy_to_stream(|resource source, resource dest, [int maxlength])
[stream_filter_append | Attach a filter to a stream., returns bool]
stream_filter_append(|resource stream, string filtername, [int read_write], [mixed params])
[stream_filter_prepend | Attach a filter to a stream., returns bool]
stream_filter_prepend(|resource stream, string filtername, [int read_write], [mixed params])
[stream_filter_register | Register a stream filter implemented as a PHP class derived from php_user_filter, returns bool]
stream_filter_register(|string filtername, string classname)
[stream_get_filters | Retrieve list of registered filters, returns array]
stream_get_filters()|
[stream_get_line | Gets line from stream resource up to a given delimiter, returns string]
stream_get_line(|resource handle, int length, string ending)
[stream_get_meta_data | Retrieves header/meta data from streams/file pointers, returns array]
stream_get_meta_data(|resource stream)
[stream_get_transports | Retrieve list of registered socket transports, returns array]
stream_get_transports()|
[stream_get_wrappers | Retrieve list of registered streams, returns array]
stream_get_wrappers()|
[stream_register_wrapper | Alias of stream_wrapper_register]
stream_register_wrapper(|)
[stream_select | Runs the equivalent of the select() system call on the given arrays of streams with a timeout specified by tv_sec and tv_usec, returns int]
stream_select(|resource &read, resource &write, resource &except, int tv_sec, [int tv_usec])
[stream_set_blocking | Set blocking/non-blocking mode on a stream, returns bool]
stream_set_blocking(|resource stream, int mode)
[stream_set_timeout | Set timeout period on a stream, returns bool]
stream_set_timeout(|resource stream, int seconds, [int microseconds])
[stream_set_write_buffer | Sets file buffering on the given stream, returns int]
stream_set_write_buffer(|resource stream, int buffer)
[stream_socket_accept | Accept a connection on a socket created by stream_socket_server, returns resource]
stream_socket_accept(|resource server_socket, [int timeout], [string &peername])
[stream_socket_client | Open Internet or Unix domain socket connection, returns resource]
stream_socket_client(|string remote_socket, [int &errno], [string &errstr], [float timeout], [int flags], [resource context])
[stream_socket_get_name | Retrieve the name of the local or remote sockets, returns string]
stream_socket_get_name(|resource handle, bool want_peer)
[stream_socket_server | Create an Internet or Unix domain server socket, returns resource]
stream_socket_server(|string local_socket, [int &errno], [string &errstr], [int flags], [resource context])
[stream_wrapper_register | Register a URL wrapper implemented as a PHP class, returns bool]
stream_wrapper_register(|string protocol, string classname)
; -----------------------------------------------------------------------------
; Strings - String functions
; -----------------------------------------------------------------------------
[addcslashes | Quote string with slashes in a C style, returns string]
addcslashes(|string str, string charlist)
[addslashes | Quote string with slashes, returns string]
addslashes(|string str)
[bin2hex | Convert binary data into hexadecimal representation, returns string]
bin2hex(|string str)
[chop | Alias of rtrim]
chop(|)
[chr | Return a specific character, returns string]
chr(|int ascii)
[chunk_split | Split a string into smaller chunks, returns string]
chunk_split(|string body, [int chunklen], [string end])
[convert_cyr_string | Convert from one Cyrillic character set to another, returns string]
convert_cyr_string(|string str, string from, string to)
[count_chars | Return information about characters used in a string, returns mixed]
count_chars(|string string, [int mode])
[crc32 | Calculates the crc32 polynomial of a string, returns int]
crc32(|string str)
[crypt | One-way string encryption (hashing), returns string]
crypt(|string str, [string salt])
[echo | Output one or more strings, returns void]
echo(|string arg1, [string argn...])
[explode | Split a string by string, returns array]
explode(|string separator, string string, [int limit])
[fprintf | Write a formatted string to a stream, returns int]
fprintf(|resource handle, string format, [mixed args])
[get_html_translation_table | Returns the translation table used by htmlspecialchars and htmlentities, returns array]
get_html_translation_table(|int table, [int quote_style])
[hebrev | Convert logical Hebrew text to visual text, returns string]
hebrev(|string hebrew_text, [int max_chars_per_line])
[hebrevc | Convert logical Hebrew text to visual text with newline conversion, returns string]
hebrevc(|string hebrew_text, [int max_chars_per_line])
[html_entity_decode | Convert all HTML entities to their applicable characters, returns string]
html_entity_decode(|string string, [int quote_style], [string charset])
[htmlentities | Convert all applicable characters to HTML entities, returns string]
htmlentities(|string string, [int quote_style], [string charset])
[htmlspecialchars | Convert special characters to HTML entities, returns string]
htmlspecialchars(|string string, [int quote_style], [string charset])
[implode | Join array elements with a string, returns string]
implode(|string glue, array pieces)
[join | Alias for implode]
join(|)
[levenshtein | Calculate Levenshtein distance between two strings, returns int]
levenshtein(|string str1, string str2)
[localeconv | Get numeric formatting information, returns array]
localeconv()|
[ltrim | Strip whitespace from the beginning of a string, returns string]
ltrim(|string str, [string charlist])
[md5_file | Calculates the md5 hash of a given filename, returns string]
md5_file(|string filename, [bool raw_output])
[md5 | Calculate the md5 hash of a string, returns string]
md5(|string str, [bool raw_output])
[metaphone | Calculate the metaphone key of a string, returns string]
metaphone(|string str)
[money_format | Formats a number as a currency string, returns string]
money_format(|string format, float number)
[nl_langinfo | Query language and locale information, returns string]
nl_langinfo(|int item)
[nl2br | Inserts HTML line breaks before all newlines in a string, returns string]
nl2br(|string string)
[number_format | Format a number with grouped thousands, returns string]
number_format(|float number, [int decimals])
[ord | Return ASCII value of character, returns int]
ord(|string string)
[parse_str | Parses the string into variables, returns void]
parse_str(|string str, [array arr])
[print | Output a string, returns int]
print(|string arg)
[printf | Output a formatted string, returns void]
printf(|string format, [mixed args])
[quoted_printable_decode | Convert a quoted-printable string to an 8 bit string, returns string]
quoted_printable_decode(|string str)
[quotemeta | Quote meta characters, returns string]
quotemeta(|string str)
[rtrim | Strip whitespace from the end of a string, returns string]
rtrim(|string str, [string charlist])
[setlocale | Set locale information, returns string]
setlocale(|mixed category, string locale, [string ...])
[sha1_file | Calculate the sha1 hash of a file, returns string]
sha1_file(|string filename, [bool raw_output])
[sha1 | Calculate the sha1 hash of a string, returns string]
sha1(|string str, [bool raw_output])
[similar_text | Calculate the similarity between two strings, returns int]
similar_text(|string first, string second, [float percent])
[soundex | Calculate the soundex key of a string, returns string]
soundex(|string str)
[sprintf | Return a formatted string, returns string]
sprintf(|string format, [mixed args])
[sscanf | Parses input from a string according to a format, returns mixed]
sscanf(|string str, string format, [string var1])
[str_ireplace | Case-insensitive version of str_replace., returns mixed]
str_ireplace(|mixed search, mixed replace, mixed subject, [int &count])
[str_pad | Pad a string to a certain length with another string, returns string]
str_pad(|string input, int pad_length, [string pad_string], [int pad_type])
[str_repeat | Repeat a string, returns string]
str_repeat(|string input, int multiplier)
[str_replace | Replace all occurrences of the search string with the replacement string, returns mixed]
str_replace(|mixed search, mixed replace, mixed subject, [int &count])
[str_rot13 | Perform the rot13 transform on a string, returns string]
str_rot13(|string str)
[str_shuffle | Randomly shuffles a string, returns string]
str_shuffle(|string str)
[str_split | Convert a string to an array, returns array]
str_split(|string string, [int split_length])
[str_word_count | Return information about words used in a string, returns mixed]
str_word_count(|string string, [int format])
[strcasecmp | Binary safe case-insensitive string comparison, returns int]
strcasecmp(|string str1, string str2)
[strchr | Alias for strstr]
strchr(|)
[strcmp | Binary safe string comparison, returns int]
strcmp(|string str1, string str2)
[strcoll | Locale based string comparison, returns int]
strcoll(|string str1, string str2)
[strcspn | Find length of initial segment not matching mask, returns int]
strcspn(|string str1, string str2)
[strip_tags | Strip HTML and PHP tags from a string, returns string]
strip_tags(|string str, [string allowable_tags])
[stripcslashes | Un-quote string quoted with addcslashes, returns string]
stripcslashes(|string str)
[stripos | Find position of first occurrence of a case-insensitive string, returns int]
stripos(|string haystack, string needle, [int offset])
[stripslashes | Un-quote string quoted with addslashes, returns string]
stripslashes(|string str)
[stristr | Case-insensitive strstr, returns string]
stristr(|string haystack, string needle)
[strlen | Get string length, returns int]
strlen(|string str)
[strnatcasecmp | Case insensitive string comparisons using a "natural order" algorithm, returns int]
strnatcasecmp(|string str1, string str2)
[strnatcmp | String comparisons using a "natural order" algorithm, returns int]
strnatcmp(|string str1, string str2)
[strncasecmp | Binary safe case-insensitive string comparison of the first n characters, returns int]
strncasecmp(|string str1, string str2, int len)
[strncmp | Binary safe string comparison of the first n characters, returns int]
strncmp(|string str1, string str2, int len)
[strpos | Find position of first occurrence of a string, returns int]
strpos(|string haystack, string needle, [int offset])
[strrchr | Find the last occurrence of a character in a string, returns string]
strrchr(|string haystack, char needle)
[strrev | Reverse a string, returns string]
strrev(|string string)
[strripos | Find position of last occurrence of a case-insensitive string in a string, returns int]
strripos(|string haystack, string needle)
[strrpos | Find position of last occurrence of a char in a string, returns int]
strrpos(|string haystack, string needle)
[strspn | Find length of initial segment matching mask, returns int]
strspn(|string str1, string str2)
[strstr | Find first occurrence of a string, returns string]
strstr(|string haystack, string needle)
[strtok | Tokenize string, returns string]
strtok(|string arg1, string arg2)
[strtolower | Make a string lowercase, returns string]
strtolower(|string str)
[strtoupper | Make a string uppercase, returns string]
strtoupper(|string string)
[strtr | Translate certain characters, returns string]
strtr(|string str, string from, string to)
[substr_compare | Binary safe optionally case insensitive comparison of 2 strings from an offset, up to length characters, returns int]
substr_compare(|string main_str, string str, int offset, [int length], [bool case_sensitivity])
[substr_count | Count the number of substring occurrences, returns int]
substr_count(|string haystack, string needle)
[substr_replace | Replace text within a portion of a string, returns string]
substr_replace(|string string, string replacement, int start, [int length])
[substr | Return part of a string, returns string]
substr(|string string, int start, [int length])
[trim | Strip whitespace from the beginning and end of a string, returns string]
trim(|string str, [string charlist])
[ucfirst | Make a string's first character uppercase, returns string]
ucfirst(|string str)
[ucwords | Uppercase the first character of each word in a string, returns string]
ucwords(|string str)
[vprintf | Output a formatted string, returns void]
vprintf(|string format, array args)
[vsprintf | Return a formatted string, returns string]
vsprintf(|string format, array args)
[wordwrap | Wraps a string to a given number of characters using a string break character., returns string]
wordwrap(|string str, [int width], [string break], [boolean cut])
; -----------------------------------------------------------------------------
; Sybase - Sybase functions
; -----------------------------------------------------------------------------
[sybase_affected_rows | Gets number of affected rows in last query, returns int]
sybase_affected_rows(|[resource link_identifier])
[sybase_close | Closes a Sybase connection, returns bool]
sybase_close(|[resource link_identifier])
[sybase_connect | Opens a Sybase server connection, returns resource]
sybase_connect(|[string servername], [string username], [string password], [string charset], [string appname])
[sybase_data_seek | Moves internal row pointer, returns bool]
sybase_data_seek(|resource result_identifier, int row_number)
[sybase_deadlock_retry_count | Sets the deadlock retry count, returns void]
sybase_deadlock_retry_count(|int retry_count)
[sybase_fetch_array | Fetch row as array, returns array]
sybase_fetch_array(|resource result)
[sybase_fetch_assoc | Fetch a result row as an associative array, returns array]
sybase_fetch_assoc(|resource result)
[sybase_fetch_field | Get field information from a result, returns object]
sybase_fetch_field(|resource result, [int field_offset])
[sybase_fetch_object | Fetch a row as an object, returns object]
sybase_fetch_object(|resource result, [mixed object])
[sybase_fetch_row | Get a result row as an enumerated array, returns array]
sybase_fetch_row(|resource result)
[sybase_field_seek | Sets field offset, returns bool]
sybase_field_seek(|resource result, int field_offset)
[sybase_free_result | Frees result memory, returns bool]
sybase_free_result(|resource result)
[sybase_get_last_message | Returns the last message from the server, returns string]
sybase_get_last_message()|
[sybase_min_client_severity | Sets minimum client severity, returns void]
sybase_min_client_severity(|int severity)
[sybase_min_error_severity | Sets minimum error severity, returns void]
sybase_min_error_severity(|int severity)
[sybase_min_message_severity | Sets minimum message severity, returns void]
sybase_min_message_severity(|int severity)
[sybase_min_server_severity | Sets minimum server severity, returns void]
sybase_min_server_severity(|int severity)
[sybase_num_fields | Gets the number of fields in a result set, returns int]
sybase_num_fields(|resource result)
[sybase_num_rows | Get number of rows in a result set, returns int]
sybase_num_rows(|resource result)
[sybase_pconnect | Open persistent Sybase connection, returns resource]
sybase_pconnect(|[string servername], [string username], [string password], [string charset], [string appname])
[sybase_query | Sends a Sybase query, returns resource]
sybase_query(|string query, resource link_identifier)
[sybase_result | Get result data, returns string]
sybase_result(|resource result, int row, mixed field)
[sybase_select_db | Selects a Sybase database, returns bool]
sybase_select_db(|string database_name, [resource link_identifier])
[sybase_set_message_handler | Sets the handler called when a server message is raised, returns bool]
sybase_set_message_handler(|callback handler)
[sybase_unbuffered_query | Send a Sybase query and do not block, returns resource]
sybase_unbuffered_query(|string query, resource link_identifier)
; -----------------------------------------------------------------------------
; tidy - tidy Functions
; -----------------------------------------------------------------------------
[tidy_access_count | Returns the Number of Tidy accessibility warnings encountered for specified document., returns int]
tidy_access_count()|
[tidy_clean_repair | Execute configured cleanup and repair operations on parsed markup, returns bool]
tidy_clean_repair()|
[tidy_config_count | Returns the Number of Tidy configuration errors encountered for specified document., returns int]
tidy_config_count()|
[tidy_diagnose | Run configured diagnostics on parsed and repaired markup., returns bool]
tidy_diagnose()|
[tidy_error_count | Returns the Number of Tidy errors encountered for specified document., returns int]
tidy_error_count()|
[tidy_get_body | Returns a TidyNode Object starting from the >BODY< tag of the tidy parse tree, returns TidyNode]
tidy_get_body(|resource tidy)
[tidy_get_config | Get current Tidy configuarion, returns array]
tidy_get_config()|
[tidy_get_error_buffer | Return warnings and errors which occured parsing the specified document, returns string]
tidy_get_error_buffer(|[bool detailed])
[tidy_get_head | Returns a TidyNode Object starting from the >HEAD< tag of the tidy parse tree, returns TidyNode]
tidy_get_head()|
[tidy_get_html_ver | Get the Detected HTML version for the specified document., returns int]
tidy_get_html_ver()|
[tidy_get_html | Returns a TidyNode Object starting from the >HTML< tag of the tidy parse tree, returns TidyNode]
tidy_get_html()|
[tidy_get_output | Return a string representing the parsed tidy markup, returns string]
tidy_get_output()|
[tidy_get_release | Get release date (version) for Tidy library, returns string]
tidy_get_release()|
[tidy_get_root | Returns a TidyNode Object representing the root of the tidy parse tree, returns TidyNode]
tidy_get_root()|
[tidy_get_status | Get status of specfied document., returns int]
tidy_get_status()|
[tidy_getopt | Returns the value of the specified configuration option for the tidy document., returns mixed]
tidy_getopt(|string option)
[tidy_is_xhtml | Indicates if the document is a generic (non HTML/XHTML) XML document., returns bool]
tidy_is_xhtml()|
[tidy_load_config | Load an ASCII Tidy configuration file with the specified encoding, returns void]
tidy_load_config(|string filename, string encoding)
[tidy_parse_file | Parse markup in file or URI, returns bool]
tidy_parse_file(|string file, [bool use_include_path])
[tidy_parse_string | Parse a document stored in a string, returns bool]
tidy_parse_string(|string input)
[tidy_repair_file | Repair a file using an optionally provided configuration file, returns bool]
tidy_repair_file(|string filename, [string config_file], [bool use_include_path])
[tidy_repair_string | Repair a string using an optionally provided configuration file, returns bool]
tidy_repair_string(|string data, [string config_file])
[tidy_reset_config | Restore Tidy configuration to default values, returns string]
tidy_reset_config()|
[tidy_save_config | Save current settings to named file. Only non-default values are written., returns bool]
tidy_save_config(|string filename)
[tidy_set_encoding | Set the input/output character encoding for parsing markup. Values include: ascii, latin1, raw, utf8, iso2022, mac, win1252, utf16le, utf16be, utf16, big5 and shiftjis., returns bool]
tidy_set_encoding(|string encoding)
[tidy_setopt | Updates the configuration settings for the specified tidy document., returns bool]
tidy_setopt(|string option, mixed newvalue)
[tidy_warning_count | Returns the Number of Tidy warnings encountered for specified document., returns int]
tidy_warning_count()|
; -----------------------------------------------------------------------------
; Tokenizer - Tokenizer functions
; -----------------------------------------------------------------------------
[token_get_all | Split given source into PHP tokens, returns array]
token_get_all(|string source)
[token_name | Get the symbolic name of a given PHP token, returns string]
token_name(|int token)
; -----------------------------------------------------------------------------
; URLs - URL Functions
; -----------------------------------------------------------------------------
[base64_decode | Decodes data encoded with MIME base64, returns string]
base64_decode(|string encoded_data)
[base64_encode | Encodes data with MIME base64, returns string]
base64_encode(|string data)
[get_meta_tags | Extracts all meta tag content attributes from a file and returns an array, returns array]
get_meta_tags(|string filename, [int use_include_path])
[http_build_query | Generate url-encoded query string, returns string]
http_build_query(|array formdata, [string numeric_prefix])
[parse_url | Parse a URL and return its components, returns array]
parse_url(|string url)
[rawurldecode | Decode URL-encoded strings, returns string]
rawurldecode(|string str)
[rawurlencode | URL-encode according to RFC 1738, returns string]
rawurlencode(|string str)
[urldecode | Decodes URL-encoded string, returns string]
urldecode(|string str)
[urlencode | URL-encodes string, returns string]
urlencode(|string str)
; -----------------------------------------------------------------------------
; Variables - Variable Functions
; -----------------------------------------------------------------------------
[doubleval | Alias of floatval]
doubleval(|)
[empty | Determine whether a variable is empty, returns bool]
empty(|mixed var)
[floatval | Get float value of a variable, returns float]
floatval(|mixed var)
[get_defined_vars | Returns an array of all defined variables, returns array]
get_defined_vars()|
[get_resource_type | Returns the resource type, returns string]
get_resource_type(|resource handle)
[gettype | Get the type of a variable, returns string]
gettype(|mixed var)
[import_request_variables | Import GET/POST/Cookie variables into the global scope, returns bool]
import_request_variables(|string types, [string prefix])
[intval | Get integer value of a variable, returns int]
intval(|mixed var, [int base])
[is_array | Finds whether a variable is an array, returns bool]
is_array(|mixed var)
[is_bool | Finds out whether a variable is a boolean, returns bool]
is_bool(|mixed var)
[is_callable | Verify that the contents of a variable can be called as a function, returns bool]
is_callable(|mixed var, [bool syntax_only], [string callable_name])
[is_double | Alias of is_float]
is_double(|)
[is_float | Finds whether a variable is a float, returns bool]
is_float(|mixed var)
[is_int | Find whether a variable is an integer, returns bool]
is_int(|mixed var)
[is_integer | Alias of is_int]
is_integer(|)
[is_long | Alias of is_int]
is_long(|)
[is_null | Finds whether a variable is NULL, returns bool]
is_null(|mixed var)
[is_numeric | Finds whether a variable is a number or a numeric string, returns bool]
is_numeric(|mixed var)
[is_object | Finds whether a variable is an object, returns bool]
is_object(|mixed var)
[is_real | Alias of is_float]
is_real(|)
[is_resource | Finds whether a variable is a resource, returns bool]
is_resource(|mixed var)
[is_scalar | Finds whether a variable is a scalar, returns bool]
is_scalar(|mixed var)
[is_string | Finds whether a variable is a string, returns bool]
is_string(|mixed var)
[isset | Determine whether a variable is set, returns bool]
isset(|mixed var, [mixed var], [ ...])
[print_r | Prints human-readable information about a variable, returns bool]
print_r(|mixed expression, [bool return])
[serialize | Generates a storable representation of a value, returns string]
serialize(|mixed value)
[settype | Set the type of a variable, returns bool]
settype(|mixed var, string type)
[strval | Get string value of a variable, returns string]
strval(|mixed var)
[unserialize | Creates a PHP value from a stored representation, returns mixed]
unserialize(|string str, [string callback])
[unset | Unset a given variable, returns void]
unset(|mixed var, [mixed var], [ ...])
[var_dump | Dumps information about a variable, returns void]
var_dump(|mixed expression, [mixed expression], [ ...])
[var_export | Outputs or returns a string representation of a variable, returns mixed]
var_export(|mixed expression, [bool return])
; -----------------------------------------------------------------------------
; vpopmail - vpopmail functions
; -----------------------------------------------------------------------------
[vpopmail_add_alias_domain_ex | Add alias to an existing virtual domain, returns bool]
vpopmail_add_alias_domain_ex(|string olddomain, string newdomain)
[vpopmail_add_alias_domain | Add an alias for a virtual domain, returns bool]
vpopmail_add_alias_domain(|string domain, string aliasdomain)
[vpopmail_add_domain_ex | Add a new virtual domain, returns bool]
vpopmail_add_domain_ex(|string domain, string passwd, [string quota], [string bounce], [bool apop])
[vpopmail_add_domain | Add a new virtual domain, returns bool]
vpopmail_add_domain(|string domain, string dir, int uid, int gid)
[vpopmail_add_user | Add a new user to the specified virtual domain, returns bool]
vpopmail_add_user(|string user, string domain, string password, [string gecos], [bool apop])
[vpopmail_alias_add | insert a virtual alias, returns bool]
vpopmail_alias_add(|string user, string domain, string alias)
[vpopmail_alias_del_domain | deletes all virtual aliases of a domain, returns bool]
vpopmail_alias_del_domain(|string domain)
[vpopmail_alias_del | deletes all virtual aliases of a user, returns bool]
vpopmail_alias_del(|string user, string domain)
[vpopmail_alias_get_all | get all lines of an alias for a domain, returns array]
vpopmail_alias_get_all(|string domain)
[vpopmail_alias_get | get all lines of an alias for a domain, returns array]
vpopmail_alias_get(|string alias, string domain)
[vpopmail_auth_user | Attempt to validate a username/domain/password. Returns true/false, returns bool]
vpopmail_auth_user(|string user, string domain, string password, [string apop])
[vpopmail_del_domain_ex | Delete a virtual domain, returns bool]
vpopmail_del_domain_ex(|string domain)
[vpopmail_del_domain | Delete a virtual domain, returns bool]
vpopmail_del_domain(|string domain)
[vpopmail_del_user | Delete a user from a virtual domain, returns bool]
vpopmail_del_user(|string user, string domain)
[vpopmail_error | Get text message for last vpopmail error. Returns string, returns string]
vpopmail_error()|
[vpopmail_passwd | Change a virtual user's password, returns bool]
vpopmail_passwd(|string user, string domain, string password)
[vpopmail_set_user_quota | Sets a virtual user's quota, returns bool]
vpopmail_set_user_quota(|string user, string domain, string quota)
; -----------------------------------------------------------------------------
; W32api - W32api functions
; -----------------------------------------------------------------------------
[w32api_deftype | Defines a type for use with other w32api_functions, returns bool]
w32api_deftype(|string typename, string member1_type, string member1_name, [string ...], [string ...])
[w32api_init_dtype | Creates an instance of the data type typename and fills it with the values passed, returns resource]
w32api_init_dtype(|string typename, mixed value, [mixed ...])
[w32api_invoke_function | Invokes function funcname with the arguments passed after the function name, returns mixed]
w32api_invoke_function(|string funcname, mixed argument, [mixed ...])
[w32api_register_function | Registers function function_name from library with PHP, returns bool]
w32api_register_function(|string library, string function_name, string return_type)
[w32api_set_call_method | Sets the calling method used, returns void]
w32api_set_call_method(|int method)
; -----------------------------------------------------------------------------
; WDDX - WDDX Functions
; -----------------------------------------------------------------------------
[wddx_add_vars | Add variables to a WDDX packet with the specified ID, returns bool]
wddx_add_vars(|int packet_id, mixed name_var, [mixed ...])
[wddx_deserialize | Deserializes a WDDX packet, returns mixed]
wddx_deserialize(|string packet)
[wddx_packet_end | Ends a WDDX packet with the specified ID, returns string]
wddx_packet_end(|int packet_id)
[wddx_packet_start | Starts a new WDDX packet with structure inside it, returns int]
wddx_packet_start(|[string comment])
[wddx_serialize_value | Serialize a single value into a WDDX packet, returns string]
wddx_serialize_value(|mixed var, [string comment])
[wddx_serialize_vars | Serialize variables into a WDDX packet, returns string]
wddx_serialize_vars(|mixed var_name, [mixed ...])
; -----------------------------------------------------------------------------
; XML - XML parser functions
; -----------------------------------------------------------------------------
[utf8_decode | Converts a string with ISO-8859-1 characters encoded with UTF-8 to single-byte ISO-8859-1., returns string]
utf8_decode(|string data)
[utf8_encode | encodes an ISO-8859-1 string to UTF-8, returns string]
utf8_encode(|string data)
[xml_error_string | get XML parser error string, returns string]
xml_error_string(|int code)
[xml_get_current_byte_index | get current byte index for an XML parser, returns int]
xml_get_current_byte_index(|resource parser)
[xml_get_current_column_number | Get current column number for an XML parser, returns int]
xml_get_current_column_number(|resource parser)
[xml_get_current_line_number | get current line number for an XML parser, returns int]
xml_get_current_line_number(|resource parser)
[xml_get_error_code | get XML parser error code, returns int]
xml_get_error_code(|resource parser)
[xml_parse_into_struct | Parse XML data into an array structure, returns int]
xml_parse_into_struct(|resource parser, string data, array &values, [array &index])
[xml_parse | start parsing an XML document, returns bool]
xml_parse(|resource parser, string data, [bool is_final])
[xml_parser_create_ns | Create an XML parser with namespace support, returns resource]
xml_parser_create_ns(|[string encoding], [string separator])
[xml_parser_create | create an XML parser, returns resource]
xml_parser_create(|[string encoding])
[xml_parser_free | Free an XML parser, returns bool]
xml_parser_free(|resource parser)
[xml_parser_get_option | get options from an XML parser, returns mixed]
xml_parser_get_option(|resource parser, int option)
[xml_parser_set_option | set options in an XML parser, returns bool]
xml_parser_set_option(|resource parser, int option, mixed value)
[xml_set_character_data_handler | set up character data handler, returns bool]
xml_set_character_data_handler(|resource parser, callback handler)
[xml_set_default_handler | set up default handler, returns bool]
xml_set_default_handler(|resource parser, callback handler)
[xml_set_element_handler | set up start and end element handlers, returns bool]
xml_set_element_handler(|resource parser, callback start_element_handler, callback end_element_handler)
[xml_set_end_namespace_decl_handler | Set up character data handler, returns bool]
xml_set_end_namespace_decl_handler(|resource pind, callback handler)
[xml_set_external_entity_ref_handler | set up external entity reference handler, returns bool]
xml_set_external_entity_ref_handler(|resource parser, callback handler)
[xml_set_notation_decl_handler | set up notation declaration handler, returns bool]
xml_set_notation_decl_handler(|resource parser, callback handler)
[xml_set_object | Use XML Parser within an object, returns void]
xml_set_object(|resource parser, object object)
[xml_set_processing_instruction_handler | Set up processing instruction (PI) handler, returns bool]
xml_set_processing_instruction_handler(|resource parser, callback handler)
[xml_set_start_namespace_decl_handler | Set up character data handler, returns bool]
xml_set_start_namespace_decl_handler(|resource pind, callback hdl)
[xml_set_unparsed_entity_decl_handler | Set up unparsed entity declaration handler, returns bool]
xml_set_unparsed_entity_decl_handler(|resource parser, callback handler)
; -----------------------------------------------------------------------------
; XML-RPC - XML-RPC functions
; -----------------------------------------------------------------------------
[xmlrpc_decode_request | Decodes XML into native PHP types, returns array]
xmlrpc_decode_request(|string xml, string &method, [string encoding])
[xmlrpc_decode | Decodes XML into native PHP types, returns array]
xmlrpc_decode(|string xml, [string encoding])
[xmlrpc_encode_request | Generates XML for a method request, returns string]
xmlrpc_encode_request(|string method, mixed params)
[xmlrpc_encode | Generates XML for a PHP value, returns string]
xmlrpc_encode(|mixed value)
[xmlrpc_get_type | Gets xmlrpc type for a PHP value. Especially useful for base64 and datetime strings, returns string]
xmlrpc_get_type(|mixed value)
[xmlrpc_parse_method_descriptions | Decodes XML into a list of method descriptions, returns array]
xmlrpc_parse_method_descriptions(|string xml)
[xmlrpc_server_add_introspection_data | Adds introspection documentation, returns int]
xmlrpc_server_add_introspection_data(|resource server, array desc)
[xmlrpc_server_call_method | Parses XML requests and call methods, returns mixed]
xmlrpc_server_call_method(|resource server, string xml, mixed user_data, [array output_options])
[xmlrpc_server_create | Creates an xmlrpc server, returns resource]
xmlrpc_server_create()|
[xmlrpc_server_destroy | Destroys server resources, returns int]
xmlrpc_server_destroy(|resource server)
[xmlrpc_server_register_introspection_callback | Register a PHP function to generate documentation, returns bool]
xmlrpc_server_register_introspection_callback(|resource server, string function)
[xmlrpc_server_register_method | Register a PHP function to resource method matching method_name, returns bool]
xmlrpc_server_register_method(|resource server, string method_name, string function)
[xmlrpc_set_type | Sets xmlrpc type, base64 or datetime, for a PHP string value, returns bool]
xmlrpc_set_type(|string value, string type)
; -----------------------------------------------------------------------------
; XSLT - XSLT functions
; -----------------------------------------------------------------------------
[xslt_create | Create a new XSLT processor, returns resource]
xslt_create()|
[xslt_errno | Returns an error number, returns int]
xslt_errno(|resource xh)
[xslt_error | Returns an error string, returns mixed]
xslt_error(|resource xh)
[xslt_free | Free XSLT processor, returns void]
xslt_free(|resource xh)
[xslt_process | Perform an XSLT transformation, returns mixed]
xslt_process(|resource xh, string xmlcontainer, string xslcontainer, [string resultcontainer], [array arguments], [array parameters])
[xslt_set_base | Set the base URI for all XSLT transformations, returns void]
xslt_set_base(|resource xh, string uri)
[xslt_set_encoding | Set the encoding for the parsing of XML documents, returns void]
xslt_set_encoding(|resource xh, string encoding)
[xslt_set_error_handler | Set an error handler for a XSLT processor, returns void]
xslt_set_error_handler(|resource xh, mixed handler)
[xslt_set_log | Set the log file to write log messages to, returns void]
xslt_set_log(|resource xh, mixed log)
[xslt_set_sax_handler | Set SAX handlers for a XSLT processor, returns void]
xslt_set_sax_handler(|resource xh, array handlers)
[xslt_set_sax_handlers | Set the SAX handlers to be called when the XML document gets processed, returns void]
xslt_set_sax_handlers(|resource processor, array handlers)
[xslt_set_scheme_handler | Set Scheme handlers for a XSLT processor, returns void]
xslt_set_scheme_handler(|resource xh, array handlers)
[xslt_set_scheme_handlers | Set the scheme handlers for the XSLT processor, returns void]
xslt_set_scheme_handlers(|resource processor, array handlers)
; -----------------------------------------------------------------------------
; YAZ - YAZ functions
; -----------------------------------------------------------------------------
[yaz_addinfo | Returns additional error information, returns string]
yaz_addinfo(|resource id)
[yaz_ccl_conf | Configure CCL parser, returns int]
yaz_ccl_conf(|resource id, array config)
[yaz_ccl_parse | Invoke CCL Parser, returns bool]
yaz_ccl_parse(|resource id, string query, array & result)
[yaz_close | Close YAZ connection, returns bool]
yaz_close(|resource id)
[yaz_connect | Prepares for a connection to a Z39.50 target (server)., returns resource]
yaz_connect(|string zurl, [mixed options])
[yaz_database | Specifies the databases within a session, returns bool]
yaz_database(|resource id, string databases)
[yaz_element | Specifies Element-Set Name for retrieval, returns bool]
yaz_element(|resource id, string elementset)
[yaz_errno | Returns error number, returns int]
yaz_errno(|resource id)
[yaz_error | Returns error description, returns string]
yaz_error(|resource id)
[yaz_get_option | Returns value of option for connection, returns string]
yaz_get_option(|resource id, string name)
[yaz_hits | Returns number of hits for last search, returns int]
yaz_hits(|resource id)
[yaz_itemorder | Prepares for Z39.50 Item Order with an ILL-Request package, returns int]
yaz_itemorder(|resource id, array args)
[yaz_present | Prepares for retrieval (Z39.50 present)., returns bool]
yaz_present(|resource id)
[yaz_range | Specifies the maximum number of records to retrieve, returns bool]
yaz_range(|resource id, int start, int number)
[yaz_record | Returns a record, returns string]
yaz_record(|resource id, int pos, string type)
[yaz_scan_result | Returns Scan Response result, returns array]
yaz_scan_result(|resource id, [array & result])
[yaz_scan | Prepares for a scan, returns int]
yaz_scan(|resource id, string type, string startterm, [array flags])
[yaz_schema | Specifies schema for retrieval., returns int]
yaz_schema(|resource id, string schema)
[yaz_search | Prepares for a search, returns int]
yaz_search(|resource id, string type, string query)
[yaz_set_option | Sets one or more options for connection, returns string]
yaz_set_option(|resource id, string name, string value)
[yaz_sort | Sets sorting criteria, returns int]
yaz_sort(|resource id, string criteria)
[yaz_syntax | Specifies the preferred record syntax for retrieval., returns int]
yaz_syntax(|resource id, string syntax)
[yaz_wait | Wait for Z39.50 requests to complete, returns int]
yaz_wait(|[array options])
; -----------------------------------------------------------------------------
; YP/NIS - YP/NIS Functions
; -----------------------------------------------------------------------------
[yp_all | Traverse the map and call a function on each entry, returns void]
yp_all(|string domain, string map, string callback)
[yp_cat | Return an array containing the entire map, returns array]
yp_cat(|string domain, string map)
[yp_err_string | Returns the error string associated with the given error code, returns string]
yp_err_string(|int errorcode)
[yp_errno | Returns the error code of the previous operation, returns int]
yp_errno()|
[yp_first | Returns the first key-value pair from the named map, returns array]
yp_first(|string domain, string map)
[yp_get_default_domain | Fetches the machine's default NIS domain, returns int]
yp_get_default_domain()|
[yp_master | Returns the machine name of the master NIS server for a map, returns string]
yp_master(|string domain, string map)
[yp_match | Returns the matched line, returns string]
yp_match(|string domain, string map, string key)
[yp_next | Returns the next key-value pair in the named map., returns array]
yp_next(|string domain, string map, string key)
[yp_order | Returns the order number for a map, returns int]
yp_order(|string domain, string map)
; -----------------------------------------------------------------------------
; Zip - Zip File Functions (Read Only Access)
; -----------------------------------------------------------------------------
[zip_close | Close a Zip File Archive, returns void]
zip_close(|resource zip)
[zip_entry_close | Close a Directory Entry, returns void]
zip_entry_close(|resource zip_entry)
[zip_entry_compressedsize | Retrieve the Compressed Size of a Directory Entry, returns int]
zip_entry_compressedsize(|resource zip_entry)
[zip_entry_compressionmethod | Retrieve the Compression Method of a Directory Entry, returns string]
zip_entry_compressionmethod(|resource zip_entry)
[zip_entry_filesize | Retrieve the Actual File Size of a Directory Entry, returns int]
zip_entry_filesize(|resource zip_entry)
[zip_entry_name | Retrieve the Name of a Directory Entry, returns string]
zip_entry_name(|resource zip_entry)
[zip_entry_open | Open a Directory Entry for Reading, returns bool]
zip_entry_open(|resource zip, resource zip_entry, [string mode])
[zip_entry_read | Read From an Open Directory Entry, returns string]
zip_entry_read(|resource zip_entry, [int length])
[zip_open | Open a Zip File Archive, returns resource]
zip_open(|string filename)
[zip_read | Read Next Entry in a Zip File Archive, returns resource]
zip_read(|resource zip)
; -----------------------------------------------------------------------------
; Zlib - Zlib Compression Functions
; -----------------------------------------------------------------------------
[gzclose | Close an open gz-file pointer, returns int]
gzclose(|resource zp)
[gzcompress | Compress a string, returns string]
gzcompress(|string data, [int level])
[gzdeflate | Deflate a string, returns string]
gzdeflate(|string data, [int level])
[gzencode | Create a gzip compressed string, returns string]
gzencode(|string data, [int level], [int encoding_mode])
[gzeof | Test for end-of-file on a gz-file pointer, returns int]
gzeof(|resource zp)
[gzfile | Read entire gz-file into an array, returns array]
gzfile(|string filename, [int use_include_path])
[gzgetc | Get character from gz-file pointer, returns string]
gzgetc(|resource zp)
[gzgets | Get line from file pointer, returns string]
gzgets(|resource zp, int length)
[gzgetss | Get line from gz-file pointer and strip HTML tags, returns string]
gzgetss(|resource zp, int length, [string allowable_tags])
[gzinflate | Inflate a deflated string, returns string]
gzinflate(|string data, [int length])
[gzopen | Open gz-file, returns resource]
gzopen(|string filename, string mode, [int use_include_path])
[gzpassthru | Output all remaining data on a gz-file pointer, returns int]
gzpassthru(|resource zp)
[gzputs | Alias for gzwrite]
gzputs(|)
[gzread | Binary-safe gz-file read, returns string]
gzread(|resource zp, int length)
[gzrewind | Rewind the position of a gz-file pointer, returns int]
gzrewind(|resource zp)
[gzseek | Seek on a gz-file pointer, returns int]
gzseek(|resource zp, int offset)
[gztell | Tell gz-file pointer read/write position, returns int]
gztell(|resource zp)
[gzuncompress | Uncompress a deflated string, returns string]
gzuncompress(|string data, [int length])
[gzwrite | Binary-safe gz-file write, returns int]
gzwrite(|resource zp, string string, [int length])
[readgzfile | Output a gz-file, returns int]
readgzfile(|string filename, [int use_include_path])
[zlib_get_coding_type | Returns the coding type used for output compression, returns string]
zlib_get_coding_type()|
;
;
; -----------------------------------------------------------------------------
; Tree content
; -----------------------------------------------------------------------------
[Tree content]
Apache - Apache-specific Functions
 apache_child_terminate
 apache_get_version
 apache_lookup_uri
 apache_note
 apache_request_headers
 apache_response_headers
 apache_setenv
 ascii2ebcdic
 ebcdic2ascii
 getallheaders
 virtual
Arrays - Array Functions
 array_change_key_case
 array_chunk
 array_combine
 array_count_values
 array_diff_assoc
 array_diff_uassoc
 array_diff
 array_fill
 array_filter
 array_flip
 array_intersect_assoc
 array_intersect
 array_key_exists
 array_keys
 array_map
 array_merge_recursive
 array_merge
 array_multisort
 array_pad
 array_pop
 array_push
 array_rand
 array_reduce
 array_reverse
 array_search
 array_shift
 array_slice
 array_splice
 array_sum
 array_udiff_assoc
 array_udiff_uassoc
 array_udiff
 array_unique
 array_unshift
 array_values
 array_walk
 array
 arsort
 asort
 compact
 count
 current
 each
 end
 extract
 in_array
 key
 krsort
 ksort
 list
 natcasesort
 natsort
 next
 pos
 prev
 range
 reset
 rsort
 shuffle
 sizeof
 sort
 uasort
 uksort
 usort
Aspell - Aspell functions [deprecated]
 aspell_check_raw
 aspell_check
 aspell_new
 aspell_suggest
BC math - BCMath Arbitrary Precision Mathematics Functions
 bcadd
 bccomp
 bcdiv
 bcmod
 bcmul
 bcpow
 bcpowmod
 bcscale
 bcsqrt
 bcsub
Bzip2 - Bzip2 Compression Functions
 bzclose
 bzcompress
 bzdecompress
 bzerrno
 bzerror
 bzerrstr
 bzflush
 bzopen
 bzread
 bzwrite
Calendar - Calendar functions
 cal_days_in_month
 cal_from_jd
 cal_info
 cal_to_jd
 easter_date
 easter_days
 FrenchToJD
 GregorianToJD
 JDDayOfWeek
 JDMonthName
 JDToFrench
 JDToGregorian
 jdtojewish
 JDToJulian
 jdtounix
 JewishToJD
 JulianToJD
 unixtojd
CCVS - CCVS API Functions
 ccvs_add
 ccvs_auth
 ccvs_command
 ccvs_count
 ccvs_delete
 ccvs_done
 ccvs_init
 ccvs_lookup
 ccvs_new
 ccvs_report
 ccvs_return
 ccvs_reverse
 ccvs_sale
 ccvs_status
 ccvs_textvalue
 ccvs_void
COM - COM support functions for Windows
 COM
 VARIANT
 com_addref
 com_get
 com_invoke
 com_isenum
 com_load_typelib
 com_load
 com_propget
 com_propput
 com_propset
 com_release
 com_set
Classes/Objects - Class/Object Functions
 call_user_method_array
 call_user_method
 class_exists
 get_class_methods
 get_class_vars
 get_class
 get_declared_classes
 get_object_vars
 get_parent_class
 is_a
 is_subclass_of
 method_exists
ClibPDF - ClibPDF functions
 cpdf_add_annotation
 cpdf_add_outline
 cpdf_arc
 cpdf_begin_text
 cpdf_circle
 cpdf_clip
 cpdf_close
 cpdf_closepath_fill_stroke
 cpdf_closepath_stroke
 cpdf_closepath
 cpdf_continue_text
 cpdf_curveto
 cpdf_end_text
 cpdf_fill_stroke
 cpdf_fill
 cpdf_finalize_page
 cpdf_finalize
 cpdf_global_set_document_limits
 cpdf_import_jpeg
 cpdf_lineto
 cpdf_moveto
 cpdf_newpath
 cpdf_open
 cpdf_output_buffer
 cpdf_page_init
 cpdf_place_inline_image
 cpdf_rect
 cpdf_restore
 cpdf_rlineto
 cpdf_rmoveto
 cpdf_rotate_text
 cpdf_rotate
 cpdf_save_to_file
 cpdf_save
 cpdf_scale
 cpdf_set_action_url
 cpdf_set_char_spacing
 cpdf_set_creator
 cpdf_set_current_page
 cpdf_set_font_directories
 cpdf_set_font_map_file
 cpdf_set_font
 cpdf_set_horiz_scaling
 cpdf_set_keywords
 cpdf_set_leading
 cpdf_set_page_animation
 cpdf_set_subject
 cpdf_set_text_matrix
 cpdf_set_text_pos
 cpdf_set_text_rendering
 cpdf_set_text_rise
 cpdf_set_title
 cpdf_set_viewer_preferences
 cpdf_set_word_spacing
 cpdf_setdash
 cpdf_setflat
 cpdf_setgray_fill
 cpdf_setgray_stroke
 cpdf_setgray
 cpdf_setlinecap
 cpdf_setlinejoin
 cpdf_setlinewidth
 cpdf_setmiterlimit
 cpdf_setrgbcolor_fill
 cpdf_setrgbcolor_stroke
 cpdf_setrgbcolor
 cpdf_show_xy
 cpdf_show
 cpdf_stringwidth
 cpdf_stroke
 cpdf_text
 cpdf_translate
Crack - Crack functions
 crack_check
 crack_closedict
 crack_getlastmessage
 crack_opendict
CURL - CURL, Client URL Library Functions
 curl_close
 curl_errno
 curl_error
 curl_exec
 curl_getinfo
 curl_init
 curl_multi_add_handle
 curl_multi_close
 curl_multi_exec
 curl_multi_getcontent
 curl_multi_info_read
 curl_multi_init
 curl_multi_remove_handle
 curl_multi_select
 curl_setopt
 curl_version
Cybercash - Cybercash payment functions
 cybercash_base64_decode
 cybercash_base64_encode
 cybercash_decr
 cybercash_encr
Cyrus IMAP - Cyrus IMAP administration functions
 cyrus_authenticate
 cyrus_bind
 cyrus_close
 cyrus_connect
 cyrus_query
 cyrus_unbind
ctype - Character type functions
 ctype_alnum
 ctype_alpha
 ctype_cntrl
 ctype_digit
 ctype_graph
 ctype_lower
 ctype_print
 ctype_punct
 ctype_space
 ctype_upper
 ctype_xdigit
dba - Database (dbm-style) abstraction layer functions
 dba_close
 dba_delete
 dba_exists
 dba_fetch
 dba_firstkey
 dba_handlers
 dba_insert
 dba_key_split
 dba_list
 dba_nextkey
 dba_open
 dba_optimize
 dba_popen
 dba_replace
 dba_sync
Date/Time - Date and Time functions
 checkdate
 date
 getdate
 gettimeofday
 gmdate
 gmmktime
 gmstrftime
 localtime
 microtime
 mktime
 strftime
 strtotime
 time
dBase - dBase functions
 dbase_add_record
 dbase_close
 dbase_create
 dbase_delete_record
 dbase_get_header_info
 dbase_get_record_with_names
 dbase_get_record
 dbase_numfields
 dbase_numrecords
 dbase_open
 dbase_pack
 dbase_replace_record
DBM - DBM Functions [deprecated]
 dblist
 dbmclose
 dbmdelete
 dbmexists
 dbmfetch
 dbmfirstkey
 dbminsert
 dbmnextkey
 dbmopen
 dbmreplace
dbx - dbx functions
 dbx_close
 dbx_compare
 dbx_connect
 dbx_error
 dbx_escape_string
 dbx_fetch_row
 dbx_query
 dbx_sort
DB++ - DB++ Functions
 dbplus_add
 dbplus_aql
 dbplus_chdir
 dbplus_close
 dbplus_curr
 dbplus_errcode
 dbplus_errno
 dbplus_find
 dbplus_first
 dbplus_flush
 dbplus_freealllocks
 dbplus_freelock
 dbplus_freerlocks
 dbplus_getlock
 dbplus_getunique
 dbplus_info
 dbplus_last
 dbplus_lockrel
 dbplus_next
 dbplus_open
 dbplus_prev
 dbplus_rchperm
 dbplus_rcreate
 dbplus_rcrtexact
 dbplus_rcrtlike
 dbplus_resolve
 dbplus_restorepos
 dbplus_rkeys
 dbplus_ropen
 dbplus_rquery
 dbplus_rrename
 dbplus_rsecindex
 dbplus_runlink
 dbplus_rzap
 dbplus_savepos
 dbplus_setindex
 dbplus_setindexbynumber
 dbplus_sql
 dbplus_tcl
 dbplus_tremove
 dbplus_undo
 dbplus_undoprepare
 dbplus_unlockrel
 dbplus_unselect
 dbplus_update
 dbplus_xlockrel
 dbplus_xunlockrel
Direct IO - Direct IO functions
 dio_close
 dio_fcntl
 dio_open
 dio_read
 dio_seek
 dio_stat
 dio_tcsetattr
 dio_truncate
 dio_write
Directories - Directory functions
 chdir
 chroot
 dir
 closedir
 getcwd
 opendir
 readdir
 rewinddir
 scandir
DOM XML - DOM XML functions
 DomAttribute->name
 DomAttribute->specified
 DomAttribute->value
 DomDocument->add_root [deprecated]
 DomDocument->create_attribute
 DomDocument->create_cdata_section
 DomDocument->create_comment
 DomDocument->create_element_ns
 DomDocument->create_element
 DomDocument->create_entity_reference
 DomDocument->create_processing_instruction
 DomDocument->create_text_node
 DomDocument->doctype
 DomDocument->document_element
 DomDocument->dump_file
 DomDocument->dump_mem
 DomDocument->get_element_by_id
 DomDocument->get_elements_by_tagname
 DomDocument->html_dump_mem
 DomDocument->xinclude
 DomDocumentType->entities
 DomDocumentType->internal_subset
 DomDocumentType->name
 DomDocumentType->notations
 DomDocumentType->public_id
 DomDocumentType->system_id
 DomElement->get_attribute_node
 DomElement->get_attribute
 DomElement->get_elements_by_tagname
 DomElement->has_attribute
 DomElement->remove_attribute
 DomElement->set_attribute
 DomElement->tagname
 DomNode->add_namespace
 DomNode->append_child
 DomNode->append_sibling
 DomNode->attributes
 DomNode->child_nodes
 DomNode->clone_node
 DomNode->dump_node
 DomNode->first_child
 DomNode->get_content
 DomNode->has_attributes
 DomNode->has_child_nodes
 DomNode->insert_before
 DomNode->is_blank_node
 DomNode->last_child
 DomNode->next_sibling
 DomNode->node_name
 DomNode->node_type
 DomNode->node_value
 DomNode->owner_document
 DomNode->parent_node
 DomNode->prefix
 DomNode->previous_sibling
 DomNode->remove_child
 DomNode->replace_child
 DomNode->replace_node
 DomNode->set_content
 DomNode->set_name
 DomNode->set_namespace
 DomNode->unlink_node
 DomProcessingInstruction->data
 DomProcessingInstruction->target
 DomXsltStylesheet->process
 DomXsltStylesheet->result_dump_file
 DomXsltStylesheet->result_dump_mem
 domxml_new_doc
 domxml_open_file
 domxml_open_mem
 domxml_version
 domxml_xmltree
 domxml_xslt_stylesheet_doc
 domxml_xslt_stylesheet_file
 domxml_xslt_stylesheet
 xpath_eval_expression
 xpath_eval
 xpath_new_context
 xptr_eval
 xptr_new_context
.NET - .NET functions
 dotnet_load
Errors and Logging - Error Handling and Logging Functions
 debug_backtrace
 debug_print_backtrace
 error_log
 error_reporting
 restore_error_handler
 set_error_handler
 trigger_error
 user_error
fam - File alteration monitor functions
 fam_cancel_monitor
 fam_close
 fam_monitor_collection
 fam_monitor_directory
 fam_monitor_file
 fam_next_event
 fam_open
 fam_pending
 fam_resume_monitor
 fam_suspend_monitor
FrontBase - FrontBase Functions
 fbsql_affected_rows
 fbsql_autocommit
 fbsql_change_user
 fbsql_close
 fbsql_commit
 fbsql_connect
 fbsql_create_blob
 fbsql_create_clob
 fbsql_create_db
 fbsql_data_seek
 fbsql_database_password
 fbsql_database
 fbsql_db_query
 fbsql_db_status
 fbsql_drop_db
 fbsql_errno
 fbsql_error
 fbsql_fetch_array
 fbsql_fetch_assoc
 fbsql_fetch_field
 fbsql_fetch_lengths
 fbsql_fetch_object
 fbsql_fetch_row
 fbsql_field_flags
 fbsql_field_len
 fbsql_field_name
 fbsql_field_seek
 fbsql_field_table
 fbsql_field_type
 fbsql_free_result
 fbsql_get_autostart_info
 fbsql_hostname
 fbsql_insert_id
 fbsql_list_dbs
 fbsql_list_fields
 fbsql_list_tables
 fbsql_next_result
 fbsql_num_fields
 fbsql_num_rows
 fbsql_password
 fbsql_pconnect
 fbsql_query
 fbsql_read_blob
 fbsql_read_clob
 fbsql_result
 fbsql_rollback
 fbsql_select_db
 fbsql_set_lob_mode
 fbsql_set_transaction
 fbsql_start_db
 fbsql_stop_db
 fbsql_tablename
 fbsql_username
 fbsql_warnings
filePro - filePro functions
 filepro_fieldcount
 filepro_fieldname
 filepro_fieldtype
 filepro_fieldwidth
 filepro_retrieve
 filepro_rowcount
 filepro
Filesystem - Filesystem functions
 basename
 chgrp
 chmod
 chown
 clearstatcache
 copy
 delete
 dirname
 disk_free_space
 disk_total_space
 diskfreespace
 fclose
 feof
 fflush
 fgetc
 fgetcsv
 fgets
 fgetss
 file_exists
 file_get_contents
 file_put_contents
 file
 fileatime
 filectime
 filegroup
 fileinode
 filemtime
 fileowner
 fileperms
 filesize
 filetype
 flock
 fnmatch
 fopen
 fpassthru
 fputs
 fread
 fscanf
 fseek
 fstat
 ftell
 ftruncate
 fwrite
 glob
 is_dir
 is_executable
 is_file
 is_link
 is_readable
 is_uploaded_file
 is_writable
 is_writeable
 link
 linkinfo
 lstat
 mkdir
 move_uploaded_file
 parse_ini_file
 pathinfo
 pclose
 popen
 readfile
 readlink
 realpath
 rename
 rewind
 rmdir
 set_file_buffer
 stat
 symlink
 tempnam
 tmpfile
 touch
 umask
 unlink
FDF - Forms Data Format functions
 fdf_add_doc_javascript
 fdf_add_template
 fdf_close
 fdf_create
 fdf_enum_values
 fdf_errno
 fdf_error
 fdf_get_ap
 fdf_get_attachment
 fdf_get_encoding
 fdf_get_file
 fdf_get_flags
 fdf_get_opt
 fdf_get_status
 fdf_get_value
 fdf_get_version
 fdf_header
 fdf_next_field_name
 fdf_open_string
 fdf_open
 fdf_remove_item
 fdf_save_string
 fdf_save
 fdf_set_ap
 fdf_set_encoding
 fdf_set_file
 fdf_set_flags
 fdf_set_javascript_action
 fdf_set_opt
 fdf_set_status
 fdf_set_submit_form_action
 fdf_set_target_frame
 fdf_set_value
 fdf_set_version
FriBiDi - FriBiDi functions
 fribidi_log2vis
FTP - FTP functions
 ftp_alloc
 ftp_cdup
 ftp_chdir
 ftp_chmod
 ftp_close
 ftp_connect
 ftp_delete
 ftp_exec
 ftp_fget
 ftp_fput
 ftp_get_option
 ftp_get
 ftp_login
 ftp_mdtm
 ftp_mkdir
 ftp_nb_continue
 ftp_nb_fget
 ftp_nb_fput
 ftp_nb_get
 ftp_nb_put
 ftp_nlist
 ftp_pasv
 ftp_put
 ftp_pwd
 ftp_quit
 ftp_raw
 ftp_rawlist
 ftp_rename
 ftp_rmdir
 ftp_set_option
 ftp_site
 ftp_size
 ftp_ssl_connect
 ftp_systype
Function handling - Function Handling functions
 call_user_func_array
 call_user_func
 create_function
 func_get_arg
 func_get_args
 func_num_args
 function_exists
 get_defined_functions
 register_shutdown_function
 register_tick_function
 unregister_tick_function
gettext - Gettext
 bind_textdomain_codeset
 bindtextdomain
 dcgettext
 dcngettext
 dgettext
 dngettext
 gettext
 ngettext
 textdomain
GMP - GMP functions
 gmp_abs
 gmp_add
 gmp_and
 gmp_clrbit
 gmp_cmp
 gmp_com
 gmp_div_q
 gmp_div_qr
 gmp_div_r
 gmp_div
 gmp_divexact
 gmp_fact
 gmp_gcd
 gmp_gcdext
 gmp_hamdist
 gmp_init
 gmp_intval
 gmp_invert
 gmp_jacobi
 gmp_legendre
 gmp_mod
 gmp_mul
 gmp_neg
 gmp_or
 gmp_perfect_square
 gmp_popcount
 gmp_pow
 gmp_powm
 gmp_prob_prime
 gmp_random
 gmp_scan0
 gmp_scan1
 gmp_setbit
 gmp_sign
 gmp_sqrt
 gmp_sqrtrm
 gmp_strval
 gmp_sub
 gmp_xor
HTTP - HTTP functions
 header
 headers_list
 headers_sent
 setcookie
Hyperwave - Hyperwave functions
 hw_Array2Objrec
 hw_changeobject
 hw_Children
 hw_ChildrenObj
 hw_Close
 hw_Connect
 hw_connection_info
 hw_cp
 hw_Deleteobject
 hw_DocByAnchor
 hw_DocByAnchorObj
 hw_Document_Attributes
 hw_Document_BodyTag
 hw_Document_Content
 hw_Document_SetContent
 hw_Document_Size
 hw_dummy
 hw_EditText
 hw_Error
 hw_ErrorMsg
 hw_Free_Document
 hw_GetAnchors
 hw_GetAnchorsObj
 hw_GetAndLock
 hw_GetChildColl
 hw_GetChildCollObj
 hw_GetChildDocColl
 hw_GetChildDocCollObj
 hw_GetObject
 hw_GetObjectByQuery
 hw_GetObjectByQueryColl
 hw_GetObjectByQueryCollObj
 hw_GetObjectByQueryObj
 hw_GetParents
 hw_GetParentsObj
 hw_getrellink
 hw_GetRemote
 hw_getremotechildren
 hw_GetSrcByDestObj
 hw_GetText
 hw_getusername
 hw_Identify
 hw_InCollections
 hw_Info
 hw_InsColl
 hw_InsDoc
 hw_insertanchors
 hw_InsertDocument
 hw_InsertObject
 hw_mapid
 hw_Modifyobject
 hw_mv
 hw_New_Document
 hw_objrec2array
 hw_Output_Document
 hw_pConnect
 hw_PipeDocument
 hw_Root
 hw_setlinkroot
 hw_stat
 hw_Unlock
 hw_Who
Hyperwave API - Hyperwave API functions
 hw_api_attribute->key
 hw_api_attribute->langdepvalue
 hw_api_attribute->value
 hw_api_attribute->values
 hw_api_attribute
 hw_api->checkin
 hw_api->checkout
 hw_api->children
 hw_api_content->mimetype
 hw_api_content->read
 hw_api->content
 hw_api->copy
 hw_api->dbstat
 hw_api->dcstat
 hw_api->dstanchors
 hw_api->dstofsrcanchors
 hw_api_error->count
 hw_api_error->reason
 hw_api->find
 hw_api->ftstat
 hwapi_hgcsp
 hw_api->hwstat
 hw_api->identify
 hw_api->info
 hw_api->insert
 hw_api->insertanchor
 hw_api->insertcollection
 hw_api->insertdocument
 hw_api->link
 hw_api->lock
 hw_api->move
 hw_api_content
 hw_api_object->assign
 hw_api_object->attreditable
 hw_api_object->count
 hw_api_object->insert
 hw_api_object
 hw_api_object->remove
 hw_api_object->title
 hw_api_object->value
 hw_api->object
 hw_api->objectbyanchor
 hw_api->parents
 hw_api_reason->description
 hw_api_reason->type
 hw_api->remove
 hw_api->replace
 hw_api->setcommitedversion
 hw_api->srcanchors
 hw_api->srcsofdst
 hw_api->unlock
 hw_api->user
 hw_api->userlist
iconv - iconv functions
 iconv_get_encoding
 iconv_mime_decode
 iconv_mime_encode
 iconv_set_encoding
 iconv_strlen
 iconv_strpos
 iconv_strrpos
 iconv_substr
 iconv
 ob_iconv_handler
Image - Image functions
 exif_imagetype
 exif_read_data
 exif_thumbnail
 gd_info
 getimagesize
 image_type_to_mime_type
 image2wbmp
 imagealphablending
 imageantialias
 imagearc
 imagechar
 imagecharup
 imagecolorallocate
 imagecolorallocatealpha
 imagecolorat
 imagecolorclosest
 imagecolorclosestalpha
 imagecolorclosesthwb
 imagecolordeallocate
 imagecolorexact
 imagecolorexactalpha
 imagecolormatch
 imagecolorresolve
 imagecolorresolvealpha
 imagecolorset
 imagecolorsforindex
 imagecolorstotal
 imagecolortransparent
 imagecopy
 imagecopymerge
 imagecopymergegray
 imagecopyresampled
 imagecopyresized
 imagecreate
 imagecreatefromgd2
 imagecreatefromgd2part
 imagecreatefromgd
 imagecreatefromgif
 imagecreatefromjpeg
 imagecreatefrompng
 imagecreatefromstring
 imagecreatefromwbmp
 imagecreatefromxbm
 imagecreatefromxpm
 imagecreatetruecolor
 imagedashedline
 imagedestroy
 imageellipse
 imagefill
 imagefilledarc
 imagefilledellipse
 imagefilledpolygon
 imagefilledrectangle
 imagefilltoborder
 imagefontheight
 imagefontwidth
 imageftbbox
 imagefttext
 imagegammacorrect
 imagegd2
 imagegd
 imagegif
 imageinterlace
 imageistruecolor
 imagejpeg
 imageline
 imageloadfont
 imagepalettecopy
 imagepng
 imagepolygon
 imagepsbbox
 imagepscopyfont
 imagepsencodefont
 imagepsextendfont
 imagepsfreefont
 imagepsloadfont
 imagepsslantfont
 imagepstext
 imagerectangle
 imagerotate
 imagesavealpha
 imagesetbrush
 imagesetpixel
 imagesetstyle
 imagesetthickness
 imagesettile
 imagestring
 imagestringup
 imagesx
 imagesy
 imagetruecolortopalette
 imagettfbbox
 imagettftext
 imagetypes
 imagewbmp
 iptcembed
 iptcparse
 jpeg2wbmp
 png2wbmp
 read_exif_data
IMAP - IMAP, POP3 and NNTP functions
 imap_8bit
 imap_alerts
 imap_append
 imap_base64
 imap_binary
 imap_body
 imap_bodystruct
 imap_check
 imap_clearflag_full
 imap_close
 imap_createmailbox
 imap_delete
 imap_deletemailbox
 imap_errors
 imap_expunge
 imap_fetch_overview
 imap_fetchbody
 imap_fetchheader
 imap_fetchstructure
 imap_get_quota
 imap_get_quotaroot
 imap_getacl
 imap_getmailboxes
 imap_getsubscribed
 imap_header
 imap_headerinfo
 imap_headers
 imap_last_error
 imap_list
 imap_listmailbox
 imap_listscan
 imap_listsubscribed
 imap_lsub
 imap_mail_compose
 imap_mail_copy
 imap_mail_move
 imap_mail
 imap_mailboxmsginfo
 imap_mime_header_decode
 imap_msgno
 imap_num_msg
 imap_num_recent
 imap_open
 imap_ping
 imap_qprint
 imap_renamemailbox
 imap_reopen
 imap_rfc822_parse_adrlist
 imap_rfc822_parse_headers
 imap_rfc822_write_address
 imap_scanmailbox
 imap_search
 imap_set_quota
 imap_setacl
 imap_setflag_full
 imap_sort
 imap_status
 imap_subscribe
 imap_thread
 imap_timeout
 imap_uid
 imap_undelete
 imap_unsubscribe
 imap_utf7_decode
 imap_utf7_encode
 imap_utf8
Informix - Informix functions
 ifx_affected_rows
 ifx_blobinfile_mode
 ifx_byteasvarchar
 ifx_close
 ifx_connect
 ifx_copy_blob
 ifx_create_blob
 ifx_create_char
 ifx_do
 ifx_error
 ifx_errormsg
 ifx_fetch_row
 ifx_fieldproperties
 ifx_fieldtypes
 ifx_free_blob
 ifx_free_char
 ifx_free_result
 ifx_get_blob
 ifx_get_char
 ifx_getsqlca
 ifx_htmltbl_result
 ifx_nullformat
 ifx_num_fields
 ifx_num_rows
 ifx_pconnect
 ifx_prepare
 ifx_query
 ifx_textasvarchar
 ifx_update_blob
 ifx_update_char
 ifxus_close_slob
 ifxus_create_slob
 ifxus_free_slob
 ifxus_open_slob
 ifxus_read_slob
 ifxus_seek_slob
 ifxus_tell_slob
 ifxus_write_slob
InterBase - InterBase functions
 ibase_add_user
 ibase_affected_rows
 ibase_blob_add
 ibase_blob_cancel
 ibase_blob_close
 ibase_blob_create
 ibase_blob_echo
 ibase_blob_get
 ibase_blob_import
 ibase_blob_info
 ibase_blob_open
 ibase_close
 ibase_commit_ret
 ibase_commit
 ibase_connect
 ibase_delete_user
 ibase_drop_db
 ibase_errcode
 ibase_errmsg
 ibase_execute
 ibase_fetch_assoc
 ibase_fetch_object
 ibase_fetch_row
 ibase_field_info
 ibase_free_event_handler
 ibase_free_query
 ibase_free_result
 ibase_gen_id
 ibase_modify_user
 ibase_name_result
 ibase_num_fields
 ibase_num_params
 ibase_param_info
 ibase_pconnect
 ibase_prepare
 ibase_query
 ibase_rollback_ret
 ibase_rollback
 ibase_set_event_handler
 ibase_timefmt
 ibase_trans
 ibase_wait_event
Ingres II - Ingres II functions
 ingres_autocommit
 ingres_close
 ingres_commit
 ingres_connect
 ingres_fetch_array
 ingres_fetch_object
 ingres_fetch_row
 ingres_field_length
 ingres_field_name
 ingres_field_nullable
 ingres_field_precision
 ingres_field_scale
 ingres_field_type
 ingres_num_fields
 ingres_num_rows
 ingres_pconnect
 ingres_query
 ingres_rollback
IRC Gateway - IRC Gateway Functions
 ircg_channel_mode
 ircg_disconnect
 ircg_fetch_error_msg
 ircg_get_username
 ircg_html_encode
 ircg_ignore_add
 ircg_ignore_del
 ircg_is_conn_alive
 ircg_join
 ircg_kick
 ircg_lookup_format_messages
 ircg_msg
 ircg_nick
 ircg_nickname_escape
 ircg_nickname_unescape
 ircg_notice
 ircg_part
 ircg_pconnect
 ircg_register_format_messages
 ircg_set_current
 ircg_set_file
 ircg_set_on_die
 ircg_topic
 ircg_whois
Java - PHP / Java Integration
 java_last_exception_clear
 java_last_exception_get
LDAP - LDAP functions
 ldap_8859_to_t61
 ldap_add
 ldap_bind
 ldap_close
 ldap_compare
 ldap_connect
 ldap_count_entries
 ldap_delete
 ldap_dn2ufn
 ldap_err2str
 ldap_errno
 ldap_error
 ldap_explode_dn
 ldap_first_attribute
 ldap_first_entry
 ldap_first_reference
 ldap_free_result
 ldap_get_attributes
 ldap_get_dn
 ldap_get_entries
 ldap_get_option
 ldap_get_values_len
 ldap_get_values
 ldap_list
 ldap_mod_add
 ldap_mod_del
 ldap_mod_replace
 ldap_modify
 ldap_next_attribute
 ldap_next_entry
 ldap_next_reference
 ldap_parse_reference
 ldap_parse_result
 ldap_read
 ldap_rename
 ldap_search
 ldap_set_option
 ldap_set_rebind_proc
 ldap_sort
 ldap_start_tls
 ldap_t61_to_8859
 ldap_unbind
Mail - Mail functions
 ezmlm_hash
 mail
mailparse - mailparse functions
 mailparse_determine_best_xfer_encoding
 mailparse_msg_create
 mailparse_msg_extract_part_file
 mailparse_msg_extract_part
 mailparse_msg_free
 mailparse_msg_get_part_data
 mailparse_msg_get_part
 mailparse_msg_get_structure
 mailparse_msg_parse_file
 mailparse_msg_parse
 mailparse_rfc822_parse_addresses
 mailparse_stream_encode
 mailparse_uudecode_all
Math - Mathematical Functions
 abs
 acos
 acosh
 asin
 asinh
 atan2
 atan
 atanh
 base_convert
 bindec
 ceil
 cos
 cosh
 decbin
 dechex
 decoct
 deg2rad
 exp
 expm1
 floor
 fmod
 getrandmax
 hexdec
 hypot
 is_finite
 is_infinite
 is_nan
 lcg_value
 log10
 log1p
 log
 max
 min
 mt_getrandmax
 mt_rand
 mt_srand
 octdec
 pi
 pow
 rad2deg
 rand
 round
 sin
 sinh
 sqrt
 srand
 tan
 tanh
Multi-Byte String - Multi-Byte String Functions
 mb_convert_case
 mb_convert_encoding
 mb_convert_kana
 mb_convert_variables
 mb_decode_mimeheader
 mb_decode_numericentity
 mb_detect_encoding
 mb_detect_order
 mb_encode_mimeheader
 mb_encode_numericentity
 mb_ereg_match
 mb_ereg_replace
 mb_ereg_search_getpos
 mb_ereg_search_getregs
 mb_ereg_search_init
 mb_ereg_search_pos
 mb_ereg_search_regs
 mb_ereg_search_setpos
 mb_ereg_search
 mb_ereg
 mb_eregi_replace
 mb_eregi
 mb_get_info
 mb_http_input
 mb_http_output
 mb_internal_encoding
 mb_language
 mb_output_handler
 mb_parse_str
 mb_preferred_mime_name
 mb_regex_encoding
 mb_regex_set_options
 mb_send_mail
 mb_split
 mb_strcut
 mb_strimwidth
 mb_strlen
 mb_strpos
 mb_strrpos
 mb_strtolower
 mb_strtoupper
 mb_strwidth
 mb_substitute_character
 mb_substr_count
 mb_substr
MCAL - MCAL functions
 mcal_append_event
 mcal_close
 mcal_create_calendar
 mcal_date_compare
 mcal_date_valid
 mcal_day_of_week
 mcal_day_of_year
 mcal_days_in_month
 mcal_delete_calendar
 mcal_delete_event
 mcal_event_add_attribute
 mcal_event_init
 mcal_event_set_alarm
 mcal_event_set_category
 mcal_event_set_class
 mcal_event_set_description
 mcal_event_set_end
 mcal_event_set_recur_daily
 mcal_event_set_recur_monthly_mday
 mcal_event_set_recur_monthly_wday
 mcal_event_set_recur_none
 mcal_event_set_recur_weekly
 mcal_event_set_recur_yearly
 mcal_event_set_start
 mcal_event_set_title
 mcal_expunge
 mcal_fetch_current_stream_event
 mcal_fetch_event
 mcal_is_leap_year
 mcal_list_alarms
 mcal_list_events
 mcal_next_recurrence
 mcal_open
 mcal_popen
 mcal_rename_calendar
 mcal_reopen
 mcal_snooze
 mcal_store_event
 mcal_time_valid
 mcal_week_of_year
mcrypt - Mcrypt Encryption Functions
 mcrypt_cbc
 mcrypt_cfb
 mcrypt_create_iv
 mcrypt_decrypt
 mcrypt_ecb
 mcrypt_enc_get_algorithms_name
 mcrypt_enc_get_block_size
 mcrypt_enc_get_iv_size
 mcrypt_enc_get_key_size
 mcrypt_enc_get_modes_name
 mcrypt_enc_get_supported_key_sizes
 mcrypt_enc_is_block_algorithm_mode
 mcrypt_enc_is_block_algorithm
 mcrypt_enc_is_block_mode
 mcrypt_enc_self_test
 mcrypt_encrypt
 mcrypt_generic_deinit
 mcrypt_generic_end
 mcrypt_generic_init
 mcrypt_generic
 mcrypt_get_block_size
 mcrypt_get_cipher_name
 mcrypt_get_iv_size
 mcrypt_get_key_size
 mcrypt_list_algorithms
 mcrypt_list_modes
 mcrypt_module_close
 mcrypt_module_get_algo_block_size
 mcrypt_module_get_algo_key_size
 mcrypt_module_get_supported_key_sizes
 mcrypt_module_is_block_algorithm_mode
 mcrypt_module_is_block_algorithm
 mcrypt_module_is_block_mode
 mcrypt_module_open
 mcrypt_module_self_test
 mcrypt_ofb
 mdecrypt_generic
MCVE - MCVE Payment Functions
 mcve_adduser
 mcve_adduserarg
 mcve_bt
 mcve_checkstatus
 mcve_chkpwd
 mcve_chngpwd
 mcve_completeauthorizations
 mcve_connect
 mcve_connectionerror
 mcve_deleteresponse
 mcve_deletetrans
 mcve_deleteusersetup
 mcve_deluser
 mcve_destroyconn
 mcve_destroyengine
 mcve_disableuser
 mcve_edituser
 mcve_enableuser
 mcve_force
 mcve_getcell
 mcve_getcellbynum
 mcve_getcommadelimited
 mcve_getheader
 mcve_getuserarg
 mcve_getuserparam
 mcve_gft
 mcve_gl
 mcve_gut
 mcve_initconn
 mcve_initengine
 mcve_initusersetup
 mcve_iscommadelimited
 mcve_liststats
 mcve_listusers
 mcve_maxconntimeout
 mcve_monitor
 mcve_numcolumns
 mcve_numrows
 mcve_override
 mcve_parsecommadelimited
 mcve_ping
 mcve_preauth
 mcve_preauthcompletion
 mcve_qc
 mcve_responseparam
 mcve_return
 mcve_returncode
 mcve_returnstatus
 mcve_sale
 mcve_setblocking
 mcve_setdropfile
 mcve_setip
 mcve_setssl_files
 mcve_setssl
 mcve_settimeout
 mcve_settle
 mcve_text_avs
 mcve_text_code
 mcve_text_cv
 mcve_transactionauth
 mcve_transactionavs
 mcve_transactionbatch
 mcve_transactioncv
 mcve_transactionid
 mcve_transactionitem
 mcve_transactionssent
 mcve_transactiontext
 mcve_transinqueue
 mcve_transnew
 mcve_transparam
 mcve_transsend
 mcve_ub
 mcve_uwait
 mcve_verifyconnection
 mcve_verifysslcert
 mcve_void
mhash - Mhash Functions
 mhash_count
 mhash_get_block_size
 mhash_get_hash_name
 mhash_keygen_s2k
 mhash
Mimetype - Mimetype Functions
 mime_content_type
MS SQL Server - Microsoft SQL Server functions
 mssql_bind
 mssql_close
 mssql_connect
 mssql_data_seek
 mssql_execute
 mssql_fetch_array
 mssql_fetch_assoc
 mssql_fetch_batch
 mssql_fetch_field
 mssql_fetch_object
 mssql_fetch_row
 mssql_field_length
 mssql_field_name
 mssql_field_seek
 mssql_field_type
 mssql_free_result
 mssql_free_statement
 mssql_get_last_message
 mssql_guid_string
 mssql_init
 mssql_min_error_severity
 mssql_min_message_severity
 mssql_next_result
 mssql_num_fields
 mssql_num_rows
 mssql_pconnect
 mssql_query
 mssql_result
 mssql_rows_affected
 mssql_select_db
Ming (flash) - Ming functions for Flash
 ming_setcubicthreshold
 ming_setscale
 ming_useswfversion
 SWFAction
 SWFBitmap->getHeight
 SWFBitmap->getWidth
 SWFBitmap
 swfbutton_keypress
 SWFbutton->addAction
 SWFbutton->addShape
 SWFbutton->setAction
 SWFbutton->setdown
 SWFbutton->setHit
 SWFbutton->setOver
 SWFbutton->setUp
 SWFbutton
 SWFDisplayItem->addColor
 SWFDisplayItem->move
 SWFDisplayItem->moveTo
 SWFDisplayItem->multColor
 SWFDisplayItem->remove
 SWFDisplayItem->Rotate
 SWFDisplayItem->rotateTo
 SWFDisplayItem->scale
 SWFDisplayItem->scaleTo
 SWFDisplayItem->setDepth
 SWFDisplayItem->setName
 SWFDisplayItem->setRatio
 SWFDisplayItem->skewX
 SWFDisplayItem->skewXTo
 SWFDisplayItem->skewY
 SWFDisplayItem->skewYTo
 SWFDisplayItem
 SWFFill->moveTo
 SWFFill->rotateTo
 SWFFill->scaleTo
 SWFFill->skewXTo
 SWFFill->skewYTo
 SWFFill
 swffont->getwidth
 SWFFont
 SWFGradient->addEntry
 SWFGradient
 SWFMorph->getshape1
 SWFMorph->getshape2
 SWFMorph
 SWFMovie->add
 SWFMovie->nextframe
 SWFMovie->output
 swfmovie->remove
 SWFMovie->save
 SWFMovie->setbackground
 SWFMovie->setdimension
 SWFMovie->setframes
 SWFMovie->setrate
 SWFMovie->streammp3
 SWFMovie
 SWFShape->addFill
 SWFShape->drawCurve
 SWFShape->drawCurveTo
 SWFShape->drawLine
 SWFShape->drawLineTo
 SWFShape->movePen
 SWFShape->movePenTo
 SWFShape->setLeftFill
 SWFShape->setLine
 SWFShape->setRightFill
 SWFShape
 swfsprite->add
 SWFSprite->nextframe
 SWFSprite->remove
 SWFSprite->setframes
 SWFSprite
 SWFText->addString
 SWFText->getWidth
 SWFText->moveTo
 SWFText->setColor
 SWFText->setFont
 SWFText->setHeight
 SWFText->setSpacing
 SWFText
 SWFTextField->addstring
 SWFTextField->align
 SWFTextField->setbounds
 SWFTextField->setcolor
 SWFTextField->setFont
 SWFTextField->setHeight
 SWFTextField->setindentation
 SWFTextField->setLeftMargin
 SWFTextField->setLineSpacing
 SWFTextField->setMargins
 SWFTextField->setname
 SWFTextField->setrightMargin
 SWFTextField
Misc. - Miscellaneous functions
 connection_aborted
 connection_status
 connection_timeout
 constant
 define
 defined
 die
 eval
 exit
 get_browser
 highlight_file
 highlight_string
 ignore_user_abort
 pack
 show_source
 sleep
 uniqid
 unpack
 usleep
mnoGoSearch - mnoGoSearch Functions
 udm_add_search_limit
 udm_alloc_agent
 udm_api_version
 udm_cat_list
 udm_cat_path
 udm_check_charset
 udm_check_stored
 udm_clear_search_limits
 udm_close_stored
 udm_crc32
 udm_errno
 udm_error
 udm_find
 udm_free_agent
 udm_free_ispell_data
 udm_free_res
 udm_get_doc_count
 udm_get_res_field
 udm_get_res_param
 udm_load_ispell_data
 udm_open_stored
 udm_set_agent_param
mSQL - mSQL functions
 msql_affected_rows
 msql_close
 msql_connect
 msql_create_db
 msql_createdb
 msql_data_seek
 msql_dbname
 msql_drop_db
 msql_dropdb
 msql_error
 msql_fetch_array
 msql_fetch_field
 msql_fetch_object
 msql_fetch_row
 msql_field_seek
 msql_fieldflags
 msql_fieldlen
 msql_fieldname
 msql_fieldtable
 msql_fieldtype
 msql_free_result
 msql_freeresult
 msql_list_dbs
 msql_list_fields
 msql_list_tables
 msql_listdbs
 msql_listfields
 msql_listtables
 msql_num_fields
 msql_num_rows
 msql_numfields
 msql_numrows
 msql_pconnect
 msql_query
 msql_regcase
 msql_result
 msql_select_db
 msql_selectdb
 msql_tablename
 msql
MySQL - MySQL Functions
 mysql_affected_rows
 mysql_change_user
 mysql_client_encoding
 mysql_close
 mysql_connect
 mysql_create_db
 mysql_data_seek
 mysql_db_name
 mysql_db_query
 mysql_drop_db
 mysql_errno
 mysql_error
 mysql_escape_string
 mysql_fetch_array
 mysql_fetch_assoc
 mysql_fetch_field
 mysql_fetch_lengths
 mysql_fetch_object
 mysql_fetch_row
 mysql_field_flags
 mysql_field_len
 mysql_field_name
 mysql_field_seek
 mysql_field_table
 mysql_field_type
 mysql_free_result
 mysql_get_client_info
 mysql_get_host_info
 mysql_get_proto_info
 mysql_get_server_info
 mysql_info
 mysql_insert_id
 mysql_list_dbs
 mysql_list_fields
 mysql_list_processes
 mysql_list_tables
 mysql_num_fields
 mysql_num_rows
 mysql_pconnect
 mysql_ping
 mysql_query
 mysql_real_escape_string
 mysql_result
 mysql_select_db
 mysql_stat
 mysql_tablename
 mysql_thread_id
 mysql_unbuffered_query
mysqli - Improved MySQL Extension
 mysqli_affected_rows
 mysqli_autocommit
 mysqli_bind_param
 mysqli_bind_result
 mysqli_change_user
 mysqli_character_set_name
 mysqli_close
 mysqli_commit
 mysqli_connect
 mysqli_data_seek
 mysqli_debug
 mysqli_disable_reads_from_master
 mysqli_disable_rpl_parse
 mysqli_dump_debug_info
 mysqli_enable_reads_from_master
 mysqli_enable_rpl_parse
 mysqli_errno
 mysqli_error
 mysqli_execute
 mysqli_fetch_array
 mysqli_fetch_assoc
 mysqli_fetch_field_direct
 mysqli_fetch_field
 mysqli_fetch_fields
 mysqli_fetch_lengths
 mysqli_fetch_object
 mysqli_fetch_row
 mysqli_fetch
 mysqli_field_count
 mysqli_field_seek
 mysqli_field_tell
 mysqli_free_result
 mysqli_get_client_info
 mysqli_get_host_info
 mysqli_get_proto_info
 mysqli_get_server_info
 mysqli_get_server_version
 mysqli_info
 mysqli_init
 mysqli_insert_id
 mysqli_kill
 mysqli_master_query
 mysqli_num_fields
 mysqli_num_rows
 mysqli_options
 mysqli_param_count
 mysqli_ping
 mysqli_prepare_result
 mysqli_prepare
 mysqli_profiler
 mysqli_query
 mysqli_read_query_result
 mysqli_real_connect
 mysqli_real_escape_string
 mysqli_real_query
 mysqli_reload
 mysqli_rollback
 mysqli_rpl_parse_enabled
 mysqli_rpl_probe
 mysqli_rpl_query_type
 mysqli_select_db
 mysqli_send_long_data
 mysqli_send_query
 mysqli_slave_query
 mysqli_ssl_set
 mysqli_stat
 mysqli_stmt_affected_rows
 mysqli_stmt_close
 mysqli_stmt_errno
 mysqli_stmt_error
 mysqli_stmt_store_result
 mysqli_store_result
 mysqli_thread_id
 mysqli_thread_safe
 mysqli_use_result
 mysqli_warning_count
Msession - Mohawk Software session handler functions
 msession_connect
 msession_count
 msession_create
 msession_destroy
 msession_disconnect
 msession_find
 msession_get_array
 msession_get
 msession_getdata
 msession_inc
 msession_list
 msession_listvar
 msession_lock
 msession_plugin
 msession_randstr
 msession_set_array
 msession_set
 msession_setdata
 msession_timeout
 msession_uniq
 msession_unlock
muscat - muscat functions
 muscat_close
 muscat_get
 muscat_give
 muscat_setup_net
 muscat_setup
Network - Network Functions
 checkdnsrr
 closelog
 debugger_off
 debugger_on
 define_syslog_variables
 dns_check_record
 dns_get_mx
 dns_get_record
 fsockopen
 gethostbyaddr
 gethostbyname
 gethostbynamel
 getmxrr
 getprotobyname
 getprotobynumber
 getservbyname
 getservbyport
 ip2long
 long2ip
 openlog
 pfsockopen
 socket_get_status
 socket_set_blocking
 socket_set_timeout
 syslog
Ncurses - Ncurses terminal screen control functions
 ncurses_addch
 ncurses_addchnstr
 ncurses_addchstr
 ncurses_addnstr
 ncurses_addstr
 ncurses_assume_default_colors
 ncurses_attroff
 ncurses_attron
 ncurses_attrset
 ncurses_baudrate
 ncurses_beep
 ncurses_bkgd
 ncurses_bkgdset
 ncurses_border
 ncurses_bottom_panel
 ncurses_can_change_color
 ncurses_cbreak
 ncurses_clear
 ncurses_clrtobot
 ncurses_clrtoeol
 ncurses_color_content
 ncurses_color_set
 ncurses_curs_set
 ncurses_def_prog_mode
 ncurses_def_shell_mode
 ncurses_define_key
 ncurses_del_panel
 ncurses_delay_output
 ncurses_delch
 ncurses_deleteln
 ncurses_delwin
 ncurses_doupdate
 ncurses_echo
 ncurses_echochar
 ncurses_end
 ncurses_erase
 ncurses_erasechar
 ncurses_filter
 ncurses_flash
 ncurses_flushinp
 ncurses_getch
 ncurses_getmaxyx
 ncurses_getmouse
 ncurses_getyx
 ncurses_halfdelay
 ncurses_has_colors
 ncurses_has_ic
 ncurses_has_il
 ncurses_has_key
 ncurses_hide_panel
 ncurses_hline
 ncurses_inch
 ncurses_init_color
 ncurses_init_pair
 ncurses_init
 ncurses_insch
 ncurses_insdelln
 ncurses_insertln
 ncurses_insstr
 ncurses_instr
 ncurses_isendwin
 ncurses_keyok
 ncurses_keypad
 ncurses_killchar
 ncurses_longname
 ncurses_meta
 ncurses_mouse_trafo
 ncurses_mouseinterval
 ncurses_mousemask
 ncurses_move_panel
 ncurses_move
 ncurses_mvaddch
 ncurses_mvaddchnstr
 ncurses_mvaddchstr
 ncurses_mvaddnstr
 ncurses_mvaddstr
 ncurses_mvcur
 ncurses_mvdelch
 ncurses_mvgetch
 ncurses_mvhline
 ncurses_mvinch
 ncurses_mvvline
 ncurses_mvwaddstr
 ncurses_napms
 ncurses_new_panel
 ncurses_newpad
 ncurses_newwin
 ncurses_nl
 ncurses_nocbreak
 ncurses_noecho
 ncurses_nonl
 ncurses_noqiflush
 ncurses_noraw
 ncurses_pair_content
 ncurses_panel_above
 ncurses_panel_below
 ncurses_panel_window
 ncurses_pnoutrefresh
 ncurses_prefresh
 ncurses_putp
 ncurses_qiflush
 ncurses_raw
 ncurses_refresh
 ncurses_replace_panel
 ncurses_reset_prog_mode
 ncurses_reset_shell_mode
 ncurses_resetty
 ncurses_savetty
 ncurses_scr_dump
 ncurses_scr_init
 ncurses_scr_restore
 ncurses_scr_set
 ncurses_scrl
 ncurses_show_panel
 ncurses_slk_attr
 ncurses_slk_attroff
 ncurses_slk_attron
 ncurses_slk_attrset
 ncurses_slk_clear
 ncurses_slk_color
 ncurses_slk_init
 ncurses_slk_noutrefresh
 ncurses_slk_refresh
 ncurses_slk_restore
 ncurses_slk_set
 ncurses_slk_touch
 ncurses_standend
 ncurses_standout
 ncurses_start_color
 ncurses_termattrs
 ncurses_termname
 ncurses_timeout
 ncurses_top_panel
 ncurses_typeahead
 ncurses_ungetch
 ncurses_ungetmouse
 ncurses_update_panels
 ncurses_use_default_colors
 ncurses_use_env
 ncurses_use_extended_names
 ncurses_vidattr
 ncurses_vline
 ncurses_waddch
 ncurses_waddstr
 ncurses_wattroff
 ncurses_wattron
 ncurses_wattrset
 ncurses_wborder
 ncurses_wclear
 ncurses_wcolor_set
 ncurses_werase
 ncurses_wgetch
 ncurses_whline
 ncurses_wmouse_trafo
 ncurses_wmove
 ncurses_wnoutrefresh
 ncurses_wrefresh
 ncurses_wstandend
 ncurses_wstandout
 ncurses_wvline
Lotus Notes - Lotus Notes functions
 notes_body
 notes_copy_db
 notes_create_db
 notes_create_note
 notes_drop_db
 notes_find_note
 notes_header_info
 notes_list_msgs
 notes_mark_read
 notes_mark_unread
 notes_nav_create
 notes_search
 notes_unread
 notes_version
NSAPI - NSAPI-specific Functions
 nsapi_request_headers
 nsapi_response_headers
 nsapi_virtual
ODBC - Unified ODBC functions
 odbc_autocommit
 odbc_binmode
 odbc_close_all
 odbc_close
 odbc_columnprivileges
 odbc_columns
 odbc_commit
 odbc_connect
 odbc_cursor
 odbc_data_source
 odbc_do
 odbc_error
 odbc_errormsg
 odbc_exec
 odbc_execute
 odbc_fetch_array
 odbc_fetch_into
 odbc_fetch_object
 odbc_fetch_row
 odbc_field_len
 odbc_field_name
 odbc_field_num
 odbc_field_precision
 odbc_field_scale
 odbc_field_type
 odbc_foreignkeys
 odbc_free_result
 odbc_gettypeinfo
 odbc_longreadlen
 odbc_next_result
 odbc_num_fields
 odbc_num_rows
 odbc_pconnect
 odbc_prepare
 odbc_primarykeys
 odbc_procedurecolumns
 odbc_procedures
 odbc_result_all
 odbc_result
 odbc_rollback
 odbc_setoption
 odbc_specialcolumns
 odbc_statistics
 odbc_tableprivileges
 odbc_tables
Object Aggregation - Object Aggregation/Composition Functions
 aggregate_info
 aggregate_methods_by_list
 aggregate_methods_by_regexp
 aggregate_methods
 aggregate_properties_by_list
 aggregate_properties_by_regexp
 aggregate_properties
 aggregate
 aggregation_info
 deaggregate
OCI8 - Oracle 8 functions
 ocibindbyname
 ocicancel
 ocicloselob
 ocicollappend
 ocicollassign
 ocicollassignelem
 ocicollgetelem
 ocicollmax
 ocicollsize
 ocicolltrim
 ocicolumnisnull
 ocicolumnname
 ocicolumnprecision
 ocicolumnscale
 ocicolumnsize
 ocicolumntype
 ocicolumntyperaw
 ocicommit
 ocidefinebyname
 ocierror
 ociexecute
 ocifetch
 ocifetchinto
 ocifetchstatement
 ocifreecollection
 ocifreecursor
 ocifreedesc
 ocifreestatement
 ociinternaldebug
 ociloadlob
 ocilogoff
 ocilogon
 ocinewcollection
 ocinewcursor
 ocinewdescriptor
 ocinlogon
 ocinumcols
 ociparse
 ociplogon
 ociresult
 ocirollback
 ocirowcount
 ocisavelob
 ocisavelobfile
 ociserverversion
 ocisetprefetch
 ocistatementtype
 ociwritelobtofile
 ociwritetemporarylob
OpenSSL - OpenSSL functions
 openssl_csr_export_to_file
 openssl_csr_export
 openssl_csr_new
 openssl_csr_sign
 openssl_error_string
 openssl_free_key
 openssl_get_privatekey
 openssl_get_publickey
 openssl_open
 openssl_pkcs7_decrypt
 openssl_pkcs7_encrypt
 openssl_pkcs7_sign
 openssl_pkcs7_verify
 openssl_pkey_export_to_file
 openssl_pkey_export
 openssl_pkey_get_private
 openssl_pkey_get_public
 openssl_pkey_new
 openssl_private_decrypt
 openssl_private_encrypt
 openssl_public_decrypt
 openssl_public_encrypt
 openssl_seal
 openssl_sign
 openssl_verify
 openssl_x509_check_private_key
 openssl_x509_checkpurpose
 openssl_x509_export_to_file
 openssl_x509_export
 openssl_x509_free
 openssl_x509_parse
 openssl_x509_read
Oracle - Oracle functions
 ora_bind
 ora_close
 ora_columnname
 ora_columnsize
 ora_columntype
 ora_commit
 ora_commitoff
 ora_commiton
 ora_do
 ora_error
 ora_errorcode
 ora_exec
 ora_fetch_into
 ora_fetch
 ora_getcolumn
 ora_logoff
 ora_logon
 ora_numcols
 ora_numrows
 ora_open
 ora_parse
 ora_plogon
 ora_rollback
OvrimosSQL - Ovrimos SQL functions
 ovrimos_close
 ovrimos_commit
 ovrimos_connect
 ovrimos_cursor
 ovrimos_exec
 ovrimos_execute
 ovrimos_fetch_into
 ovrimos_fetch_row
 ovrimos_field_len
 ovrimos_field_name
 ovrimos_field_num
 ovrimos_field_type
 ovrimos_free_result
 ovrimos_longreadlen
 ovrimos_num_fields
 ovrimos_num_rows
 ovrimos_prepare
 ovrimos_result_all
 ovrimos_result
 ovrimos_rollback
Output Control - Output Control Functions
 flush
 ob_clean
 ob_end_clean
 ob_end_flush
 ob_flush
 ob_get_clean
 ob_get_contents
 ob_get_length
 ob_get_level
 ob_get_status
 ob_gzhandler
 ob_implicit_flush
 ob_start
Object overloading - Object property and method call overloading
 overload
PDF - PDF functions
 pdf_add_annotation
 pdf_add_bookmark
 pdf_add_launchlink
 pdf_add_locallink
 pdf_add_note
 pdf_add_outline
 pdf_add_pdflink
 pdf_add_thumbnail
 pdf_add_weblink
 pdf_arc
 pdf_arcn
 pdf_attach_file
 pdf_begin_page
 pdf_begin_pattern
 pdf_begin_template
 pdf_circle
 pdf_clip
 pdf_close_image
 pdf_close_pdi_page
 pdf_close_pdi
 pdf_close
 pdf_closepath_fill_stroke
 pdf_closepath_stroke
 pdf_closepath
 pdf_concat
 pdf_continue_text
 pdf_curveto
 pdf_delete
 pdf_end_page
 pdf_end_pattern
 pdf_end_template
 pdf_endpath
 pdf_fill_stroke
 pdf_fill
 pdf_findfont
 pdf_get_buffer
 pdf_get_font
 pdf_get_fontname
 pdf_get_fontsize
 pdf_get_image_height
 pdf_get_image_width
 pdf_get_majorversion
 pdf_get_minorversion
 pdf_get_parameter
 pdf_get_pdi_parameter
 pdf_get_pdi_value
 pdf_get_value
 pdf_initgraphics
 pdf_lineto
 pdf_makespotcolor
 pdf_moveto
 pdf_new
 pdf_open_CCITT
 pdf_open_file
 pdf_open_gif
 pdf_open_image_file
 pdf_open_image
 pdf_open_jpeg
 pdf_open_memory_image
 pdf_open_pdi_page
 pdf_open_pdi
 pdf_open_png
 pdf_open_tiff
 pdf_open
 pdf_place_image
 pdf_place_pdi_page
 pdf_rect
 pdf_restore
 pdf_rotate
 pdf_save
 pdf_scale
 pdf_set_border_color
 pdf_set_border_dash
 pdf_set_border_style
 pdf_set_char_spacing
 pdf_set_duration
 pdf_set_font
 pdf_set_horiz_scaling
 pdf_set_info_author
 pdf_set_info_creator
 pdf_set_info_keywords
 pdf_set_info_subject
 pdf_set_info_title
 pdf_set_info
 pdf_set_leading
 pdf_set_parameter
 pdf_set_text_matrix
 pdf_set_text_pos
 pdf_set_text_rendering
 pdf_set_text_rise
 pdf_set_value
 pdf_set_word_spacing
 pdf_setcolor
 pdf_setdash
 pdf_setflat
 pdf_setfont
 pdf_setgray_fill
 pdf_setgray_stroke
 pdf_setgray
 pdf_setlinecap
 pdf_setlinejoin
 pdf_setlinewidth
 pdf_setmatrix
 pdf_setmiterlimit
 pdf_setpolydash
 pdf_setrgbcolor_fill
 pdf_setrgbcolor_stroke
 pdf_setrgbcolor
 pdf_show_boxed
 pdf_show_xy
 pdf_show
 pdf_skew
 pdf_stringwidth
 pdf_stroke
 pdf_translate
Verisign Payflow Pro - Verisign Payflow Pro functions
 pfpro_cleanup
 pfpro_init
 pfpro_process_raw
 pfpro_process
 pfpro_version
PHP Options/Info - PHP Options&Information
 assert_options
 assert
 dl
 extension_loaded
 get_cfg_var
 get_current_user
 get_defined_constants
 get_extension_funcs
 get_include_path
 get_included_files
 get_loaded_extensions
 get_magic_quotes_gpc
 get_magic_quotes_runtime
 get_required_files
 getenv
 getlastmod
 getmygid
 getmyinode
 getmypid
 getmyuid
 getopt
 getrusage
 ini_alter
 ini_get_all
 ini_get
 ini_restore
 ini_set
 main
 memory_get_usage
 php_ini_scanned_files
 php_logo_guid
 php_sapi_name
 php_uname
 phpcredits
 phpinfo
 phpversion
 putenv
 restore_include_path
 set_include_path
 set_magic_quotes_runtime
 set_time_limit
 version_compare
 zend_logo_guid
 zend_version
POSIX - POSIX functions
 posix_ctermid
 posix_get_last_error
 posix_getcwd
 posix_getegid
 posix_geteuid
 posix_getgid
 posix_getgrgid
 posix_getgrnam
 posix_getgroups
 posix_getlogin
 posix_getpgid
 posix_getpgrp
 posix_getpid
 posix_getppid
 posix_getpwnam
 posix_getpwuid
 posix_getrlimit
 posix_getsid
 posix_getuid
 posix_isatty
 posix_kill
 posix_mkfifo
 posix_setegid
 posix_seteuid
 posix_setgid
 posix_setpgid
 posix_setsid
 posix_setuid
 posix_strerror
 posix_times
 posix_ttyname
 posix_uname
PostgreSQL - PostgreSQL functions
 pg_affected_rows
 pg_cancel_query
 pg_client_encoding
 pg_close
 pg_connect
 pg_connection_busy
 pg_connection_reset
 pg_connection_status
 pg_convert
 pg_copy_from
 pg_copy_to
 pg_dbname
 pg_delete
 pg_end_copy
 pg_escape_bytea
 pg_escape_string
 pg_fetch_all
 pg_fetch_array
 pg_fetch_assoc
 pg_fetch_object
 pg_fetch_result
 pg_fetch_row
 pg_field_is_null
 pg_field_name
 pg_field_num
 pg_field_prtlen
 pg_field_size
 pg_field_type
 pg_free_result
 pg_get_notify
 pg_get_pid
 pg_get_result
 pg_host
 pg_insert
 pg_last_error
 pg_last_notice
 pg_last_oid
 pg_lo_close
 pg_lo_create
 pg_lo_export
 pg_lo_import
 pg_lo_open
 pg_lo_read_all
 pg_lo_read
 pg_lo_seek
 pg_lo_tell
 pg_lo_unlink
 pg_lo_write
 pg_meta_data
 pg_num_fields
 pg_num_rows
 pg_options
 pg_pconnect
 pg_ping
 pg_port
 pg_put_line
 pg_query
 pg_result_error
 pg_result_seek
 pg_result_status
 pg_select
 pg_send_query
 pg_set_client_encoding
 pg_trace
 pg_tty
 pg_unescape_bytea
 pg_untrace
 pg_update
PCNTL - Process Control Functions
 pcntl_exec
 pcntl_fork
 pcntl_signal
 pcntl_waitpid
 pcntl_wexitstatus
 pcntl_wifexited
 pcntl_wifsignaled
 pcntl_wifstopped
 pcntl_wstopsig
 pcntl_wtermsig
Program Execution - Program Execution functions
 escapeshellarg
 escapeshellcmd
 exec
 passthru
 proc_close
 proc_get_status
 proc_nice
 proc_open
 proc_terminate
 shell_exec
 system
Printer - Printer functions
 printer_abort
 printer_close
 printer_create_brush
 printer_create_dc
 printer_create_font
 printer_create_pen
 printer_delete_brush
 printer_delete_dc
 printer_delete_font
 printer_delete_pen
 printer_draw_bmp
 printer_draw_chord
 printer_draw_elipse
 printer_draw_line
 printer_draw_pie
 printer_draw_rectangle
 printer_draw_roundrect
 printer_draw_text
 printer_end_doc
 printer_end_page
 printer_get_option
 printer_list
 printer_logical_fontheight
 printer_open
 printer_select_brush
 printer_select_font
 printer_select_pen
 printer_set_option
 printer_start_doc
 printer_start_page
 printer_write
Pspell - Pspell Functions
 pspell_add_to_personal
 pspell_add_to_session
 pspell_check
 pspell_clear_session
 pspell_config_create
 pspell_config_ignore
 pspell_config_mode
 pspell_config_personal
 pspell_config_repl
 pspell_config_runtogether
 pspell_config_save_repl
 pspell_new_config
 pspell_new_personal
 pspell_new
 pspell_save_wordlist
 pspell_store_replacement
 pspell_suggest
Readline - GNU Readline
 readline_add_history
 readline_clear_history
 readline_completion_function
 readline_info
 readline_list_history
 readline_read_history
 readline_write_history
 readline
Recode - GNU Recode functions
 recode_file
 recode_string
 recode
PCRE - Regular Expression Functions (Perl-Compatible)
 Pattern Modifiers
 Pattern Syntax
 preg_grep
 preg_match_all
 preg_match
 preg_quote
 preg_replace_callback
 preg_replace
 preg_split
qtdom - qtdom functions
 qdom_error
 qdom_tree
Regexps - Regular Expression Functions (POSIX Extended)
 ereg_replace
 ereg
 eregi_replace
 eregi
 split
 spliti
 sql_regcase
Semaphore - Semaphore, Shared Memory and IPC Functions
 ftok
 msg_get_queue
 msg_receive
 msg_remove_queue
 msg_send
 msg_set_queue
 msg_stat_queue
 sem_acquire
 sem_get
 sem_release
 sem_remove
 shm_attach
 shm_detach
 shm_get_var
 shm_put_var
 shm_remove_var
 shm_remove
SESAM - SESAM database functions
 sesam_affected_rows
 sesam_commit
 sesam_connect
 sesam_diagnostic
 sesam_disconnect
 sesam_errormsg
 sesam_execimm
 sesam_fetch_array
 sesam_fetch_result
 sesam_fetch_row
 sesam_field_array
 sesam_field_name
 sesam_free_result
 sesam_num_fields
 sesam_query
 sesam_rollback
 sesam_seek_row
 sesam_settransaction
Sessions - Session handling functions
 session_cache_expire
 session_cache_limiter
 session_decode
 session_destroy
 session_encode
 session_get_cookie_params
 session_id
 session_is_registered
 session_module_name
 session_name
 session_regenerate_id
 session_register
 session_save_path
 session_set_cookie_params
 session_set_save_handler
 session_start
 session_unregister
 session_unset
 session_write_close
shmop - Shared Memory Functions
 shmop_close
 shmop_delete
 shmop_open
 shmop_read
 shmop_size
 shmop_write
SQLite - SQLite
 sqlite_array_query
 sqlite_busy_timeout
 sqlite_changes
 sqlite_close
 sqlite_column
 sqlite_create_aggregate
 sqlite_create_function
 sqlite_current
 sqlite_error_string
 sqlite_escape_string
 sqlite_fetch_array
 sqlite_fetch_single
 sqlite_fetch_string
 sqlite_field_name
 sqlite_has_more
 sqlite_last_error
 sqlite_last_insert_rowid
 sqlite_libencoding
 sqlite_libversion
 sqlite_next
 sqlite_num_fields
 sqlite_num_rows
 sqlite_open
 sqlite_popen
 sqlite_query
 sqlite_rewind
 sqlite_seek
 sqlite_udf_decode_binary
 sqlite_udf_encode_binary
 sqlite_unbuffered_query
SWF - Shockwave Flash functions
 swf_actiongeturl
 swf_actiongotoframe
 swf_actiongotolabel
 swf_actionnextframe
 swf_actionplay
 swf_actionprevframe
 swf_actionsettarget
 swf_actionstop
 swf_actiontogglequality
 swf_actionwaitforframe
 swf_addbuttonrecord
 swf_addcolor
 swf_closefile
 swf_definebitmap
 swf_definefont
 swf_defineline
 swf_definepoly
 swf_definerect
 swf_definetext
 swf_endbutton
 swf_enddoaction
 swf_endshape
 swf_endsymbol
 swf_fontsize
 swf_fontslant
 swf_fonttracking
 swf_getbitmapinfo
 swf_getfontinfo
 swf_getframe
 swf_labelframe
 swf_lookat
 swf_modifyobject
 swf_mulcolor
 swf_nextid
 swf_oncondition
 swf_openfile
 swf_ortho2
 swf_ortho
 swf_perspective
 swf_placeobject
 swf_polarview
 swf_popmatrix
 swf_posround
 swf_pushmatrix
 swf_removeobject
 swf_rotate
 swf_scale
 swf_setfont
 swf_setframe
 swf_shapearc
 swf_shapecurveto3
 swf_shapecurveto
 swf_shapefillbitmapclip
 swf_shapefillbitmaptile
 swf_shapefilloff
 swf_shapefillsolid
 swf_shapelinesolid
 swf_shapelineto
 swf_shapemoveto
 swf_showframe
 swf_startbutton
 swf_startdoaction
 swf_startshape
 swf_startsymbol
 swf_textwidth
 swf_translate
 swf_viewport
SNMP - SNMP functions
 snmp_get_quick_print
 snmp_set_quick_print
 snmpget
 snmprealwalk
 snmpset
 snmpwalk
 snmpwalkoid
Sockets - Socket functions
 socket_accept
 socket_bind
 socket_clear_error
 socket_close
 socket_connect
 socket_create_listen
 socket_create_pair
 socket_create
 socket_get_option
 socket_getpeername
 socket_getsockname
 socket_iovec_add
 socket_iovec_alloc
 socket_iovec_delete
 socket_iovec_fetch
 socket_iovec_free
 socket_iovec_set
 socket_last_error
 socket_listen
 socket_read
 socket_readv
 socket_recv
 socket_recvfrom
 socket_recvmsg
 socket_select
 socket_send
 socket_sendmsg
 socket_sendto
 socket_set_block
 socket_set_nonblock
 socket_set_option
 socket_shutdown
 socket_strerror
 socket_write
 socket_writev
Streams - Stream functions
 stream_context_create
 stream_context_get_options
 stream_context_set_option
 stream_context_set_params
 stream_copy_to_stream
 stream_filter_append
 stream_filter_prepend
 stream_filter_register
 stream_get_filters
 stream_get_line
 stream_get_meta_data
 stream_get_transports
 stream_get_wrappers
 stream_register_wrapper
 stream_select
 stream_set_blocking
 stream_set_timeout
 stream_set_write_buffer
 stream_socket_accept
 stream_socket_client
 stream_socket_get_name
 stream_socket_server
 stream_wrapper_register
Strings - String functions
 addcslashes
 addslashes
 bin2hex
 chop
 chr
 chunk_split
 convert_cyr_string
 count_chars
 crc32
 crypt
 echo
 explode
 fprintf
 get_html_translation_table
 hebrev
 hebrevc
 html_entity_decode
 htmlentities
 htmlspecialchars
 implode
 join
 levenshtein
 localeconv
 ltrim
 md5_file
 md5
 metaphone
 money_format
 nl_langinfo
 nl2br
 number_format
 ord
 parse_str
 print
 printf
 quoted_printable_decode
 quotemeta
 rtrim
 setlocale
 sha1_file
 sha1
 similar_text
 soundex
 sprintf
 sscanf
 str_ireplace
 str_pad
 str_repeat
 str_replace
 str_rot13
 str_shuffle
 str_split
 str_word_count
 strcasecmp
 strchr
 strcmp
 strcoll
 strcspn
 strip_tags
 stripcslashes
 stripos
 stripslashes
 stristr
 strlen
 strnatcasecmp
 strnatcmp
 strncasecmp
 strncmp
 strpos
 strrchr
 strrev
 strripos
 strrpos
 strspn
 strstr
 strtok
 strtolower
 strtoupper
 strtr
 substr_compare
 substr_count
 substr_replace
 substr
 trim
 ucfirst
 ucwords
 vprintf
 vsprintf
 wordwrap
Sybase - Sybase functions
 sybase_affected_rows
 sybase_close
 sybase_connect
 sybase_data_seek
 sybase_deadlock_retry_count
 sybase_fetch_array
 sybase_fetch_assoc
 sybase_fetch_field
 sybase_fetch_object
 sybase_fetch_row
 sybase_field_seek
 sybase_free_result
 sybase_get_last_message
 sybase_min_client_severity
 sybase_min_error_severity
 sybase_min_message_severity
 sybase_min_server_severity
 sybase_num_fields
 sybase_num_rows
 sybase_pconnect
 sybase_query
 sybase_result
 sybase_select_db
 sybase_set_message_handler
 sybase_unbuffered_query
tidy - tidy Functions
 tidy_access_count
 tidy_clean_repair
 tidy_config_count
 tidy_diagnose
 tidy_error_count
 tidy_get_body
 tidy_get_config
 tidy_get_error_buffer
 tidy_get_head
 tidy_get_html_ver
 tidy_get_html
 tidy_get_output
 tidy_get_release
 tidy_get_root
 tidy_get_status
 tidy_getopt
 tidy_is_xhtml
 tidy_load_config
 tidy_parse_file
 tidy_parse_string
 tidy_repair_file
 tidy_repair_string
 tidy_reset_config
 tidy_save_config
 tidy_set_encoding
 tidy_setopt
 tidy_warning_count
Tokenizer - Tokenizer functions
 token_get_all
 token_name
URLs - URL Functions
 base64_decode
 base64_encode
 get_meta_tags
 http_build_query
 parse_url
 rawurldecode
 rawurlencode
 urldecode
 urlencode
Variables - Variable Functions
 doubleval
 empty
 floatval
 get_defined_vars
 get_resource_type
 gettype
 import_request_variables
 intval
 is_array
 is_bool
 is_callable
 is_double
 is_float
 is_int
 is_integer
 is_long
 is_null
 is_numeric
 is_object
 is_real
 is_resource
 is_scalar
 is_string
 isset
 print_r
 serialize
 settype
 strval
 unserialize
 unset
 var_dump
 var_export
vpopmail - vpopmail functions
 vpopmail_add_alias_domain_ex
 vpopmail_add_alias_domain
 vpopmail_add_domain_ex
 vpopmail_add_domain
 vpopmail_add_user
 vpopmail_alias_add
 vpopmail_alias_del_domain
 vpopmail_alias_del
 vpopmail_alias_get_all
 vpopmail_alias_get
 vpopmail_auth_user
 vpopmail_del_domain_ex
 vpopmail_del_domain
 vpopmail_del_user
 vpopmail_error
 vpopmail_passwd
 vpopmail_set_user_quota
W32api - W32api functions
 w32api_deftype
 w32api_init_dtype
 w32api_invoke_function
 w32api_register_function
 w32api_set_call_method
WDDX - WDDX Functions
 wddx_add_vars
 wddx_deserialize
 wddx_packet_end
 wddx_packet_start
 wddx_serialize_value
 wddx_serialize_vars
XML - XML parser functions
 utf8_decode
 utf8_encode
 xml_error_string
 xml_get_current_byte_index
 xml_get_current_column_number
 xml_get_current_line_number
 xml_get_error_code
 xml_parse_into_struct
 xml_parse
 xml_parser_create_ns
 xml_parser_create
 xml_parser_free
 xml_parser_get_option
 xml_parser_set_option
 xml_set_character_data_handler
 xml_set_default_handler
 xml_set_element_handler
 xml_set_end_namespace_decl_handler
 xml_set_external_entity_ref_handler
 xml_set_notation_decl_handler
 xml_set_object
 xml_set_processing_instruction_handler
 xml_set_start_namespace_decl_handler
 xml_set_unparsed_entity_decl_handler
XML-RPC - XML-RPC functions
 xmlrpc_decode_request
 xmlrpc_decode
 xmlrpc_encode_request
 xmlrpc_encode
 xmlrpc_get_type
 xmlrpc_parse_method_descriptions
 xmlrpc_server_add_introspection_data
 xmlrpc_server_call_method
 xmlrpc_server_create
 xmlrpc_server_destroy
 xmlrpc_server_register_introspection_callback
 xmlrpc_server_register_method
 xmlrpc_set_type
XSLT - XSLT functions
 xslt_create
 xslt_errno
 xslt_error
 xslt_free
 xslt_process
 xslt_set_base
 xslt_set_encoding
 xslt_set_error_handler
 xslt_set_log
 xslt_set_sax_handler
 xslt_set_sax_handlers
 xslt_set_scheme_handler
 xslt_set_scheme_handlers
YAZ - YAZ functions
 yaz_addinfo
 yaz_ccl_conf
 yaz_ccl_parse
 yaz_close
 yaz_connect
 yaz_database
 yaz_element
 yaz_errno
 yaz_error
 yaz_get_option
 yaz_hits
 yaz_itemorder
 yaz_present
 yaz_range
 yaz_record
 yaz_scan_result
 yaz_scan
 yaz_schema
 yaz_search
 yaz_set_option
 yaz_sort
 yaz_syntax
 yaz_wait
YP/NIS - YP/NIS Functions
 yp_all
 yp_cat
 yp_err_string
 yp_errno
 yp_first
 yp_get_default_domain
 yp_master
 yp_match
 yp_next
 yp_order
Zip - Zip File Functions (Read Only Access)
 zip_close
 zip_entry_close
 zip_entry_compressedsize
 zip_entry_compressionmethod
 zip_entry_filesize
 zip_entry_name
 zip_entry_open
 zip_entry_read
 zip_open
 zip_read
Zlib - Zlib Compression Functions
 gzclose
 gzcompress
 gzdeflate
 gzencode
 gzeof
 gzfile
 gzgetc
 gzgets
 gzgetss
 gzinflate
 gzopen
 gzpassthru
 gzputs
 gzread
 gzrewind
 gzseek
 gztell
 gzuncompress
 gzwrite
 readgzfile
 zlib_get_coding_type
;
;
; -----------------------------------------------------------------------------
; KeyWords
; -----------------------------------------------------------------------------
[KeyWords]
; predefined magical constants
__LINE__
__FILE__
__FUNCTION__
__CLASS__
; core predefined constants
PHP_VERSION
PHP_OS
DEFAULT_INCLUDE_PATH
PEAR_INSTALL_DIR
PEAR_EXTENSION_DIR
PHP_EXTENSION_DIR
PHP_BINDIR
PHP_LIBDIR
PHP_DATADIR
PHP_SYSCONFDIR
PHP_LOCALSTATEDIR
PHP_CONFIG_FILE_PATH
PHP_OUTPUT_HANDLER_START
PHP_OUTPUT_HANDLER_CONT
PHP_OUTPUT_HANDLER_END
E_ERROR
E_WARNING
E_PARSE
E_NOTICE
E_CORE_ERROR
E_CORE_WARNING
E_COMPILE_ERROR
E_COMPILE_WARNING
E_USER_ERROR
E_USER_WARNING
E_USER_NOTICE
E_ALL
; standard predefined constants
EXTR_OVERWRITE
EXTR_SKIP
EXTR_PREFIX_SAME
EXTR_PREFIX_ALL
EXTR_PREFIX_INVALID
EXTR_PREFIX_IF_EXISTS
EXTR_IF_EXISTS
SORT_ASC
SORT_DESC
SORT_REGULAR
SORT_NUMERIC
SORT_STRING
CASE_LOWER
CASE_UPPER
COUNT_NORMAL
COUNT_RECURSIVE
ASSERT_ACTIVE
ASSERT_CALLBACK
ASSERT_BAIL
ASSERT_WARNING
ASSERT_QUIET_EVAL
CONNECTION_ABORTED
CONNECTION_NORMAL
CONNECTION_TIMEOUT
INI_USER
INI_PERDIR
INI_SYSTEM
INI_ALL
M_E
M_LOG2E
M_LOG10E
M_LN2
M_LN10
M_PI
M_PI_2
M_PI_4
M_1_PI
M_2_PI
M_2_SQRTPI
M_SQRT2
M_SQRT1_2
CRYPT_SALT_LENGTH
CRYPT_STD_DES
CRYPT_EXT_DES
CRYPT_MD5
CRYPT_BLOWFISH
DIRECTORY_SEPARATOR
SEEK_SET
SEEK_CUR
SEEK_END
LOCK_SH
LOCK_EX
LOCK_UN
LOCK_NB
HTML_SPECIALCHARS
HTML_ENTITIES
ENT_COMPAT
ENT_QUOTES
ENT_NOQUOTES
INFO_GENERAL
INFO_CREDITS
INFO_CONFIGURATION
INFO_MODULES
INFO_ENVIRONMENT
INFO_VARIABLES
INFO_LICENSE
INFO_ALL
CREDITS_GROUP
CREDITS_GENERAL
CREDITS_SAPI
CREDITS_MODULES
CREDITS_DOCS
CREDITS_FULLPAGE
CREDITS_QA
CREDITS_ALL
STR_PAD_LEFT
STR_PAD_RIGHT
STR_PAD_BOTH
PATHINFO_DIRNAME
PATHINFO_BASENAME
PATHINFO_EXTENSION
CHAR_MAX
LC_CTYPE
LC_NUMERIC
LC_TIME
LC_COLLATE
LC_MONETARY
LC_ALL
LC_MESSAGES
ABDAY_1
ABDAY_2
ABDAY_3
ABDAY_4
ABDAY_5
ABDAY_6
ABDAY_7
DAY_1
DAY_2
DAY_3
DAY_4
DAY_5
DAY_6
DAY_7
ABMON_1
ABMON_2
ABMON_3
ABMON_4
ABMON_5
ABMON_6
ABMON_7
ABMON_8
ABMON_9
ABMON_10
ABMON_11
ABMON_12
MON_1
MON_2
MON_3
MON_4
MON_5
MON_6
MON_7
MON_8
MON_9
MON_10
MON_11
MON_12
AM_STR
PM_STR
D_T_FMT
D_FMT
T_FMT
T_FMT_AMPM
ERA
ERA_YEAR
ERA_D_T_FMT
ERA_D_FMT
ERA_T_FMT
ALT_DIGITS
INT_CURR_SYMBOL
CURRENCY_SYMBOL
CRNCYSTR
MON_DECIMAL_POINT
MON_THOUSANDS_SEP
MON_GROUPING
POSITIVE_SIGN
NEGATIVE_SIGN
INT_FRAC_DIGITS
FRAC_DIGITS
P_CS_PRECEDES
P_SEP_BY_SPACE
N_CS_PRECEDES
N_SEP_BY_SPACE
P_SIGN_POSN
N_SIGN_POSN
DECIMAL_POINT
RADIXCHAR
THOUSANDS_SEP
THOUSEP
GROUPING
YESEXPR
NOEXPR
YESSTR
NOSTR
CODESET
LOG_EMERG
LOG_ALERT
LOG_CRIT
LOG_ERR
LOG_WARNING
LOG_NOTICE
LOG_INFO
LOG_DEBUG
LOG_KERN
LOG_USER
LOG_MAIL
LOG_DAEMON
LOG_AUTH
LOG_SYSLOG
LOG_LPR
LOG_NEWS
LOG_UUCP
LOG_CRON
LOG_AUTHPRIV
LOG_LOCAL0
LOG_LOCAL1
LOG_LOCAL2
LOG_LOCAL3
LOG_LOCAL4
LOG_LOCAL5
LOG_LOCAL6
LOG_LOCAL7
LOG_PID
LOG_CONS
LOG_ODELAY
LOG_NDELAY
LOG_NOWAIT
LOG_PERROR
; predefined variables
$GLOBALS
$_SERVER
$_SERVER['PHP_SELF']
$_SERVER['argv']
$_SERVER['argc']
$_SERVER['GATEWAY_INTERFACE']
$_SERVER['SERVER_NAME']
$_SERVER['SERVER_SOFTWARE']
$_SERVER['SERVER_PROTOCOL']
$_SERVER['REQUEST_METHOD']
$_SERVER['QUERY_STRING']
$_SERVER['DOCUMENT_ROOT']
$_SERVER['HTTP_ACCEPT']
$_SERVER['HTTP_ACCEPT_CHARSET']
$_SERVER['HTTP_ACCEPT_ENCODING']
$_SERVER['HTTP_ACCEPT_LANGUAGE']
$_SERVER['HTTP_CONNECTION']
$_SERVER['HTTP_HOST']
$_SERVER['HTTP_REFERER']
$_SERVER['HTTP_USER_AGENT']
$_SERVER['REMOTE_ADDR']
$_SERVER['REMOTE_HOST']
$_SERVER['REMOTE_PORT']
$_SERVER['SCRIPT_FILENAME']
$_SERVER['SERVER_ADMIN']
$_SERVER['SERVER_PORT']
$_SERVER['SERVER_SIGNATURE']
$_SERVER['PATH_TRANSLATED']
$_SERVER['SCRIPT_NAME']
$_SERVER['REQUEST_URI']
$_SERVER['PHP_AUTH_USER']
$_SERVER['PHP_AUTH_PW']
$_SERVER['AUTH_TYPE']
$_ENV
$_GET
$_POST
$_COOKIE
$_REQUEST
$_FILES
$_SESSION
apache_child_terminate()
apache_get_version()
apache_lookup_uri()
apache_note()
apache_request_headers()
apache_response_headers()
apache_setenv()
ascii2ebcdic()
ebcdic2ascii()
getallheaders()
virtual()
array_change_key_case()
array_chunk()
array_combine()
array_count_values()
array_diff_assoc()
array_diff_uassoc()
array_diff()
array_fill()
array_filter()
array_flip()
array_intersect_assoc()
array_intersect()
array_key_exists()
array_keys()
array_map()
array_merge_recursive()
array_merge()
array_multisort()
array_pad()
array_pop()
array_push()
array_rand()
array_reduce()
array_reverse()
array_search()
array_shift()
array_slice()
array_splice()
array_sum()
array_udiff_assoc()
array_udiff_uassoc()
array_udiff()
array_unique()
array_unshift()
array_values()
array_walk()
array()
arsort()
asort()
compact()
count()
current()
each()
end()
extract()
in_array()
key()
krsort()
ksort()
list()
natcasesort()
natsort()
next()
pos()
prev()
range()
reset()
rsort()
shuffle()
sizeof()
sort()
uasort()
uksort()
usort()
aspell_check_raw()
aspell_check()
aspell_new()
aspell_suggest()
bcadd()
bccomp()
bcdiv()
bcmod()
bcmul()
bcpow()
bcpowmod()
bcscale()
bcsqrt()
bcsub()
bzclose()
bzcompress()
bzdecompress()
bzerrno()
bzerror()
bzerrstr()
bzflush()
bzopen()
bzread()
bzwrite()
cal_days_in_month()
cal_from_jd()
cal_info()
cal_to_jd()
easter_date()
easter_days()
FrenchToJD()
GregorianToJD()
JDDayOfWeek()
JDMonthName()
JDToFrench()
JDToGregorian()
jdtojewish()
JDToJulian()
jdtounix()
JewishToJD()
JulianToJD()
unixtojd()
ccvs_add()
ccvs_auth()
ccvs_command()
ccvs_count()
ccvs_delete()
ccvs_done()
ccvs_init()
ccvs_lookup()
ccvs_new()
ccvs_report()
ccvs_return()
ccvs_reverse()
ccvs_sale()
ccvs_status()
ccvs_textvalue()
ccvs_void()
COM()
VARIANT()
com_addref()
com_get()
com_invoke()
com_isenum()
com_load_typelib()
com_load()
com_propget()
com_propput()
com_propset()
com_release()
com_set()
call_user_method_array()
call_user_method()
class_exists()
get_class_methods()
get_class_vars()
get_class()
get_declared_classes()
get_object_vars()
get_parent_class()
is_a()
is_subclass_of()
method_exists()
cpdf_add_annotation()
cpdf_add_outline()
cpdf_arc()
cpdf_begin_text()
cpdf_circle()
cpdf_clip()
cpdf_close()
cpdf_closepath_fill_stroke()
cpdf_closepath_stroke()
cpdf_closepath()
cpdf_continue_text()
cpdf_curveto()
cpdf_end_text()
cpdf_fill_stroke()
cpdf_fill()
cpdf_finalize_page()
cpdf_finalize()
cpdf_global_set_document_limits()
cpdf_import_jpeg()
cpdf_lineto()
cpdf_moveto()
cpdf_newpath()
cpdf_open()
cpdf_output_buffer()
cpdf_page_init()
cpdf_place_inline_image()
cpdf_rect()
cpdf_restore()
cpdf_rlineto()
cpdf_rmoveto()
cpdf_rotate_text()
cpdf_rotate()
cpdf_save_to_file()
cpdf_save()
cpdf_scale()
cpdf_set_action_url()
cpdf_set_char_spacing()
cpdf_set_creator()
cpdf_set_current_page()
cpdf_set_font_directories()
cpdf_set_font_map_file()
cpdf_set_font()
cpdf_set_horiz_scaling()
cpdf_set_keywords()
cpdf_set_leading()
cpdf_set_page_animation()
cpdf_set_subject()
cpdf_set_text_matrix()
cpdf_set_text_pos()
cpdf_set_text_rendering()
cpdf_set_text_rise()
cpdf_set_title()
cpdf_set_viewer_preferences()
cpdf_set_word_spacing()
cpdf_setdash()
cpdf_setflat()
cpdf_setgray_fill()
cpdf_setgray_stroke()
cpdf_setgray()
cpdf_setlinecap()
cpdf_setlinejoin()
cpdf_setlinewidth()
cpdf_setmiterlimit()
cpdf_setrgbcolor_fill()
cpdf_setrgbcolor_stroke()
cpdf_setrgbcolor()
cpdf_show_xy()
cpdf_show()
cpdf_stringwidth()
cpdf_stroke()
cpdf_text()
cpdf_translate()
crack_check()
crack_closedict()
crack_getlastmessage()
crack_opendict()
curl_close()
curl_errno()
curl_error()
curl_exec()
curl_getinfo()
curl_init()
curl_multi_add_handle()
curl_multi_close()
curl_multi_exec()
curl_multi_getcontent()
curl_multi_info_read()
curl_multi_init()
curl_multi_remove_handle()
curl_multi_select()
curl_setopt()
curl_version()
cybercash_base64_decode()
cybercash_base64_encode()
cybercash_decr()
cybercash_encr()
cyrus_authenticate()
cyrus_bind()
cyrus_close()
cyrus_connect()
cyrus_query()
cyrus_unbind()
ctype_alnum()
ctype_alpha()
ctype_cntrl()
ctype_digit()
ctype_graph()
ctype_lower()
ctype_print()
ctype_punct()
ctype_space()
ctype_upper()
ctype_xdigit()
dba_close()
dba_delete()
dba_exists()
dba_fetch()
dba_firstkey()
dba_handlers()
dba_insert()
dba_key_split()
dba_list()
dba_nextkey()
dba_open()
dba_optimize()
dba_popen()
dba_replace()
dba_sync()
checkdate()
date()
getdate()
gettimeofday()
gmdate()
gmmktime()
gmstrftime()
localtime()
microtime()
mktime()
strftime()
strtotime()
time()
dbase_add_record()
dbase_close()
dbase_create()
dbase_delete_record()
dbase_get_header_info()
dbase_get_record_with_names()
dbase_get_record()
dbase_numfields()
dbase_numrecords()
dbase_open()
dbase_pack()
dbase_replace_record()
dblist()
dbmclose()
dbmdelete()
dbmexists()
dbmfetch()
dbmfirstkey()
dbminsert()
dbmnextkey()
dbmopen()
dbmreplace()
dbx_close()
dbx_compare()
dbx_connect()
dbx_error()
dbx_escape_string()
dbx_fetch_row()
dbx_query()
dbx_sort()
dbplus_add()
dbplus_aql()
dbplus_chdir()
dbplus_close()
dbplus_curr()
dbplus_errcode()
dbplus_errno()
dbplus_find()
dbplus_first()
dbplus_flush()
dbplus_freealllocks()
dbplus_freelock()
dbplus_freerlocks()
dbplus_getlock()
dbplus_getunique()
dbplus_info()
dbplus_last()
dbplus_lockrel()
dbplus_next()
dbplus_open()
dbplus_prev()
dbplus_rchperm()
dbplus_rcreate()
dbplus_rcrtexact()
dbplus_rcrtlike()
dbplus_resolve()
dbplus_restorepos()
dbplus_rkeys()
dbplus_ropen()
dbplus_rquery()
dbplus_rrename()
dbplus_rsecindex()
dbplus_runlink()
dbplus_rzap()
dbplus_savepos()
dbplus_setindex()
dbplus_setindexbynumber()
dbplus_sql()
dbplus_tcl()
dbplus_tremove()
dbplus_undo()
dbplus_undoprepare()
dbplus_unlockrel()
dbplus_unselect()
dbplus_update()
dbplus_xlockrel()
dbplus_xunlockrel()
dio_close()
dio_fcntl()
dio_open()
dio_read()
dio_seek()
dio_stat()
dio_tcsetattr()
dio_truncate()
dio_write()
chdir()
chroot()
dir()
closedir()
getcwd()
opendir()
readdir()
rewinddir()
scandir()
DomAttribute->name()
DomAttribute->specified()
DomAttribute->value()
DomDocument->add_root [deprecated]()
DomDocument->create_attribute()
DomDocument->create_cdata_section()
DomDocument->create_comment()
DomDocument->create_element_ns()
DomDocument->create_element()
DomDocument->create_entity_reference()
DomDocument->create_processing_instruction()
DomDocument->create_text_node()
DomDocument->doctype()
DomDocument->document_element()
DomDocument->dump_file()
DomDocument->dump_mem()
DomDocument->get_element_by_id()
DomDocument->get_elements_by_tagname()
DomDocument->html_dump_mem()
DomDocument->xinclude()
DomDocumentType->entities()
DomDocumentType->internal_subset()
DomDocumentType->name()
DomDocumentType->notations()
DomDocumentType->public_id()
DomDocumentType->system_id()
DomElement->get_attribute_node()
DomElement->get_attribute()
DomElement->get_elements_by_tagname()
DomElement->has_attribute()
DomElement->remove_attribute()
DomElement->set_attribute()
DomElement->tagname()
DomNode->add_namespace()
DomNode->append_child()
DomNode->append_sibling()
DomNode->attributes()
DomNode->child_nodes()
DomNode->clone_node()
DomNode->dump_node()
DomNode->first_child()
DomNode->get_content()
DomNode->has_attributes()
DomNode->has_child_nodes()
DomNode->insert_before()
DomNode->is_blank_node()
DomNode->last_child()
DomNode->next_sibling()
DomNode->node_name()
DomNode->node_type()
DomNode->node_value()
DomNode->owner_document()
DomNode->parent_node()
DomNode->prefix()
DomNode->previous_sibling()
DomNode->remove_child()
DomNode->replace_child()
DomNode->replace_node()
DomNode->set_content()
DomNode->set_name()
DomNode->set_namespace()
DomNode->unlink_node()
DomProcessingInstruction->data()
DomProcessingInstruction->target()
DomXsltStylesheet->process()
DomXsltStylesheet->result_dump_file()
DomXsltStylesheet->result_dump_mem()
domxml_new_doc()
domxml_open_file()
domxml_open_mem()
domxml_version()
domxml_xmltree()
domxml_xslt_stylesheet_doc()
domxml_xslt_stylesheet_file()
domxml_xslt_stylesheet()
xpath_eval_expression()
xpath_eval()
xpath_new_context()
xptr_eval()
xptr_new_context()
dotnet_load()
debug_backtrace()
debug_print_backtrace()
error_log()
error_reporting()
restore_error_handler()
set_error_handler()
trigger_error()
user_error()
fam_cancel_monitor()
fam_close()
fam_monitor_collection()
fam_monitor_directory()
fam_monitor_file()
fam_next_event()
fam_open()
fam_pending()
fam_resume_monitor()
fam_suspend_monitor()
fbsql_affected_rows()
fbsql_autocommit()
fbsql_change_user()
fbsql_close()
fbsql_commit()
fbsql_connect()
fbsql_create_blob()
fbsql_create_clob()
fbsql_create_db()
fbsql_data_seek()
fbsql_database_password()
fbsql_database()
fbsql_db_query()
fbsql_db_status()
fbsql_drop_db()
fbsql_errno()
fbsql_error()
fbsql_fetch_array()
fbsql_fetch_assoc()
fbsql_fetch_field()
fbsql_fetch_lengths()
fbsql_fetch_object()
fbsql_fetch_row()
fbsql_field_flags()
fbsql_field_len()
fbsql_field_name()
fbsql_field_seek()
fbsql_field_table()
fbsql_field_type()
fbsql_free_result()
fbsql_get_autostart_info()
fbsql_hostname()
fbsql_insert_id()
fbsql_list_dbs()
fbsql_list_fields()
fbsql_list_tables()
fbsql_next_result()
fbsql_num_fields()
fbsql_num_rows()
fbsql_password()
fbsql_pconnect()
fbsql_query()
fbsql_read_blob()
fbsql_read_clob()
fbsql_result()
fbsql_rollback()
fbsql_select_db()
fbsql_set_lob_mode()
fbsql_set_transaction()
fbsql_start_db()
fbsql_stop_db()
fbsql_tablename()
fbsql_username()
fbsql_warnings()
filepro_fieldcount()
filepro_fieldname()
filepro_fieldtype()
filepro_fieldwidth()
filepro_retrieve()
filepro_rowcount()
filepro()
basename()
chgrp()
chmod()
chown()
clearstatcache()
copy()
delete()
dirname()
disk_free_space()
disk_total_space()
diskfreespace()
fclose()
feof()
fflush()
fgetc()
fgetcsv()
fgets()
fgetss()
file_exists()
file_get_contents()
file_put_contents()
file()
fileatime()
filectime()
filegroup()
fileinode()
filemtime()
fileowner()
fileperms()
filesize()
filetype()
flock()
fnmatch()
fopen()
fpassthru()
fputs()
fread()
fscanf()
fseek()
fstat()
ftell()
ftruncate()
fwrite()
glob()
is_dir()
is_executable()
is_file()
is_link()
is_readable()
is_uploaded_file()
is_writable()
is_writeable()
link()
linkinfo()
lstat()
mkdir()
move_uploaded_file()
parse_ini_file()
pathinfo()
pclose()
popen()
readfile()
readlink()
realpath()
rename()
rewind()
rmdir()
set_file_buffer()
stat()
symlink()
tempnam()
tmpfile()
touch()
umask()
unlink()
fdf_add_doc_javascript()
fdf_add_template()
fdf_close()
fdf_create()
fdf_enum_values()
fdf_errno()
fdf_error()
fdf_get_ap()
fdf_get_attachment()
fdf_get_encoding()
fdf_get_file()
fdf_get_flags()
fdf_get_opt()
fdf_get_status()
fdf_get_value()
fdf_get_version()
fdf_header()
fdf_next_field_name()
fdf_open_string()
fdf_open()
fdf_remove_item()
fdf_save_string()
fdf_save()
fdf_set_ap()
fdf_set_encoding()
fdf_set_file()
fdf_set_flags()
fdf_set_javascript_action()
fdf_set_opt()
fdf_set_status()
fdf_set_submit_form_action()
fdf_set_target_frame()
fdf_set_value()
fdf_set_version()
fribidi_log2vis()
ftp_alloc()
ftp_cdup()
ftp_chdir()
ftp_chmod()
ftp_close()
ftp_connect()
ftp_delete()
ftp_exec()
ftp_fget()
ftp_fput()
ftp_get_option()
ftp_get()
ftp_login()
ftp_mdtm()
ftp_mkdir()
ftp_nb_continue()
ftp_nb_fget()
ftp_nb_fput()
ftp_nb_get()
ftp_nb_put()
ftp_nlist()
ftp_pasv()
ftp_put()
ftp_pwd()
ftp_quit()
ftp_raw()
ftp_rawlist()
ftp_rename()
ftp_rmdir()
ftp_set_option()
ftp_site()
ftp_size()
ftp_ssl_connect()
ftp_systype()
call_user_func_array()
call_user_func()
create_function()
func_get_arg()
func_get_args()
func_num_args()
function_exists()
get_defined_functions()
register_shutdown_function()
register_tick_function()
unregister_tick_function()
bind_textdomain_codeset()
bindtextdomain()
dcgettext()
dcngettext()
dgettext()
dngettext()
gettext()
ngettext()
textdomain()
gmp_abs()
gmp_add()
gmp_and()
gmp_clrbit()
gmp_cmp()
gmp_com()
gmp_div_q()
gmp_div_qr()
gmp_div_r()
gmp_div()
gmp_divexact()
gmp_fact()
gmp_gcd()
gmp_gcdext()
gmp_hamdist()
gmp_init()
gmp_intval()
gmp_invert()
gmp_jacobi()
gmp_legendre()
gmp_mod()
gmp_mul()
gmp_neg()
gmp_or()
gmp_perfect_square()
gmp_popcount()
gmp_pow()
gmp_powm()
gmp_prob_prime()
gmp_random()
gmp_scan0()
gmp_scan1()
gmp_setbit()
gmp_sign()
gmp_sqrt()
gmp_sqrtrm()
gmp_strval()
gmp_sub()
gmp_xor()
header()
headers_list()
headers_sent()
setcookie()
hw_Array2Objrec()
hw_changeobject()
hw_Children()
hw_ChildrenObj()
hw_Close()
hw_Connect()
hw_connection_info()
hw_cp()
hw_Deleteobject()
hw_DocByAnchor()
hw_DocByAnchorObj()
hw_Document_Attributes()
hw_Document_BodyTag()
hw_Document_Content()
hw_Document_SetContent()
hw_Document_Size()
hw_dummy()
hw_EditText()
hw_Error()
hw_ErrorMsg()
hw_Free_Document()
hw_GetAnchors()
hw_GetAnchorsObj()
hw_GetAndLock()
hw_GetChildColl()
hw_GetChildCollObj()
hw_GetChildDocColl()
hw_GetChildDocCollObj()
hw_GetObject()
hw_GetObjectByQuery()
hw_GetObjectByQueryColl()
hw_GetObjectByQueryCollObj()
hw_GetObjectByQueryObj()
hw_GetParents()
hw_GetParentsObj()
hw_getrellink()
hw_GetRemote()
hw_getremotechildren()
hw_GetSrcByDestObj()
hw_GetText()
hw_getusername()
hw_Identify()
hw_InCollections()
hw_Info()
hw_InsColl()
hw_InsDoc()
hw_insertanchors()
hw_InsertDocument()
hw_InsertObject()
hw_mapid()
hw_Modifyobject()
hw_mv()
hw_New_Document()
hw_objrec2array()
hw_Output_Document()
hw_pConnect()
hw_PipeDocument()
hw_Root()
hw_setlinkroot()
hw_stat()
hw_Unlock()
hw_Who()
hw_api_attribute->key()
hw_api_attribute->langdepvalue()
hw_api_attribute->value()
hw_api_attribute->values()
hw_api_attribute()
hw_api->checkin()
hw_api->checkout()
hw_api->children()
hw_api_content->mimetype()
hw_api_content->read()
hw_api->content()
hw_api->copy()
hw_api->dbstat()
hw_api->dcstat()
hw_api->dstanchors()
hw_api->dstofsrcanchors()
hw_api_error->count()
hw_api_error->reason()
hw_api->find()
hw_api->ftstat()
hwapi_hgcsp()
hw_api->hwstat()
hw_api->identify()
hw_api->info()
hw_api->insert()
hw_api->insertanchor()
hw_api->insertcollection()
hw_api->insertdocument()
hw_api->link()
hw_api->lock()
hw_api->move()
hw_api_content()
hw_api_object->assign()
hw_api_object->attreditable()
hw_api_object->count()
hw_api_object->insert()
hw_api_object()
hw_api_object->remove()
hw_api_object->title()
hw_api_object->value()
hw_api->object()
hw_api->objectbyanchor()
hw_api->parents()
hw_api_reason->description()
hw_api_reason->type()
hw_api->remove()
hw_api->replace()
hw_api->setcommitedversion()
hw_api->srcanchors()
hw_api->srcsofdst()
hw_api->unlock()
hw_api->user()
hw_api->userlist()
iconv_get_encoding()
iconv_mime_decode()
iconv_mime_encode()
iconv_set_encoding()
iconv_strlen()
iconv_strpos()
iconv_strrpos()
iconv_substr()
iconv()
ob_iconv_handler()
exif_imagetype()
exif_read_data()
exif_thumbnail()
gd_info()
getimagesize()
image_type_to_mime_type()
image2wbmp()
imagealphablending()
imageantialias()
imagearc()
imagechar()
imagecharup()
imagecolorallocate()
imagecolorallocatealpha()
imagecolorat()
imagecolorclosest()
imagecolorclosestalpha()
imagecolorclosesthwb()
imagecolordeallocate()
imagecolorexact()
imagecolorexactalpha()
imagecolormatch()
imagecolorresolve()
imagecolorresolvealpha()
imagecolorset()
imagecolorsforindex()
imagecolorstotal()
imagecolortransparent()
imagecopy()
imagecopymerge()
imagecopymergegray()
imagecopyresampled()
imagecopyresized()
imagecreate()
imagecreatefromgd2()
imagecreatefromgd2part()
imagecreatefromgd()
imagecreatefromgif()
imagecreatefromjpeg()
imagecreatefrompng()
imagecreatefromstring()
imagecreatefromwbmp()
imagecreatefromxbm()
imagecreatefromxpm()
imagecreatetruecolor()
imagedashedline()
imagedestroy()
imageellipse()
imagefill()
imagefilledarc()
imagefilledellipse()
imagefilledpolygon()
imagefilledrectangle()
imagefilltoborder()
imagefontheight()
imagefontwidth()
imageftbbox()
imagefttext()
imagegammacorrect()
imagegd2()
imagegd()
imagegif()
imageinterlace()
imageistruecolor()
imagejpeg()
imageline()
imageloadfont()
imagepalettecopy()
imagepng()
imagepolygon()
imagepsbbox()
imagepscopyfont()
imagepsencodefont()
imagepsextendfont()
imagepsfreefont()
imagepsloadfont()
imagepsslantfont()
imagepstext()
imagerectangle()
imagerotate()
imagesavealpha()
imagesetbrush()
imagesetpixel()
imagesetstyle()
imagesetthickness()
imagesettile()
imagestring()
imagestringup()
imagesx()
imagesy()
imagetruecolortopalette()
imagettfbbox()
imagettftext()
imagetypes()
imagewbmp()
iptcembed()
iptcparse()
jpeg2wbmp()
png2wbmp()
read_exif_data()
imap_8bit()
imap_alerts()
imap_append()
imap_base64()
imap_binary()
imap_body()
imap_bodystruct()
imap_check()
imap_clearflag_full()
imap_close()
imap_createmailbox()
imap_delete()
imap_deletemailbox()
imap_errors()
imap_expunge()
imap_fetch_overview()
imap_fetchbody()
imap_fetchheader()
imap_fetchstructure()
imap_get_quota()
imap_get_quotaroot()
imap_getacl()
imap_getmailboxes()
imap_getsubscribed()
imap_header()
imap_headerinfo()
imap_headers()
imap_last_error()
imap_list()
imap_listmailbox()
imap_listscan()
imap_listsubscribed()
imap_lsub()
imap_mail_compose()
imap_mail_copy()
imap_mail_move()
imap_mail()
imap_mailboxmsginfo()
imap_mime_header_decode()
imap_msgno()
imap_num_msg()
imap_num_recent()
imap_open()
imap_ping()
imap_qprint()
imap_renamemailbox()
imap_reopen()
imap_rfc822_parse_adrlist()
imap_rfc822_parse_headers()
imap_rfc822_write_address()
imap_scanmailbox()
imap_search()
imap_set_quota()
imap_setacl()
imap_setflag_full()
imap_sort()
imap_status()
imap_subscribe()
imap_thread()
imap_timeout()
imap_uid()
imap_undelete()
imap_unsubscribe()
imap_utf7_decode()
imap_utf7_encode()
imap_utf8()
ifx_affected_rows()
ifx_blobinfile_mode()
ifx_byteasvarchar()
ifx_close()
ifx_connect()
ifx_copy_blob()
ifx_create_blob()
ifx_create_char()
ifx_do()
ifx_error()
ifx_errormsg()
ifx_fetch_row()
ifx_fieldproperties()
ifx_fieldtypes()
ifx_free_blob()
ifx_free_char()
ifx_free_result()
ifx_get_blob()
ifx_get_char()
ifx_getsqlca()
ifx_htmltbl_result()
ifx_nullformat()
ifx_num_fields()
ifx_num_rows()
ifx_pconnect()
ifx_prepare()
ifx_query()
ifx_textasvarchar()
ifx_update_blob()
ifx_update_char()
ifxus_close_slob()
ifxus_create_slob()
ifxus_free_slob()
ifxus_open_slob()
ifxus_read_slob()
ifxus_seek_slob()
ifxus_tell_slob()
ifxus_write_slob()
ibase_add_user()
ibase_affected_rows()
ibase_blob_add()
ibase_blob_cancel()
ibase_blob_close()
ibase_blob_create()
ibase_blob_echo()
ibase_blob_get()
ibase_blob_import()
ibase_blob_info()
ibase_blob_open()
ibase_close()
ibase_commit_ret()
ibase_commit()
ibase_connect()
ibase_delete_user()
ibase_drop_db()
ibase_errcode()
ibase_errmsg()
ibase_execute()
ibase_fetch_assoc()
ibase_fetch_object()
ibase_fetch_row()
ibase_field_info()
ibase_free_event_handler()
ibase_free_query()
ibase_free_result()
ibase_gen_id()
ibase_modify_user()
ibase_name_result()
ibase_num_fields()
ibase_num_params()
ibase_param_info()
ibase_pconnect()
ibase_prepare()
ibase_query()
ibase_rollback_ret()
ibase_rollback()
ibase_set_event_handler()
ibase_timefmt()
ibase_trans()
ibase_wait_event()
ingres_autocommit()
ingres_close()
ingres_commit()
ingres_connect()
ingres_fetch_array()
ingres_fetch_object()
ingres_fetch_row()
ingres_field_length()
ingres_field_name()
ingres_field_nullable()
ingres_field_precision()
ingres_field_scale()
ingres_field_type()
ingres_num_fields()
ingres_num_rows()
ingres_pconnect()
ingres_query()
ingres_rollback()
ircg_channel_mode()
ircg_disconnect()
ircg_fetch_error_msg()
ircg_get_username()
ircg_html_encode()
ircg_ignore_add()
ircg_ignore_del()
ircg_is_conn_alive()
ircg_join()
ircg_kick()
ircg_lookup_format_messages()
ircg_msg()
ircg_nick()
ircg_nickname_escape()
ircg_nickname_unescape()
ircg_notice()
ircg_part()
ircg_pconnect()
ircg_register_format_messages()
ircg_set_current()
ircg_set_file()
ircg_set_on_die()
ircg_topic()
ircg_whois()
java_last_exception_clear()
java_last_exception_get()
ldap_8859_to_t61()
ldap_add()
ldap_bind()
ldap_close()
ldap_compare()
ldap_connect()
ldap_count_entries()
ldap_delete()
ldap_dn2ufn()
ldap_err2str()
ldap_errno()
ldap_error()
ldap_explode_dn()
ldap_first_attribute()
ldap_first_entry()
ldap_first_reference()
ldap_free_result()
ldap_get_attributes()
ldap_get_dn()
ldap_get_entries()
ldap_get_option()
ldap_get_values_len()
ldap_get_values()
ldap_list()
ldap_mod_add()
ldap_mod_del()
ldap_mod_replace()
ldap_modify()
ldap_next_attribute()
ldap_next_entry()
ldap_next_reference()
ldap_parse_reference()
ldap_parse_result()
ldap_read()
ldap_rename()
ldap_search()
ldap_set_option()
ldap_set_rebind_proc()
ldap_sort()
ldap_start_tls()
ldap_t61_to_8859()
ldap_unbind()
ezmlm_hash()
mail()
mailparse_determine_best_xfer_encoding()
mailparse_msg_create()
mailparse_msg_extract_part_file()
mailparse_msg_extract_part()
mailparse_msg_free()
mailparse_msg_get_part_data()
mailparse_msg_get_part()
mailparse_msg_get_structure()
mailparse_msg_parse_file()
mailparse_msg_parse()
mailparse_rfc822_parse_addresses()
mailparse_stream_encode()
mailparse_uudecode_all()
abs()
acos()
acosh()
asin()
asinh()
atan2()
atan()
atanh()
base_convert()
bindec()
ceil()
cos()
cosh()
decbin()
dechex()
decoct()
deg2rad()
exp()
expm1()
floor()
fmod()
getrandmax()
hexdec()
hypot()
is_finite()
is_infinite()
is_nan()
lcg_value()
log10()
log1p()
log()
max()
min()
mt_getrandmax()
mt_rand()
mt_srand()
octdec()
pi()
pow()
rad2deg()
rand()
round()
sin()
sinh()
sqrt()
srand()
tan()
tanh()
mb_convert_case()
mb_convert_encoding()
mb_convert_kana()
mb_convert_variables()
mb_decode_mimeheader()
mb_decode_numericentity()
mb_detect_encoding()
mb_detect_order()
mb_encode_mimeheader()
mb_encode_numericentity()
mb_ereg_match()
mb_ereg_replace()
mb_ereg_search_getpos()
mb_ereg_search_getregs()
mb_ereg_search_init()
mb_ereg_search_pos()
mb_ereg_search_regs()
mb_ereg_search_setpos()
mb_ereg_search()
mb_ereg()
mb_eregi_replace()
mb_eregi()
mb_get_info()
mb_http_input()
mb_http_output()
mb_internal_encoding()
mb_language()
mb_output_handler()
mb_parse_str()
mb_preferred_mime_name()
mb_regex_encoding()
mb_regex_set_options()
mb_send_mail()
mb_split()
mb_strcut()
mb_strimwidth()
mb_strlen()
mb_strpos()
mb_strrpos()
mb_strtolower()
mb_strtoupper()
mb_strwidth()
mb_substitute_character()
mb_substr_count()
mb_substr()
mcal_append_event()
mcal_close()
mcal_create_calendar()
mcal_date_compare()
mcal_date_valid()
mcal_day_of_week()
mcal_day_of_year()
mcal_days_in_month()
mcal_delete_calendar()
mcal_delete_event()
mcal_event_add_attribute()
mcal_event_init()
mcal_event_set_alarm()
mcal_event_set_category()
mcal_event_set_class()
mcal_event_set_description()
mcal_event_set_end()
mcal_event_set_recur_daily()
mcal_event_set_recur_monthly_mday()
mcal_event_set_recur_monthly_wday()
mcal_event_set_recur_none()
mcal_event_set_recur_weekly()
mcal_event_set_recur_yearly()
mcal_event_set_start()
mcal_event_set_title()
mcal_expunge()
mcal_fetch_current_stream_event()
mcal_fetch_event()
mcal_is_leap_year()
mcal_list_alarms()
mcal_list_events()
mcal_next_recurrence()
mcal_open()
mcal_popen()
mcal_rename_calendar()
mcal_reopen()
mcal_snooze()
mcal_store_event()
mcal_time_valid()
mcal_week_of_year()
mcrypt_cbc()
mcrypt_cfb()
mcrypt_create_iv()
mcrypt_decrypt()
mcrypt_ecb()
mcrypt_enc_get_algorithms_name()
mcrypt_enc_get_block_size()
mcrypt_enc_get_iv_size()
mcrypt_enc_get_key_size()
mcrypt_enc_get_modes_name()
mcrypt_enc_get_supported_key_sizes()
mcrypt_enc_is_block_algorithm_mode()
mcrypt_enc_is_block_algorithm()
mcrypt_enc_is_block_mode()
mcrypt_enc_self_test()
mcrypt_encrypt()
mcrypt_generic_deinit()
mcrypt_generic_end()
mcrypt_generic_init()
mcrypt_generic()
mcrypt_get_block_size()
mcrypt_get_cipher_name()
mcrypt_get_iv_size()
mcrypt_get_key_size()
mcrypt_list_algorithms()
mcrypt_list_modes()
mcrypt_module_close()
mcrypt_module_get_algo_block_size()
mcrypt_module_get_algo_key_size()
mcrypt_module_get_supported_key_sizes()
mcrypt_module_is_block_algorithm_mode()
mcrypt_module_is_block_algorithm()
mcrypt_module_is_block_mode()
mcrypt_module_open()
mcrypt_module_self_test()
mcrypt_ofb()
mdecrypt_generic()
mcve_adduser()
mcve_adduserarg()
mcve_bt()
mcve_checkstatus()
mcve_chkpwd()
mcve_chngpwd()
mcve_completeauthorizations()
mcve_connect()
mcve_connectionerror()
mcve_deleteresponse()
mcve_deletetrans()
mcve_deleteusersetup()
mcve_deluser()
mcve_destroyconn()
mcve_destroyengine()
mcve_disableuser()
mcve_edituser()
mcve_enableuser()
mcve_force()
mcve_getcell()
mcve_getcellbynum()
mcve_getcommadelimited()
mcve_getheader()
mcve_getuserarg()
mcve_getuserparam()
mcve_gft()
mcve_gl()
mcve_gut()
mcve_initconn()
mcve_initengine()
mcve_initusersetup()
mcve_iscommadelimited()
mcve_liststats()
mcve_listusers()
mcve_maxconntimeout()
mcve_monitor()
mcve_numcolumns()
mcve_numrows()
mcve_override()
mcve_parsecommadelimited()
mcve_ping()
mcve_preauth()
mcve_preauthcompletion()
mcve_qc()
mcve_responseparam()
mcve_return()
mcve_returncode()
mcve_returnstatus()
mcve_sale()
mcve_setblocking()
mcve_setdropfile()
mcve_setip()
mcve_setssl_files()
mcve_setssl()
mcve_settimeout()
mcve_settle()
mcve_text_avs()
mcve_text_code()
mcve_text_cv()
mcve_transactionauth()
mcve_transactionavs()
mcve_transactionbatch()
mcve_transactioncv()
mcve_transactionid()
mcve_transactionitem()
mcve_transactionssent()
mcve_transactiontext()
mcve_transinqueue()
mcve_transnew()
mcve_transparam()
mcve_transsend()
mcve_ub()
mcve_uwait()
mcve_verifyconnection()
mcve_verifysslcert()
mcve_void()
mhash_count()
mhash_get_block_size()
mhash_get_hash_name()
mhash_keygen_s2k()
mhash()
mime_content_type()
mssql_bind()
mssql_close()
mssql_connect()
mssql_data_seek()
mssql_execute()
mssql_fetch_array()
mssql_fetch_assoc()
mssql_fetch_batch()
mssql_fetch_field()
mssql_fetch_object()
mssql_fetch_row()
mssql_field_length()
mssql_field_name()
mssql_field_seek()
mssql_field_type()
mssql_free_result()
mssql_free_statement()
mssql_get_last_message()
mssql_guid_string()
mssql_init()
mssql_min_error_severity()
mssql_min_message_severity()
mssql_next_result()
mssql_num_fields()
mssql_num_rows()
mssql_pconnect()
mssql_query()
mssql_result()
mssql_rows_affected()
mssql_select_db()
ming_setcubicthreshold()
ming_setscale()
ming_useswfversion()
SWFAction()
SWFBitmap->getHeight()
SWFBitmap->getWidth()
SWFBitmap()
swfbutton_keypress()
SWFbutton->addAction()
SWFbutton->addShape()
SWFbutton->setAction()
SWFbutton->setdown()
SWFbutton->setHit()
SWFbutton->setOver()
SWFbutton->setUp()
SWFbutton()
SWFDisplayItem->addColor()
SWFDisplayItem->move()
SWFDisplayItem->moveTo()
SWFDisplayItem->multColor()
SWFDisplayItem->remove()
SWFDisplayItem->Rotate()
SWFDisplayItem->rotateTo()
SWFDisplayItem->scale()
SWFDisplayItem->scaleTo()
SWFDisplayItem->setDepth()
SWFDisplayItem->setName()
SWFDisplayItem->setRatio()
SWFDisplayItem->skewX()
SWFDisplayItem->skewXTo()
SWFDisplayItem->skewY()
SWFDisplayItem->skewYTo()
SWFDisplayItem()
SWFFill->moveTo()
SWFFill->rotateTo()
SWFFill->scaleTo()
SWFFill->skewXTo()
SWFFill->skewYTo()
SWFFill()
swffont->getwidth()
SWFFont()
SWFGradient->addEntry()
SWFGradient()
SWFMorph->getshape1()
SWFMorph->getshape2()
SWFMorph()
SWFMovie->add()
SWFMovie->nextframe()
SWFMovie->output()
swfmovie->remove()
SWFMovie->save()
SWFMovie->setbackground()
SWFMovie->setdimension()
SWFMovie->setframes()
SWFMovie->setrate()
SWFMovie->streammp3()
SWFMovie()
SWFShape->addFill()
SWFShape->drawCurve()
SWFShape->drawCurveTo()
SWFShape->drawLine()
SWFShape->drawLineTo()
SWFShape->movePen()
SWFShape->movePenTo()
SWFShape->setLeftFill()
SWFShape->setLine()
SWFShape->setRightFill()
SWFShape()
swfsprite->add()
SWFSprite->nextframe()
SWFSprite->remove()
SWFSprite->setframes()
SWFSprite()
SWFText->addString()
SWFText->getWidth()
SWFText->moveTo()
SWFText->setColor()
SWFText->setFont()
SWFText->setHeight()
SWFText->setSpacing()
SWFText()
SWFTextField->addstring()
SWFTextField->align()
SWFTextField->setbounds()
SWFTextField->setcolor()
SWFTextField->setFont()
SWFTextField->setHeight()
SWFTextField->setindentation()
SWFTextField->setLeftMargin()
SWFTextField->setLineSpacing()
SWFTextField->setMargins()
SWFTextField->setname()
SWFTextField->setrightMargin()
SWFTextField()
connection_aborted()
connection_status()
connection_timeout()
constant()
define()
defined()
die()
eval()
exit()
get_browser()
highlight_file()
highlight_string()
ignore_user_abort()
pack()
show_source()
sleep()
uniqid()
unpack()
usleep()
udm_add_search_limit()
udm_alloc_agent()
udm_api_version()
udm_cat_list()
udm_cat_path()
udm_check_charset()
udm_check_stored()
udm_clear_search_limits()
udm_close_stored()
udm_crc32()
udm_errno()
udm_error()
udm_find()
udm_free_agent()
udm_free_ispell_data()
udm_free_res()
udm_get_doc_count()
udm_get_res_field()
udm_get_res_param()
udm_load_ispell_data()
udm_open_stored()
udm_set_agent_param()
msql_affected_rows()
msql_close()
msql_connect()
msql_create_db()
msql_createdb()
msql_data_seek()
msql_dbname()
msql_drop_db()
msql_dropdb()
msql_error()
msql_fetch_array()
msql_fetch_field()
msql_fetch_object()
msql_fetch_row()
msql_field_seek()
msql_fieldflags()
msql_fieldlen()
msql_fieldname()
msql_fieldtable()
msql_fieldtype()
msql_free_result()
msql_freeresult()
msql_list_dbs()
msql_list_fields()
msql_list_tables()
msql_listdbs()
msql_listfields()
msql_listtables()
msql_num_fields()
msql_num_rows()
msql_numfields()
msql_numrows()
msql_pconnect()
msql_query()
msql_regcase()
msql_result()
msql_select_db()
msql_selectdb()
msql_tablename()
msql()
mysql_affected_rows()
mysql_change_user()
mysql_client_encoding()
mysql_close()
mysql_connect()
mysql_create_db()
mysql_data_seek()
mysql_db_name()
mysql_db_query()
mysql_drop_db()
mysql_errno()
mysql_error()
mysql_escape_string()
mysql_fetch_array()
mysql_fetch_assoc()
mysql_fetch_field()
mysql_fetch_lengths()
mysql_fetch_object()
mysql_fetch_row()
mysql_field_flags()
mysql_field_len()
mysql_field_name()
mysql_field_seek()
mysql_field_table()
mysql_field_type()
mysql_free_result()
mysql_get_client_info()
mysql_get_host_info()
mysql_get_proto_info()
mysql_get_server_info()
mysql_info()
mysql_insert_id()
mysql_list_dbs()
mysql_list_fields()
mysql_list_processes()
mysql_list_tables()
mysql_num_fields()
mysql_num_rows()
mysql_pconnect()
mysql_ping()
mysql_query()
mysql_real_escape_string()
mysql_result()
mysql_select_db()
mysql_stat()
mysql_tablename()
mysql_thread_id()
mysql_unbuffered_query()
mysqli_affected_rows()
mysqli_autocommit()
mysqli_bind_param()
mysqli_bind_result()
mysqli_change_user()
mysqli_character_set_name()
mysqli_close()
mysqli_commit()
mysqli_connect()
mysqli_data_seek()
mysqli_debug()
mysqli_disable_reads_from_master()
mysqli_disable_rpl_parse()
mysqli_dump_debug_info()
mysqli_enable_reads_from_master()
mysqli_enable_rpl_parse()
mysqli_errno()
mysqli_error()
mysqli_execute()
mysqli_fetch_array()
mysqli_fetch_assoc()
mysqli_fetch_field_direct()
mysqli_fetch_field()
mysqli_fetch_fields()
mysqli_fetch_lengths()
mysqli_fetch_object()
mysqli_fetch_row()
mysqli_fetch()
mysqli_field_count()
mysqli_field_seek()
mysqli_field_tell()
mysqli_free_result()
mysqli_get_client_info()
mysqli_get_host_info()
mysqli_get_proto_info()
mysqli_get_server_info()
mysqli_get_server_version()
mysqli_info()
mysqli_init()
mysqli_insert_id()
mysqli_kill()
mysqli_master_query()
mysqli_num_fields()
mysqli_num_rows()
mysqli_options()
mysqli_param_count()
mysqli_ping()
mysqli_prepare_result()
mysqli_prepare()
mysqli_profiler()
mysqli_query()
mysqli_read_query_result()
mysqli_real_connect()
mysqli_real_escape_string()
mysqli_real_query()
mysqli_reload()
mysqli_rollback()
mysqli_rpl_parse_enabled()
mysqli_rpl_probe()
mysqli_rpl_query_type()
mysqli_select_db()
mysqli_send_long_data()
mysqli_send_query()
mysqli_slave_query()
mysqli_ssl_set()
mysqli_stat()
mysqli_stmt_affected_rows()
mysqli_stmt_close()
mysqli_stmt_errno()
mysqli_stmt_error()
mysqli_stmt_store_result()
mysqli_store_result()
mysqli_thread_id()
mysqli_thread_safe()
mysqli_use_result()
mysqli_warning_count()
msession_connect()
msession_count()
msession_create()
msession_destroy()
msession_disconnect()
msession_find()
msession_get_array()
msession_get()
msession_getdata()
msession_inc()
msession_list()
msession_listvar()
msession_lock()
msession_plugin()
msession_randstr()
msession_set_array()
msession_set()
msession_setdata()
msession_timeout()
msession_uniq()
msession_unlock()
muscat_close()
muscat_get()
muscat_give()
muscat_setup_net()
muscat_setup()
checkdnsrr()
closelog()
debugger_off()
debugger_on()
define_syslog_variables()
dns_check_record()
dns_get_mx()
dns_get_record()
fsockopen()
gethostbyaddr()
gethostbyname()
gethostbynamel()
getmxrr()
getprotobyname()
getprotobynumber()
getservbyname()
getservbyport()
ip2long()
long2ip()
openlog()
pfsockopen()
socket_get_status()
socket_set_blocking()
socket_set_timeout()
syslog()
ncurses_addch()
ncurses_addchnstr()
ncurses_addchstr()
ncurses_addnstr()
ncurses_addstr()
ncurses_assume_default_colors()
ncurses_attroff()
ncurses_attron()
ncurses_attrset()
ncurses_baudrate()
ncurses_beep()
ncurses_bkgd()
ncurses_bkgdset()
ncurses_border()
ncurses_bottom_panel()
ncurses_can_change_color()
ncurses_cbreak()
ncurses_clear()
ncurses_clrtobot()
ncurses_clrtoeol()
ncurses_color_content()
ncurses_color_set()
ncurses_curs_set()
ncurses_def_prog_mode()
ncurses_def_shell_mode()
ncurses_define_key()
ncurses_del_panel()
ncurses_delay_output()
ncurses_delch()
ncurses_deleteln()
ncurses_delwin()
ncurses_doupdate()
ncurses_echo()
ncurses_echochar()
ncurses_end()
ncurses_erase()
ncurses_erasechar()
ncurses_filter()
ncurses_flash()
ncurses_flushinp()
ncurses_getch()
ncurses_getmaxyx()
ncurses_getmouse()
ncurses_getyx()
ncurses_halfdelay()
ncurses_has_colors()
ncurses_has_ic()
ncurses_has_il()
ncurses_has_key()
ncurses_hide_panel()
ncurses_hline()
ncurses_inch()
ncurses_init_color()
ncurses_init_pair()
ncurses_init()
ncurses_insch()
ncurses_insdelln()
ncurses_insertln()
ncurses_insstr()
ncurses_instr()
ncurses_isendwin()
ncurses_keyok()
ncurses_keypad()
ncurses_killchar()
ncurses_longname()
ncurses_meta()
ncurses_mouse_trafo()
ncurses_mouseinterval()
ncurses_mousemask()
ncurses_move_panel()
ncurses_move()
ncurses_mvaddch()
ncurses_mvaddchnstr()
ncurses_mvaddchstr()
ncurses_mvaddnstr()
ncurses_mvaddstr()
ncurses_mvcur()
ncurses_mvdelch()
ncurses_mvgetch()
ncurses_mvhline()
ncurses_mvinch()
ncurses_mvvline()
ncurses_mvwaddstr()
ncurses_napms()
ncurses_new_panel()
ncurses_newpad()
ncurses_newwin()
ncurses_nl()
ncurses_nocbreak()
ncurses_noecho()
ncurses_nonl()
ncurses_noqiflush()
ncurses_noraw()
ncurses_pair_content()
ncurses_panel_above()
ncurses_panel_below()
ncurses_panel_window()
ncurses_pnoutrefresh()
ncurses_prefresh()
ncurses_putp()
ncurses_qiflush()
ncurses_raw()
ncurses_refresh()
ncurses_replace_panel()
ncurses_reset_prog_mode()
ncurses_reset_shell_mode()
ncurses_resetty()
ncurses_savetty()
ncurses_scr_dump()
ncurses_scr_init()
ncurses_scr_restore()
ncurses_scr_set()
ncurses_scrl()
ncurses_show_panel()
ncurses_slk_attr()
ncurses_slk_attroff()
ncurses_slk_attron()
ncurses_slk_attrset()
ncurses_slk_clear()
ncurses_slk_color()
ncurses_slk_init()
ncurses_slk_noutrefresh()
ncurses_slk_refresh()
ncurses_slk_restore()
ncurses_slk_set()
ncurses_slk_touch()
ncurses_standend()
ncurses_standout()
ncurses_start_color()
ncurses_termattrs()
ncurses_termname()
ncurses_timeout()
ncurses_top_panel()
ncurses_typeahead()
ncurses_ungetch()
ncurses_ungetmouse()
ncurses_update_panels()
ncurses_use_default_colors()
ncurses_use_env()
ncurses_use_extended_names()
ncurses_vidattr()
ncurses_vline()
ncurses_waddch()
ncurses_waddstr()
ncurses_wattroff()
ncurses_wattron()
ncurses_wattrset()
ncurses_wborder()
ncurses_wclear()
ncurses_wcolor_set()
ncurses_werase()
ncurses_wgetch()
ncurses_whline()
ncurses_wmouse_trafo()
ncurses_wmove()
ncurses_wnoutrefresh()
ncurses_wrefresh()
ncurses_wstandend()
ncurses_wstandout()
ncurses_wvline()
notes_body()
notes_copy_db()
notes_create_db()
notes_create_note()
notes_drop_db()
notes_find_note()
notes_header_info()
notes_list_msgs()
notes_mark_read()
notes_mark_unread()
notes_nav_create()
notes_search()
notes_unread()
notes_version()
nsapi_request_headers()
nsapi_response_headers()
nsapi_virtual()
odbc_autocommit()
odbc_binmode()
odbc_close_all()
odbc_close()
odbc_columnprivileges()
odbc_columns()
odbc_commit()
odbc_connect()
odbc_cursor()
odbc_data_source()
odbc_do()
odbc_error()
odbc_errormsg()
odbc_exec()
odbc_execute()
odbc_fetch_array()
odbc_fetch_into()
odbc_fetch_object()
odbc_fetch_row()
odbc_field_len()
odbc_field_name()
odbc_field_num()
odbc_field_precision()
odbc_field_scale()
odbc_field_type()
odbc_foreignkeys()
odbc_free_result()
odbc_gettypeinfo()
odbc_longreadlen()
odbc_next_result()
odbc_num_fields()
odbc_num_rows()
odbc_pconnect()
odbc_prepare()
odbc_primarykeys()
odbc_procedurecolumns()
odbc_procedures()
odbc_result_all()
odbc_result()
odbc_rollback()
odbc_setoption()
odbc_specialcolumns()
odbc_statistics()
odbc_tableprivileges()
odbc_tables()
aggregate_info()
aggregate_methods_by_list()
aggregate_methods_by_regexp()
aggregate_methods()
aggregate_properties_by_list()
aggregate_properties_by_regexp()
aggregate_properties()
aggregate()
aggregation_info()
deaggregate()
ocibindbyname()
ocicancel()
ocicloselob()
ocicollappend()
ocicollassign()
ocicollassignelem()
ocicollgetelem()
ocicollmax()
ocicollsize()
ocicolltrim()
ocicolumnisnull()
ocicolumnname()
ocicolumnprecision()
ocicolumnscale()
ocicolumnsize()
ocicolumntype()
ocicolumntyperaw()
ocicommit()
ocidefinebyname()
ocierror()
ociexecute()
ocifetch()
ocifetchinto()
ocifetchstatement()
ocifreecollection()
ocifreecursor()
ocifreedesc()
ocifreestatement()
ociinternaldebug()
ociloadlob()
ocilogoff()
ocilogon()
ocinewcollection()
ocinewcursor()
ocinewdescriptor()
ocinlogon()
ocinumcols()
ociparse()
ociplogon()
ociresult()
ocirollback()
ocirowcount()
ocisavelob()
ocisavelobfile()
ociserverversion()
ocisetprefetch()
ocistatementtype()
ociwritelobtofile()
ociwritetemporarylob()
openssl_csr_export_to_file()
openssl_csr_export()
openssl_csr_new()
openssl_csr_sign()
openssl_error_string()
openssl_free_key()
openssl_get_privatekey()
openssl_get_publickey()
openssl_open()
openssl_pkcs7_decrypt()
openssl_pkcs7_encrypt()
openssl_pkcs7_sign()
openssl_pkcs7_verify()
openssl_pkey_export_to_file()
openssl_pkey_export()
openssl_pkey_get_private()
openssl_pkey_get_public()
openssl_pkey_new()
openssl_private_decrypt()
openssl_private_encrypt()
openssl_public_decrypt()
openssl_public_encrypt()
openssl_seal()
openssl_sign()
openssl_verify()
openssl_x509_check_private_key()
openssl_x509_checkpurpose()
openssl_x509_export_to_file()
openssl_x509_export()
openssl_x509_free()
openssl_x509_parse()
openssl_x509_read()
ora_bind()
ora_close()
ora_columnname()
ora_columnsize()
ora_columntype()
ora_commit()
ora_commitoff()
ora_commiton()
ora_do()
ora_error()
ora_errorcode()
ora_exec()
ora_fetch_into()
ora_fetch()
ora_getcolumn()
ora_logoff()
ora_logon()
ora_numcols()
ora_numrows()
ora_open()
ora_parse()
ora_plogon()
ora_rollback()
ovrimos_close()
ovrimos_commit()
ovrimos_connect()
ovrimos_cursor()
ovrimos_exec()
ovrimos_execute()
ovrimos_fetch_into()
ovrimos_fetch_row()
ovrimos_field_len()
ovrimos_field_name()
ovrimos_field_num()
ovrimos_field_type()
ovrimos_free_result()
ovrimos_longreadlen()
ovrimos_num_fields()
ovrimos_num_rows()
ovrimos_prepare()
ovrimos_result_all()
ovrimos_result()
ovrimos_rollback()
flush()
ob_clean()
ob_end_clean()
ob_end_flush()
ob_flush()
ob_get_clean()
ob_get_contents()
ob_get_length()
ob_get_level()
ob_get_status()
ob_gzhandler()
ob_implicit_flush()
ob_start()
overload()
pdf_add_annotation()
pdf_add_bookmark()
pdf_add_launchlink()
pdf_add_locallink()
pdf_add_note()
pdf_add_outline()
pdf_add_pdflink()
pdf_add_thumbnail()
pdf_add_weblink()
pdf_arc()
pdf_arcn()
pdf_attach_file()
pdf_begin_page()
pdf_begin_pattern()
pdf_begin_template()
pdf_circle()
pdf_clip()
pdf_close_image()
pdf_close_pdi_page()
pdf_close_pdi()
pdf_close()
pdf_closepath_fill_stroke()
pdf_closepath_stroke()
pdf_closepath()
pdf_concat()
pdf_continue_text()
pdf_curveto()
pdf_delete()
pdf_end_page()
pdf_end_pattern()
pdf_end_template()
pdf_endpath()
pdf_fill_stroke()
pdf_fill()
pdf_findfont()
pdf_get_buffer()
pdf_get_font()
pdf_get_fontname()
pdf_get_fontsize()
pdf_get_image_height()
pdf_get_image_width()
pdf_get_majorversion()
pdf_get_minorversion()
pdf_get_parameter()
pdf_get_pdi_parameter()
pdf_get_pdi_value()
pdf_get_value()
pdf_initgraphics()
pdf_lineto()
pdf_makespotcolor()
pdf_moveto()
pdf_new()
pdf_open_CCITT()
pdf_open_file()
pdf_open_gif()
pdf_open_image_file()
pdf_open_image()
pdf_open_jpeg()
pdf_open_memory_image()
pdf_open_pdi_page()
pdf_open_pdi()
pdf_open_png()
pdf_open_tiff()
pdf_open()
pdf_place_image()
pdf_place_pdi_page()
pdf_rect()
pdf_restore()
pdf_rotate()
pdf_save()
pdf_scale()
pdf_set_border_color()
pdf_set_border_dash()
pdf_set_border_style()
pdf_set_char_spacing()
pdf_set_duration()
pdf_set_font()
pdf_set_horiz_scaling()
pdf_set_info_author()
pdf_set_info_creator()
pdf_set_info_keywords()
pdf_set_info_subject()
pdf_set_info_title()
pdf_set_info()
pdf_set_leading()
pdf_set_parameter()
pdf_set_text_matrix()
pdf_set_text_pos()
pdf_set_text_rendering()
pdf_set_text_rise()
pdf_set_value()
pdf_set_word_spacing()
pdf_setcolor()
pdf_setdash()
pdf_setflat()
pdf_setfont()
pdf_setgray_fill()
pdf_setgray_stroke()
pdf_setgray()
pdf_setlinecap()
pdf_setlinejoin()
pdf_setlinewidth()
pdf_setmatrix()
pdf_setmiterlimit()
pdf_setpolydash()
pdf_setrgbcolor_fill()
pdf_setrgbcolor_stroke()
pdf_setrgbcolor()
pdf_show_boxed()
pdf_show_xy()
pdf_show()
pdf_skew()
pdf_stringwidth()
pdf_stroke()
pdf_translate()
pfpro_cleanup()
pfpro_init()
pfpro_process_raw()
pfpro_process()
pfpro_version()
assert_options()
assert()
dl()
extension_loaded()
get_cfg_var()
get_current_user()
get_defined_constants()
get_extension_funcs()
get_include_path()
get_included_files()
get_loaded_extensions()
get_magic_quotes_gpc()
get_magic_quotes_runtime()
get_required_files()
getenv()
getlastmod()
getmygid()
getmyinode()
getmypid()
getmyuid()
getopt()
getrusage()
ini_alter()
ini_get_all()
ini_get()
ini_restore()
ini_set()
main()
memory_get_usage()
php_ini_scanned_files()
php_logo_guid()
php_sapi_name()
php_uname()
phpcredits()
phpinfo()
phpversion()
putenv()
restore_include_path()
set_include_path()
set_magic_quotes_runtime()
set_time_limit()
version_compare()
zend_logo_guid()
zend_version()
posix_ctermid()
posix_get_last_error()
posix_getcwd()
posix_getegid()
posix_geteuid()
posix_getgid()
posix_getgrgid()
posix_getgrnam()
posix_getgroups()
posix_getlogin()
posix_getpgid()
posix_getpgrp()
posix_getpid()
posix_getppid()
posix_getpwnam()
posix_getpwuid()
posix_getrlimit()
posix_getsid()
posix_getuid()
posix_isatty()
posix_kill()
posix_mkfifo()
posix_setegid()
posix_seteuid()
posix_setgid()
posix_setpgid()
posix_setsid()
posix_setuid()
posix_strerror()
posix_times()
posix_ttyname()
posix_uname()
pg_affected_rows()
pg_cancel_query()
pg_client_encoding()
pg_close()
pg_connect()
pg_connection_busy()
pg_connection_reset()
pg_connection_status()
pg_convert()
pg_copy_from()
pg_copy_to()
pg_dbname()
pg_delete()
pg_end_copy()
pg_escape_bytea()
pg_escape_string()
pg_fetch_all()
pg_fetch_array()
pg_fetch_assoc()
pg_fetch_object()
pg_fetch_result()
pg_fetch_row()
pg_field_is_null()
pg_field_name()
pg_field_num()
pg_field_prtlen()
pg_field_size()
pg_field_type()
pg_free_result()
pg_get_notify()
pg_get_pid()
pg_get_result()
pg_host()
pg_insert()
pg_last_error()
pg_last_notice()
pg_last_oid()
pg_lo_close()
pg_lo_create()
pg_lo_export()
pg_lo_import()
pg_lo_open()
pg_lo_read_all()
pg_lo_read()
pg_lo_seek()
pg_lo_tell()
pg_lo_unlink()
pg_lo_write()
pg_meta_data()
pg_num_fields()
pg_num_rows()
pg_options()
pg_pconnect()
pg_ping()
pg_port()
pg_put_line()
pg_query()
pg_result_error()
pg_result_seek()
pg_result_status()
pg_select()
pg_send_query()
pg_set_client_encoding()
pg_trace()
pg_tty()
pg_unescape_bytea()
pg_untrace()
pg_update()
pcntl_exec()
pcntl_fork()
pcntl_signal()
pcntl_waitpid()
pcntl_wexitstatus()
pcntl_wifexited()
pcntl_wifsignaled()
pcntl_wifstopped()
pcntl_wstopsig()
pcntl_wtermsig()
escapeshellarg()
escapeshellcmd()
exec()
passthru()
proc_close()
proc_get_status()
proc_nice()
proc_open()
proc_terminate()
shell_exec()
system()
printer_abort()
printer_close()
printer_create_brush()
printer_create_dc()
printer_create_font()
printer_create_pen()
printer_delete_brush()
printer_delete_dc()
printer_delete_font()
printer_delete_pen()
printer_draw_bmp()
printer_draw_chord()
printer_draw_elipse()
printer_draw_line()
printer_draw_pie()
printer_draw_rectangle()
printer_draw_roundrect()
printer_draw_text()
printer_end_doc()
printer_end_page()
printer_get_option()
printer_list()
printer_logical_fontheight()
printer_open()
printer_select_brush()
printer_select_font()
printer_select_pen()
printer_set_option()
printer_start_doc()
printer_start_page()
printer_write()
pspell_add_to_personal()
pspell_add_to_session()
pspell_check()
pspell_clear_session()
pspell_config_create()
pspell_config_ignore()
pspell_config_mode()
pspell_config_personal()
pspell_config_repl()
pspell_config_runtogether()
pspell_config_save_repl()
pspell_new_config()
pspell_new_personal()
pspell_new()
pspell_save_wordlist()
pspell_store_replacement()
pspell_suggest()
readline_add_history()
readline_clear_history()
readline_completion_function()
readline_info()
readline_list_history()
readline_read_history()
readline_write_history()
readline()
recode_file()
recode_string()
recode()
Pattern Modifiers()
Pattern Syntax()
preg_grep()
preg_match_all()
preg_match()
preg_quote()
preg_replace_callback()
preg_replace()
preg_split()
qdom_error()
qdom_tree()
ereg_replace()
ereg()
eregi_replace()
eregi()
split()
spliti()
sql_regcase()
ftok()
msg_get_queue()
msg_receive()
msg_remove_queue()
msg_send()
msg_set_queue()
msg_stat_queue()
sem_acquire()
sem_get()
sem_release()
sem_remove()
shm_attach()
shm_detach()
shm_get_var()
shm_put_var()
shm_remove_var()
shm_remove()
sesam_affected_rows()
sesam_commit()
sesam_connect()
sesam_diagnostic()
sesam_disconnect()
sesam_errormsg()
sesam_execimm()
sesam_fetch_array()
sesam_fetch_result()
sesam_fetch_row()
sesam_field_array()
sesam_field_name()
sesam_free_result()
sesam_num_fields()
sesam_query()
sesam_rollback()
sesam_seek_row()
sesam_settransaction()
session_cache_expire()
session_cache_limiter()
session_decode()
session_destroy()
session_encode()
session_get_cookie_params()
session_id()
session_is_registered()
session_module_name()
session_name()
session_regenerate_id()
session_register()
session_save_path()
session_set_cookie_params()
session_set_save_handler()
session_start()
session_unregister()
session_unset()
session_write_close()
shmop_close()
shmop_delete()
shmop_open()
shmop_read()
shmop_size()
shmop_write()
sqlite_array_query()
sqlite_busy_timeout()
sqlite_changes()
sqlite_close()
sqlite_column()
sqlite_create_aggregate()
sqlite_create_function()
sqlite_current()
sqlite_error_string()
sqlite_escape_string()
sqlite_fetch_array()
sqlite_fetch_single()
sqlite_fetch_string()
sqlite_field_name()
sqlite_has_more()
sqlite_last_error()
sqlite_last_insert_rowid()
sqlite_libencoding()
sqlite_libversion()
sqlite_next()
sqlite_num_fields()
sqlite_num_rows()
sqlite_open()
sqlite_popen()
sqlite_query()
sqlite_rewind()
sqlite_seek()
sqlite_udf_decode_binary()
sqlite_udf_encode_binary()
sqlite_unbuffered_query()
swf_actiongeturl()
swf_actiongotoframe()
swf_actiongotolabel()
swf_actionnextframe()
swf_actionplay()
swf_actionprevframe()
swf_actionsettarget()
swf_actionstop()
swf_actiontogglequality()
swf_actionwaitforframe()
swf_addbuttonrecord()
swf_addcolor()
swf_closefile()
swf_definebitmap()
swf_definefont()
swf_defineline()
swf_definepoly()
swf_definerect()
swf_definetext()
swf_endbutton()
swf_enddoaction()
swf_endshape()
swf_endsymbol()
swf_fontsize()
swf_fontslant()
swf_fonttracking()
swf_getbitmapinfo()
swf_getfontinfo()
swf_getframe()
swf_labelframe()
swf_lookat()
swf_modifyobject()
swf_mulcolor()
swf_nextid()
swf_oncondition()
swf_openfile()
swf_ortho2()
swf_ortho()
swf_perspective()
swf_placeobject()
swf_polarview()
swf_popmatrix()
swf_posround()
swf_pushmatrix()
swf_removeobject()
swf_rotate()
swf_scale()
swf_setfont()
swf_setframe()
swf_shapearc()
swf_shapecurveto3()
swf_shapecurveto()
swf_shapefillbitmapclip()
swf_shapefillbitmaptile()
swf_shapefilloff()
swf_shapefillsolid()
swf_shapelinesolid()
swf_shapelineto()
swf_shapemoveto()
swf_showframe()
swf_startbutton()
swf_startdoaction()
swf_startshape()
swf_startsymbol()
swf_textwidth()
swf_translate()
swf_viewport()
snmp_get_quick_print()
snmp_set_quick_print()
snmpget()
snmprealwalk()
snmpset()
snmpwalk()
snmpwalkoid()
socket_accept()
socket_bind()
socket_clear_error()
socket_close()
socket_connect()
socket_create_listen()
socket_create_pair()
socket_create()
socket_get_option()
socket_getpeername()
socket_getsockname()
socket_iovec_add()
socket_iovec_alloc()
socket_iovec_delete()
socket_iovec_fetch()
socket_iovec_free()
socket_iovec_set()
socket_last_error()
socket_listen()
socket_read()
socket_readv()
socket_recv()
socket_recvfrom()
socket_recvmsg()
socket_select()
socket_send()
socket_sendmsg()
socket_sendto()
socket_set_block()
socket_set_nonblock()
socket_set_option()
socket_shutdown()
socket_strerror()
socket_write()
socket_writev()
stream_context_create()
stream_context_get_options()
stream_context_set_option()
stream_context_set_params()
stream_copy_to_stream()
stream_filter_append()
stream_filter_prepend()
stream_filter_register()
stream_get_filters()
stream_get_line()
stream_get_meta_data()
stream_get_transports()
stream_get_wrappers()
stream_register_wrapper()
stream_select()
stream_set_blocking()
stream_set_timeout()
stream_set_write_buffer()
stream_socket_accept()
stream_socket_client()
stream_socket_get_name()
stream_socket_server()
stream_wrapper_register()
addcslashes()
addslashes()
bin2hex()
chop()
chr()
chunk_split()
convert_cyr_string()
count_chars()
crc32()
crypt()
echo()
explode()
fprintf()
get_html_translation_table()
hebrev()
hebrevc()
html_entity_decode()
htmlentities()
htmlspecialchars()
implode()
join()
levenshtein()
localeconv()
ltrim()
md5_file()
md5()
metaphone()
money_format()
nl_langinfo()
nl2br()
number_format()
ord()
parse_str()
print()
printf()
quoted_printable_decode()
quotemeta()
rtrim()
setlocale()
sha1_file()
sha1()
similar_text()
soundex()
sprintf()
sscanf()
str_ireplace()
str_pad()
str_repeat()
str_replace()
str_rot13()
str_shuffle()
str_split()
str_word_count()
strcasecmp()
strchr()
strcmp()
strcoll()
strcspn()
strip_tags()
stripcslashes()
stripos()
stripslashes()
stristr()
strlen()
strnatcasecmp()
strnatcmp()
strncasecmp()
strncmp()
strpos()
strrchr()
strrev()
strripos()
strrpos()
strspn()
strstr()
strtok()
strtolower()
strtoupper()
strtr()
substr_compare()
substr_count()
substr_replace()
substr()
trim()
ucfirst()
ucwords()
vprintf()
vsprintf()
wordwrap()
sybase_affected_rows()
sybase_close()
sybase_connect()
sybase_data_seek()
sybase_deadlock_retry_count()
sybase_fetch_array()
sybase_fetch_assoc()
sybase_fetch_field()
sybase_fetch_object()
sybase_fetch_row()
sybase_field_seek()
sybase_free_result()
sybase_get_last_message()
sybase_min_client_severity()
sybase_min_error_severity()
sybase_min_message_severity()
sybase_min_server_severity()
sybase_num_fields()
sybase_num_rows()
sybase_pconnect()
sybase_query()
sybase_result()
sybase_select_db()
sybase_set_message_handler()
sybase_unbuffered_query()
tidy_access_count()
tidy_clean_repair()
tidy_config_count()
tidy_diagnose()
tidy_error_count()
tidy_get_body()
tidy_get_config()
tidy_get_error_buffer()
tidy_get_head()
tidy_get_html_ver()
tidy_get_html()
tidy_get_output()
tidy_get_release()
tidy_get_root()
tidy_get_status()
tidy_getopt()
tidy_is_xhtml()
tidy_load_config()
tidy_parse_file()
tidy_parse_string()
tidy_repair_file()
tidy_repair_string()
tidy_reset_config()
tidy_save_config()
tidy_set_encoding()
tidy_setopt()
tidy_warning_count()
token_get_all()
token_name()
base64_decode()
base64_encode()
get_meta_tags()
http_build_query()
parse_url()
rawurldecode()
rawurlencode()
urldecode()
urlencode()
doubleval()
empty()
floatval()
get_defined_vars()
get_resource_type()
gettype()
import_request_variables()
intval()
is_array()
is_bool()
is_callable()
is_double()
is_float()
is_int()
is_integer()
is_long()
is_null()
is_numeric()
is_object()
is_real()
is_resource()
is_scalar()
is_string()
isset()
print_r()
serialize()
settype()
strval()
unserialize()
unset()
var_dump()
var_export()
vpopmail_add_alias_domain_ex()
vpopmail_add_alias_domain()
vpopmail_add_domain_ex()
vpopmail_add_domain()
vpopmail_add_user()
vpopmail_alias_add()
vpopmail_alias_del_domain()
vpopmail_alias_del()
vpopmail_alias_get_all()
vpopmail_alias_get()
vpopmail_auth_user()
vpopmail_del_domain_ex()
vpopmail_del_domain()
vpopmail_del_user()
vpopmail_error()
vpopmail_passwd()
vpopmail_set_user_quota()
w32api_deftype()
w32api_init_dtype()
w32api_invoke_function()
w32api_register_function()
w32api_set_call_method()
wddx_add_vars()
wddx_deserialize()
wddx_packet_end()
wddx_packet_start()
wddx_serialize_value()
wddx_serialize_vars()
utf8_decode()
utf8_encode()
xml_error_string()
xml_get_current_byte_index()
xml_get_current_column_number()
xml_get_current_line_number()
xml_get_error_code()
xml_parse_into_struct()
xml_parse()
xml_parser_create_ns()
xml_parser_create()
xml_parser_free()
xml_parser_get_option()
xml_parser_set_option()
xml_set_character_data_handler()
xml_set_default_handler()
xml_set_element_handler()
xml_set_end_namespace_decl_handler()
xml_set_external_entity_ref_handler()
xml_set_notation_decl_handler()
xml_set_object()
xml_set_processing_instruction_handler()
xml_set_start_namespace_decl_handler()
xml_set_unparsed_entity_decl_handler()
xmlrpc_decode_request()
xmlrpc_decode()
xmlrpc_encode_request()
xmlrpc_encode()
xmlrpc_get_type()
xmlrpc_parse_method_descriptions()
xmlrpc_server_add_introspection_data()
xmlrpc_server_call_method()
xmlrpc_server_create()
xmlrpc_server_destroy()
xmlrpc_server_register_introspection_callback()
xmlrpc_server_register_method()
xmlrpc_set_type()
xslt_create()
xslt_errno()
xslt_error()
xslt_free()
xslt_process()
xslt_set_base()
xslt_set_encoding()
xslt_set_error_handler()
xslt_set_log()
xslt_set_sax_handler()
xslt_set_sax_handlers()
xslt_set_scheme_handler()
xslt_set_scheme_handlers()
yaz_addinfo()
yaz_ccl_conf()
yaz_ccl_parse()
yaz_close()
yaz_connect()
yaz_database()
yaz_element()
yaz_errno()
yaz_error()
yaz_get_option()
yaz_hits()
yaz_itemorder()
yaz_present()
yaz_range()
yaz_record()
yaz_scan_result()
yaz_scan()
yaz_schema()
yaz_search()
yaz_set_option()
yaz_sort()
yaz_syntax()
yaz_wait()
yp_all()
yp_cat()
yp_err_string()
yp_errno()
yp_first()
yp_get_default_domain()
yp_master()
yp_match()
yp_next()
yp_order()
zip_close()
zip_entry_close()
zip_entry_compressedsize()
zip_entry_compressionmethod()
zip_entry_filesize()
zip_entry_name()
zip_entry_open()
zip_entry_read()
zip_open()
zip_read()
gzclose()
gzcompress()
gzdeflate()
gzencode()
gzeof()
gzfile()
gzgetc()
gzgets()
gzgetss()
gzinflate()
gzopen()
gzpassthru()
gzputs()
gzread()
gzrewind()
gzseek()
gztell()
gzuncompress()
gzwrite()
readgzfile()
zlib_get_coding_type()
;
;
; -----------------------------------------------------------------------------
;  user-defined templates
; -----------------------------------------------------------------------------
