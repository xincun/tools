{\rtf1\ansi\ansicpg1250\deff0\deflang1029\deflangfe1029{\fonttbl{\f0\fswiss\fprq2\fcharset238{\*\fname Arial;}Arial CE;}{\f1\froman\fprq2\fcharset238{\*\fname Times New Roman;}Times New Roman CE;}{\f2\fmodern\fprq1\fcharset238{\*\fname Courier New;}Courier New CE;}{\f3\fnil\fcharset238{\*\fname Courier New;}Courier New CE;}{\f4\fnil\fcharset238{\*\fname Arial;}Arial CE;}{\f5\fmodern Courier New;}{\f6\fmodern\fcharset0 Courier New;}{\f7\fmodern\fcharset238{\*\fname Courier New;}Courier New CE;}}
{\colortbl ;\red255\green0\blue0;\red0\green0\blue255;\red0\green128\blue0;\red128\green0\blue0;\red0\green0\blue0;\red128\green0\blue128;\red0\green128\blue128;\red72\green72\blue72;}
{\*\generator Msftedit 5.41.21.2510;}\viewkind4\uc1\pard\nowidctlpar\b\f0\fs28 PSPad editor script interface description\par
\b0\f1\fs24\par
\b\f0 Note!\par
\cf1\b0\fs18 Don\rquote t place any non script files direct into script language subdirectories !\par
\cf0 All files e.g. in VBScript subrirectory are consider as script and non script file causes compilation error.\par
\fs24\par
\b modules library\par
\b0\fs18\par
You can write own library and share function from library in other scripts. Unique module_name is identifier.\par
To call function from other module, place module name before function name:\par
\cf2\b\f2 myLibrary.someFunction\b0 ()\cf0\par
\f0\fs24\par
\par
\b global functions/subroutines\par
\par
\cf2\f2\fs20 addMenuItem\b0 (caption: string; submenu: string; procedure: string)\par
\cf3\f0\fs18 creates menu item in PSPad main menu. if you don't want submenu, send empty string as parameter\par
Its contained in script \b Init\b0  subroutine and works only during Init phase. All other calling is ignored.\par
\cf2\b\f2\fs20\par
echo\b0 (text: string)\b\par
\cf3\b0\f0\fs18 information box with text and button OK\par
\cf2\b\f2\fs20 sleep\b0 (ms: integer)\b\par
\cf3\b0\f0\fs18 stops script execution for number of miliseconds\par
\pard\cf2\b\f3\fs20 inputText\b0 (label [, default_value [, cancel_value]]: string): string\par
\pard\nowidctlpar\cf3\f4\fs18 input text dialog. Cancel_value is returned after press Cancel button.\par
\cf2\b\f2\fs20\par
setClipboardText\b0 (text: string)\b\par
\cf3\b0\f0\fs18 stores text into clipboard\par
\cf2\b\f2\fs20 getClipboardText\b0 (): string\b\par
\cf3\b0\f0\fs18 returns text from clipboad\par
\cf2\b\f2\fs20\par
runPSPadAction\b0 (ActionName: string)\par
\cf3\f0\fs18 allows to run any PSPad editor action. List of actions follows.\par
\cf2\b\f2\fs20 getVariable\b0 (name: string)\par
\cf3\f0\fs18 returns value of variable passed as parameter.\par
\cf0\f2\fs24\par
\cf2\b\fs20 logClear\par
\cf3\b0\f0\fs18 clears whole LOG window content\par
\cf2\b\f2\fs20 logAddLine\b0 (test: string)\b\par
\cf3\b0\f0\fs18 adds new line into LOG\par
\cf2\b\f2\fs20 logGetLine\b0 (index: integer): string\par
\cf3\f0\fs18 returns line from LOG, identified by index parameter (numbered from 0)\par
\cf2\b\f2\fs20 logSetLine\b0 (index: integer, test: string)\b\par
\cf3\b0\f0\fs18 sets log line, identified by index\par
\cf2\b\f2\fs20 logLinesCount\b0 (): Integer\b\par
\cf3\b0\f0\fs18 returns current number of LOG window lines\par
\cf2\b\f2\fs20 logLineIndex\b0 ([index: integer]): Integer\b\par
\cf3\b0\f0\fs18 sets or returns (if no parameter) current line index of LOG window\par
\cf2\b\f2\fs20 logSetTypeMemo\par
\cf3\b0\f0\fs18 sets LOG window type to memo style - you are able to make free selection, byt without error marks\par
\cf2\b\f2\fs20 logSetTypeList\par
\cf3\b0\f0\fs18 sets LOG window type to list style - only line by line selection, but with error marks\par
\cf2\b\f2\fs20 logSetParser\b0 (expression: string): string\par
\cf3\f0\fs18 sets LOG parser expression\par
\cf2\b\f2\fs20\par
pspadVersion\b0 (): string\par
\cf3\f0\fs18 returns PSPad version\par
\cf2\b\f2\fs20 moduleExists\b0 (name: string):boolean\par
\cf3\f0\fs18 returns True if script module exists\par
\cf2\b\f2\fs20 moduleVersion\b0 (name: string):string\par
\cf3\f0\fs18 returns version of module, if module doesn't exists, returns empty string\par
\cf2\b\f2\fs20 moduleFileName\b0 (name: string):string\par
\cf3\f0\fs18 returns file name of module, if module doesn't exists, returns empty string.\par
\cf2\b\f2\fs20 modulePath\b0 ():string\par
\cf3\f0\fs18 returns module file path include last backslash\par
\cf2\b\f2\fs20\par
closeEditorByTitle\b0 (file_name: string): boolean\par
\cf3\f0\fs18 closes editor by filename\par
\cf2\b\f2\fs20 closeEditorByIndex\b0 (index: integer): boolean\par
\cf3\f0\fs18 closes editor by index\par
\cf2\b\f2\fs20 closeAllEditors\b0\par
\cf3\f0\fs18 closes all editor windows\par
\pard\cf2\b\f3\fs20 editorsCount\b0 : integer\par
\cf3\f4\fs18 returns number of open editors\par
\cf2\b\f3\fs20\par
projectFilesCount\b0 : integer\par
\cf3\f4\fs18 returns number of files (not folders) in project. Use cycle from 0 to projectFilesCount-1\par
\cf2\b\f3\fs20 projectFiles\b0 (index: integer): string\par
\cf3\f4\fs18 returns file name for index. If file doesn't exists, returns empty string\par
\cf2\b\f3\fs20 projectItemsCount\b0 : integer\par
\cf3\f4\fs18 returns number of all items (files and folders) in project. Use cycle from 0 to projectFilesCount-1\par
\cf2\b\f3\fs20 projectItems\b0 (index: integer): string\par
\cf3\f4\fs18 returns item name for index. If item doesn't exists, returns empty string\par
\cf2\b\f3\fs20 projectItemType\b0 (index: integer): integer\par
\cf3\f4\fs18 returns project item type. 1: folder, 2: file, -1: item doesn't exists\par
\cf2\b\f3\fs20 projectFileName\b0 : string\par
\cf3\f4\fs18 returns project file name\par
\cf2\b\f3\fs20 projectSave\par
\cf3\b0\f4\fs18 saves project\par
\par
\cf2\b\f3\fs20 ftpConnect\b0 (connection_name: string): boolean\par
\cf3\f4\fs18 connect to in PSPad defined FTP connection\par
\cf2\b\f3\fs20 ftpDisconnect\par
\cf3\b0\f4\fs18 disconnect FTP server\par
\cf2\b\f3\fs20 ftpCommand\b0 (command: string): string\par
\cf3\f4\fs18 send command to FTP server, e.g. "CWD \\public\\www". Function returns FTP server return stringserveru\par
\cf2\b\f3\fs20 ftpDownloadFile\b0 (ftp_filename, local_filename): boolean\par
\cf3\f4\fs18 download file from ftp and stored it as local file\par
\cf2\b\f3\fs20 ftpUploadFile\b0 (local_filename, ftp_filename, [refresh]): boolean\par
\cf3\f4\fs18 uploads local file to current FTP directory, when refresh parameters is send, FTP folder will be refreshed after uload\par
\cf2\b\f3\fs20 ftpRefresh\b0\par
\cf3\f4\fs18 refresh current ftp folder\par
\par
\pard\nowidctlpar\cf2\b\f2\fs20 newEditor\b0 (): object\par
\cf3\f0\fs18 creates new object for editor handling\par
\cf0\f2\fs24\par
\b\f0 editor object function\par
\par
\cf2\f2\fs20 assignEditorByName\b0 (file_name: string): boolean\par
\cf3\f0\fs18 assign editor window to object by file name\par
\cf2\b\f2\fs20 assignEditorByIndex\b0 (index: integer): boolean\par
\cf3\f0\fs18 assign editor window to object by editor index\par
\cf2\b\f2\fs20 assignActiveEditor\b0 (): boolean\par
\cf3\f0\fs18 assign active editor window into object and show it\par
\cf4\b\f2\fs20 assignLog\b0 (): boolean\par
\cf3\f0\fs18 this function is obsolete now. Is replaced with logXXXXX() functions. Now returns always 0, in the past returns always 1\par
\cf2\b\f2\fs20 newFile\b0 ([file_name: string]): boolean\par
\cf3\f0\fs18 creates new file in PSPad. File name is optional\par
\cf2\b\f2\fs20 openFile\b0 (file_name: string): boolean\par
\cf3\f0\fs18 opens existing file in new editor window\par
\cf2\b\f2\fs20 saveFile\b0 (): boolean\par
\cf3\f0\fs18 saves file\par
\cf2\b\f2\fs20 saveFileAs\b0 (file_name: string): boolean\par
\cf3\f0\fs18 saves file as\par
\cf2\b\f2\fs20 reloadFile\b0 (): boolean\par
\cf3\f0\fs18 reload file\par
\cf2\b\f2\fs20 closeFile\b0 (): boolean\par
\cf3\f0\fs18 closes file\par
\cf2\b\f2\fs20 activate\b0 (): boolean\par
\cf3\f0\fs18 brings editor to front\par
\cf2\b\f2\fs20 printFile\b0 (boolean): boolean\par
\cf3\f0\fs18 if parameters is 1 then PrintDialog appears before print\par
\cf2\b\f2\fs20 readOnly\b0 ([boolean]): boolean\par
\cf3\f0\fs18 returns if no param or sets editor ReadOnly state\par
\cf2\b\f2\fs20 modified\b0 ([boolean]): boolean\par
\cf3\f0\fs18 returns if no param or sets editor Modified state\par
\cf2\b\f2\fs20 text\b0 (string):string\par
\cf3\f0\fs18 replaces/returns all editor text\par
\cf2\b\f2\fs20 selText\b0 (string): string\par
\cf3\f0\fs18 replaces/returns selected text from editor\par
\cf2\b\f2\fs20 lineText\b0 (string): string\par
\cf3\f0\fs18 replaces/returns content of active line\par
\cf2\b\f2\fs20 linesCount\b0 (): integer\par
\cf3\f0\fs18 returns editor lines count\par
\cf2\b\f2\fs20 appendText\b0 (string): boolean\par
\cf3\f0\fs18 appends text to editor end\par
\cf2\b\f2\fs20 fileName\b0 (string): string\par
\cf3\f0\fs18 sets/returns editor file name\par
\cf2\b\f2\fs20 command\b0 (editor_command: string): boolean\par
\cf3\f0\fs18 runs editor command processor command\par
\cf2\b\f2\fs20 setCaretPos\b0 (x: integer; y: integer): boolean\par
\cf3\f0\fs18 sets editor caret position. -1 in  parameter mean no change coordinate\par
\cf2\b\f2\fs20 caretX\b0 (integer): integer\par
\cf3\f0\fs18 sets/returns editor CaretX position\par
\cf2\b\f2\fs20 caretY\b0 (integer): integer\par
\cf3\f0\fs18 sets/returns editor CaretY position\par
\pard\cf2\b\f3\fs20 setBlockBegin\b0 (x: integer; y: integer): boolean\par
\cf3\f4\fs18 sets start of the block\par
\cf2\b\f3\fs20 setBlockEnd\b0 (x: integer; y: integer): boolean\par
\cf3\f4\fs18 sets end of the block\par
\cf2\b\f3\fs20 selectionMode\b0 ([s: string]): string\par
\cf3\f4\fs18 sets selection mode. C: column, N: normal, L: line selection\par
if no parameter is sent, function returns C for column, N for normal and L for line selection mode of current editor\par
\cf2\b\f3\fs20 blockBeginX\b0 : integer\par
\cf3\f4\fs18 returns block start column\par
\cf2\b\f3\fs20 blockBeginY\b0 : integer\par
\cf3\f4\fs18 returns block start line\par
\cf2\b\f3\fs20 blockEndX\b0 : integer\par
\cf3\f4\fs18 returns block end column\par
\cf2\b\f3\fs20 blockEndY\b0 : integer\par
\cf3\f4\fs18 returns block end line\par
\cf2\b\f3\fs20 selStart\b0 (integer): integer\par
\cf3\f4\fs18 returns/sets block start\par
\cf2\b\f3\fs20 selLength\b0 (integer): integer\par
\pard\nowidctlpar\cf3\f4\fs18 returns/sets block length\f0\par
\pard\cf2\b\f3\fs20 highlighter\b0 ([s: string]): string\par
\cf3\f4\fs18 returns/set highlighter for editor\par
\pard\nowidctlpar\cf0\b\f0\fs24\par
editor commands list\par
\par
\pard\nowidctlpar\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\cf2\b0\f2\fs20 ecLeft            \cf0\f0 move cursor left one char\par
\cf2\f2 ecRight           \cf0\f0 move cursor right one char\par
\cf2\f2 ecUp              \cf0\f0 move cursor up one line\par
\cf2\f2 ecDown            \cf0\f0 move cursor down one line\par
\cf2\f2 ecWordLeft        \cf0\f0 move cursor left one word\par
\cf2\f2 ecWordRight       \cf0\f0 move cursor right one word\par
\cf2\f2 ecLineStart       \cf0\f0 move cursor to beginning of line\par
\cf2\f2 ecLineEnd         \cf0\f0 move cursor to end of line\par
\cf2\f2 ecPageUp          \cf0\f0 move cursor up one page\par
\cf2\f2 ecPageDown        \cf0\f0 move cursor down one page\par
\cf2\f2 ecPageLeft        \cf0\f0 move cursor right one page\par
\cf2\f2 ecPageRight       \cf0\f0 move cursor left one page\par
\cf2\f2 ecPageTop         \cf0\f0 move cursor to top of page\par
\cf2\f2 ecPageBottom      \cf0\f0 move cursor to bottom of page\par
\cf2\f2 ecEditorTop       \cf0\f0 move cursor to absolute beginning\par
\cf2\f2 ecEditorBottom    \cf0\f0 move cursor to absolute end\par
\cf2\f2 ecNextLineStart   \cf0\f0 move cursor to next line begining\cf5\par
\cf0                    \par
\cf2\f2 ecSelLeft         \cf0\f0 ecLeft + ecSelection;\par
\cf2\f2 ecSelRight        \cf0\f0 ecRight + ecSelection;\par
\cf2\f2 ecSelUp           \cf0\f0 ecUp + ecSelection;\par
\cf2\f2 ecSelDown         \cf0\f0 ecDown + ecSelection;\par
\cf2\f2 ecSelWordLeft     \cf0\f0 ecWordLeft + ecSelection;\par
\cf2\f2 ecSelWordRight    \cf0\f0 ecWordRight + ecSelection;\par
\cf2\f2 ecSelLineStart    \cf0\f0 ecLineStart + ecSelection;\par
\cf2\f2 ecSelLineEnd      \cf0\f0 ecLineEnd + ecSelection;\par
\cf2\f2 ecSelPageUp       \cf0\f0 ecPageUp + ecSelection;\par
\cf2\f2 ecSelPageDown     \cf0\f0 ecPageDown + ecSelection;\par
\cf2\f2 ecSelPageLeft     \cf0\f0 ecPageLeft + ecSelection;\par
\cf2\f2 ecSelPageRight    \cf0\f0 ecPageRight + ecSelection;\par
\cf2\f2 ecSelPageTop      \cf0\f0 ecPageTop + ecSelection;\par
\cf2\f2 ecSelPageBottom   \cf0\f0 ecPageBottom + ecSelection;\par
\cf2\f2 ecSelEditorTop    \cf0\f0 ecEditorTop + ecSelection;\par
\cf2\f2 ecSelEditorBottom \cf0\f0 ecEditorBottom + ecSelection;\par
                    \par
\cf2\f2 ecScrollUp        \cf0\f0 scroll up one line leaving cursor position unchanged.\par
\cf2\f2 ecScrollDown      \cf0\f0 scroll down one line leaving cursor position unchanged.\par
\cf2\f2 ecScrollLeft      \cf0\f0 scroll left one char leaving cursor position unchanged.\par
\cf2\f2 ecScrollRight     \cf0\f0 scroll right one char leaving cursor position unchanged.\par
                    \par
\cf2\f2 ecInsertMode      \cf0\f0 set insert mode\par
\cf2\f2 ecOverwriteMode   \cf0\f0 set overwrite mode\par
\cf2\f2 ecToggleMode      \cf0\f0 toggle ins/ovr mode\par
                    \par
\cf2\f2 ecNormalSelect    \cf0\f0 normal selection mode\par
\cf2\f2 ecColumnSelect    \cf0\f0 column selection mode\par
\cf2\f2 ecLineSelect      \cf0\f0 line selection mode\par
                    \par
\cf2\f2 ecMatchBracket    \cf0\f0 go to matching bracket\par
                    \par
\cf2\f2 ecGotoMarker0     \cf0\f0 goto marker\par
\cf2\f2 ...\cf0\f0\par
\cf2\f2 ecGotoMarker9     \cf0\f0 goto marker\par
\cf2\f2 ecSetMarker0      \cf0\f0 set marker\par
\cf2\f2 ...\cf0\f0\par
\cf2\f2 ecSetMarker9      \cf0\f0 set marker\par
                    \par
\cf2\f2 ecDeleteLastChar  \cf0\f0 delete last char (i.e. backspace key)\par
\cf2\f2 ecDeleteChar      \cf0\f0 delete char at cursor (i.e. delete key)\par
\cf2\f2 ecDeleteWord      \cf0\f0 delete from cursor to end of word\par
\cf2\f2 ecDeleteLastWord  \cf0\f0 delete from cursor to start of word\par
\cf2\f2 ecDeleteBOL       \cf0\f0 delete from cursor to beginning of line\par
\cf2\f2 ecDeleteEOL       \cf0\f0 delete from cursor to end of line\par
\cf2\f2 ecDeleteLine      \cf0\f0 delete current line\par
\cf2\f2 ecClearAll        \cf0\f0 delete everything\par
\cf2\f2 ecLineBreak       \cf0\f0 break line at current position, move caret to new line\par
\cf2\f2 ecInsertLine      \cf0\f0 break line at current position, leave caret\par
                    \par
\cf2\f2 ecUndo            \cf0\f0 perform undo if available\par
\cf2\f2 ecRedo            \cf0\f0 perform redo if available\par
\cf2\f2 ecCut             \cf0\f0 cut selection to clipboard\par
\cf2\f2 ecPaste           \cf0\f0 paste clipboard to current position\par
\cf2\f2 ecSelectAll       \cf0\f0 select entire content of editor, cursor to end\par
\cf2\f2 ecCopy            \cf0\f0 copy selection to clipboard\par
                    \par
\cf2\f2 ecBlockIndent     \cf0\f0 indent selection\par
\cf2\f2 ecBlockUnindent   \cf0\f0 unindent selection\par
\cf2\f2 ecTab             \cf0\f0 tab key\par
\cf2\f2 ecShiftTab        \cf0\f0 shift+Tab key\par
                    \par
\cf2\f2 ecUpperCase       \cf0\f0 apply to the current or previous word\par
\cf2\f2 ecLowerCase         \par
ecToggleCase        \par
ecTitleCase         \par
ecUpperCaseBlock  \cf0\f0 apply to current selection, or current char if no selection\par
\cf2\f2 ecLowerCaseBlock    \par
ecToggleCaseBlock   \par
\pard\nowidctlpar\cf5\par
\cf0\b\f0\fs24 PSPad actions list\par
\pard\nowidctlpar\tx2840\b0\fs20\par
\cf2\f2 aAddDiacritic\tab\cf0\f0 Add accent marks (dictionary is required)\par
\cf2\f2 aAddFile\tab\cf0\f0 Add current file to project\par
\cf2\f2 aAddFilesToFolder\tab\cf0\f0 Add Files to project - dialog\par
\cf2\f2 aAddFolder\tab\cf0\f0 New folder to project\par
\cf2\f2 aAllToASCII\tab\cf0\f0 Remove Accent from chars\par
\cf2\f2 aANSIToBase64\tab\cf0\f0 Encode all text/selected text to Base64\par
\cf2\f2 aANSIToQuotedPrint\tab\cf0\f0 Encode all text/selected text to Quoted printable\par
\cf2\f2 aANSIToURL\tab\cf0\f0 Encode all text/selected text to URL adress form\par
\cf2\f2 aAutoCompl\tab\cf0\f0 Auto completion\par
\cf2\f2 aAutoRefresh\tab\cf0\f0 Set Autorefresh flag for window\par
\cf2\f2 aBase64ToANSI\tab\cf0\f0 Decode all text/selected text from Base64\par
\cf2\f2 aBlockAlign\tab\cf0\f0 Align selection to block\par
\cf2\f2 aBlockCenter\tab\cf0\f0 Justify block to the center\par
\cf2\f2 aBlockLeft\tab\cf0\f0 Justify block to the left\par
\cf2\f2 aBlockRight\tab\cf0\f0 Justify block to the right\par
\cf2\f2 aCapitalize\tab\cf0\f0 Capitalize block\par
\cf2\f2 aClose\tab\cf0\f0 Close window\par
\cf2\f2 aCloseAll\tab\cf0\f0 Close All\par
\cf2\f2 aCodeExplorer\tab\cf0\f0 Code Explorer window\par
\cf2\f2 aCodeFormat\tab\cf0\f0 Code Case Change dialog\par
\cf2\f2 aColorSelect\tab\cf0\f0 Color Selector window\par
\cf2\f2 aComment\tab\cf0\f0 Add/Remove Comment\par
\cf2\f2 aCompile\tab\cf0\f0 Compile\par
\cf2\f2 aCopy\tab\cf0\f0 Copy\par
\cf2\f2 aCopyLine\tab\cf0\f0 Copy Line\par
\cf2\f2 aCSSToInLine\tab\cf0\f0 Reformat into Inline CSS\par
\cf2\f2 aCSSToStructure\tab\cf0\f0 Reformat into Structured CSS\par
\cf2\f2 aCSVImport\tab\cf0\f0 Import from CSV dialog\par
\cf2\f2 aCut\tab\cf0\f0 Cut\par
\cf2\f2 aDateTime\tab\cf0\f0 Insert Date Time\par
\cf2\f2 aDateTimeDialog\tab\cf0\f0 Date Time Dialog\par
\cf2\f2 aDecToHex\tab\cf0\f0 Decimal to Hexadecimal selection\par
\cf2\f2 aDelete\tab\cf0\f0 Delete\par
\cf2\f2 aDelFolder\tab\cf0\f0 Remove Folder from project\par
\cf2\f2 aDelMark\tab\cf0\f0 Delete Bookmark\par
\cf2\f2 aDelMarks\tab\cf0\f0 Delete all Bookmarks\par
\cf2\f2 aDiffSame\tab\cf0\f0 Text Diff with File Contents on Disk\par
\cf2\f2 aExit\tab\cf0\f0 Exit\par
\cf2\f2 aExpClipHTML\tab\cf0\f0 Export to Clipboard as HTML\par
\cf2\f2 aExpClipRTF\tab\cf0\f0 Export to Clipboard as RTF\par
\cf2\f2 aExpClipTeX\tab\cf0\f0 Export to Clipboard as &TeX\par
\cf2\f2 aExpClipXHTML\tab\cf0\f0 Export to clipboard as XHTML\par
\cf2\f2 aExport\tab\cf0\f0 Export dialog\par
\cf2\f2 aFilesSearch\tab\cf0\f0 Search / Replace in Files dialog\par
\cf2\f2 aFind\tab\cf0\f0 Find dialog\par
\cf2\f2 aFindNext\tab\cf0\f0 Find Next\par
\cf2\f2 aFindPrev\tab\cf0\f0 Find Previous\par
\cf2\f2 aFindPrevWord\tab\cf0\f0 Previous Occurrence of Current Word\par
\cf2\f2 aFindWord\tab\cf0\f0 Next Occurrence of Current Word\par
\cf2\f2 aFont\tab\cf0\f0 Font dialog\par
\cf2\f2 aFullScreen\tab\cf0\f0 Full Screen mode\par
\cf2\f2 aGoogleSearch\tab\cf0\f0 Google Search dialog\par
\cf2\f2 aGotoLine\tab\cf0\f0 Goto Line dialog\par
\cf2\f2 aGUID\tab\cf0\f0 Insert GUID\par
\cf2\f2 aHexToDec\tab\cf0\f0 Hexadecimal to Decimal selection\par
\cf2\f2 aHTMLCompress\tab\cf0\f0 Compress HTML code\par
\cf2\f2 aHtmlCheck\tab\cf0\f0 Check HTML code\par
\cf2\f2 aHTMLPrev\tab\cf0\f0 HTML Page Preview\par
\cf2\f2 aHTMLReformat\tab\cf0\f0 Reformat HTML code\par
\cf2\f2 aHTMLSelTag\tab\cf0\f0 Select TAG\par
\cf2\f2 aIndent\tab\cf0\f0 Indent Block\par
\cf2\f2 aInfo\tab\cf0\f0 File Info\par
\cf2\f2 aInserFile\tab\cf0\f0 Insert From File...\par
\cf2\f2 aInsertText\tab\cf0\f0 Insert Text into Lines...\par
\cf2\f2 aInvertCase\tab\cf0\f0 Invert Case\par
\cf2\f2 aJoinLine\tab\cf0\f0 Join Lines\par
\cf2\f2 aLangHelp\tab\cf0\f0 Help for Language\par
\cf2\f2 aLastUserConvertor\tab\cf0\f0 Run Last used convertor\par
\cf2\f2 aLineNum\tab\cf0\f0 Line Numbers\par
\cf2\f2 aLogWindow\tab\cf0\f0 Show / Hide LOG window\par
\cf2\f2 aLoremIpsum\tab\cf0\f0 Lorem Ipsum generator\par
\cf2\f2 aLowerCase\tab\cf0\f0 To Lower Case\par
\cf2\f2 aMacroMgr\tab\cf0\f0 Macro Manager\par
\cf2\f2 aMacroPlay\tab\cf0\f0 Play Macro\par
\cf2\f2 aMacroRecord\tab\cf0\f0 Start / Stop Recording\par
\cf2\f2 aMailContents\tab\cf0\f0 As e-mail Contents\par
\cf2\f2 aMailFile\tab\cf0\f0 As e-mail Attachment\par
\cf2\f2 aMarkDown\tab\cf0\f0 Next Bookmark\par
\cf2\f2 aMarkList\tab\cf0\f0 Bookmark List\par
\cf2\f2 aMarkUp\tab\cf0\f0 Previous Bookmark\par
\cf2\f2 aMatchBracket\tab\cf0\f0 Matching Bracket\par
\cf2\f2 aMD5Gen\tab\cf0\f0 Hash generator dialog\par
\cf2\f2 aMoveAs\tab\cf0\f0 Move as dialog\par
\cf2\f2 aNew\tab\cf0\f0 New file dialog\par
\cf2\f2 aOpen\tab\cf0\f0 Open file dialog\par
\cf2\f2 aOpenCopy\tab\cf0\f0 Open Active File with New Name dialog\par
\cf2\f2 aOpenHex\tab\cf0\f0 Open in HEX Editor dialog\par
\cf2\f2 aOpenSame\tab\cf0\f0 Open R/O copy of Active File\par
\cf2\f2 aOpenSelected\tab\cf0\f0 Open file appointed by selection\par
\cf2\f2 aOpenWWWFile\tab\cf0\f0 Open File from Internet dialog\par
\cf2\f2 aPageSetup\tab\cf0\f0 Page Setup dialog\par
\cf2\f2 aPaste\tab\cf0\f0 Paste\par
\cf2\f2 aPasteHTML\tab\cf0\f0 Paste as HTML\par
\cf2\f2 aPasteNoMove\tab\cf0\f0 Paste Without Cursor Change\par
\cf2\f2 aPrint\tab\cf0\f0 Print file\par
\cf2\f2 aPrintPrev\tab\cf0\f0 Print Preview\par
\cf2\f2 aPrintSetup\tab\cf0\f0 Printer Settings dialog\par
\cf2\f2 aProjAddOpen\tab\cf0\f0 Add all open files to project\par
\cf2\f2 aProjFolderClose\tab\cf0\f0 Close files of current project folder\par
\cf2\f2 aProjFolderOpen\tab\cf0\f0 Open files of current prject folder\par
\cf2\f2 aProjFromDir\tab\cf0\f0 Create Project from Directory dialog\par
\cf2\f2 aProjInfo\tab\cf0\f0 Project Information dialog\par
\cf2\f2 aProjMainFile\tab\cf0\f0 Set File as Main for Compiler\par
\cf2\f2 aProjNew\tab\cf0\f0 New Project (closes all)\par
\cf2\f2 aProjOpen\tab\cf0\f0 Open Project dialog\par
\cf2\f2 aProjSave\tab\cf0\f0 Save Project\par
\cf2\f2 aProjSaveas\tab\cf0\f0 Save Project as dialog\par
\cf2\f2 aProjSettings\tab\cf0\f0 Project Settings dialog\par
\cf2\f2 aProjShow\tab\cf0\f0 Show/hide left Panel\par
\cf2\f2 aQuotedPrintToANSI\tab\cf0\f0 Decode all text/selected text from Quoted printable\par
\cf2\f2 aReadOnly\tab\cf0\f0 Read Only on/off for file\par
\cf2\f2 aRedo\tab\cf0\f0 Redo\par
\cf2\f2 aReformat\tab\cf0\f0 Reformat block (paragraph=blank line)\par
\cf2\f2 aReformat2\tab\cf0\f0 Reformat block (paragraph=short line)\par
\cf2\f2 aRemoveBlankLines\f0\tab\cf0 Remove Blank Lines\par
\cf2\f2 aRemoveFile\tab\cf0\f0 Remove File from Project\par
\cf2\f2 aRemoveRedundantBlank\f0\tab\cf0 Remove Redundant Blank Lines\par
\cf2\f2 aRemoveSpaces\tab\cf0\f0 Remove Redundant Spaces dialog\par
\cf2\f2 aRemoveTags\tab\cf0\f0 Remove HTML tags - it opens result in new window\par
\cf2\f2 aReOpen\tab\cf0\f0 Reopen Active File\par
\cf2\f2 aRepeatLastAction\tab\cf0\f0 Repeat last command\par
\cf2\f2 aReplace\tab\cf0\f0 Replace dialog\par
\cf2\f2 aRollBar\tab\cf0\f0 Ruler on/off\par
\cf2\f2 aRTFImport\tab\cf0\f0 Import text from RTF\par
\cf2\f2 aSave\tab\cf0\f0 Save current file\par
\cf2\f2 aSaveAll\tab\cf0\f0 Save All files\par
\cf2\f2 aSaveAs\tab\cf0\f0 Save As dialog\par
\cf2\f2 aSaveBlock\tab\cf0\f0 Save Block As dialog\par
\cf2\f2 aSaveSameTime\tab\cf0\f0 Save Without changing File Date\par
\cf2\f2 aSaveToFTP\tab\cf0\f0 Save to FTP\par
\cf2\f2 aScriptsRecompile\tab\cf0\f0 Recompile scripts\par
\cf2\f2 aSelectAll\tab\cf0\f0 Select All\par
\cf2\f2 aSelectNext\tab\cf0\f0 Next Window\par
\cf2\f2 aSelectPrew\tab\cf0\f0 Previous Window\par
\cf2\f2 aSelMatchBracket\tab\cf0\f0 Select Inside Brackets\par
\cf2\f2 aSelString\tab\cf0\f0 Select String\par
\cf2\f2 aSendToDisk\tab\cf0\f0 Save to Drive A:\par
\cf2\f2 aSentensize\tab\cf0\f0 Sentensize selection\par
\cf2\f2 aSetMain\tab\cf0\f0 Set as Main File for Compiler\par
\cf2\f2 aSetMark\tab\cf0\f0 Set Bookmark\par
\cf2\f2 aShellOpen\tab\cf0\f0 Open with associated application\par
\cf2\f2 aShowControlBar\tab\cf0\f0 Show/hide all toolbars\par
\cf2\f2 aShowSpecChar\tab\cf0\f0 Show/hide nonprinted characters\par
\cf2\f2 aSort\tab\cf0\f0 Sort dialog\par
\cf2\f2 aSpell\tab\cf0\f0 Online Spell Check on/off\par
\cf2\f2 aSpellCheck\tab\cf0\f0 Spell Check with dialog\par
\cf2\f2 aSpellSett\tab\cf0\f0 Spell Settings dialog\par
\cf2\f2 aStayOnTop\tab\cf0\f0 Stay on Top on/off\par
\cf2\f2 aSwapLineAbove\tab\cf0\f0 Swap line with line above (applicable to block)\par
\cf2\f2 aSwapLineBellow\tab\cf0\f0 Swap line with line bellow (applicable to block)\par
\cf2\f2 aSwapBlock\tab\cf0\f0 Swap lines in selected block\par
\cf2\f2 aSwitchLog\tab\cf0\f0 Jump to Editor / LOG\par
\cf2\f2 aSyntax\tab\cf0\f0 Syntax on/off\par
\cf2\f2 aSyntaxChange\tab\cf0\f0 Change Syntax dialog\par
\cf2\f2 aSysEdit\tab\cf0\f0 Open System Files (Autoexc, Config, ...)\par
\cf2\f2 aTabToSpaces\tab\cf0\f0 Convert Tabs to Spaces dialog\par
\cf2\f2 aTagToLowercase\tab\cf0\f0 Tags to Lowercase\par
\cf2\f2 aTagToUpperCase\tab\cf0\f0 Tags to Uppercase\par
\cf2\f2 aTextToHTML\tab\cf0\f0 Text to HTML\par
\cf2\f2 aToJScript\tab\cf0\f0 Selection to JavaScript\par
\cf2\f2 aToPHP\tab\cf0\f0 Selection to PHP variable\par
\cf2\f2 aUndo\tab\cf0\f0 Undo\par
\cf2\f2 aUnIndent\tab\cf0\f0 UnIndent Block\par
\cf2\f2 aUnQuote\tab\cf0\f0 Remove Email Quoting\par
\cf2\f2 aUpperCase\tab\cf0\f0 To Upper Case\par
\cf2\f2 aURLToANSI\tab\cf0\f0 Decode all text/selected text from URL adress form\par
\cf2\f2 aUserConvertors\tab\cf0\f0 User Convertors dialog\par
\cf2\f2 aWindCascade\tab\cf0\f0 Cascade windows\par
\cf2\f2 aWindSplitHoriz\tab\cf0\f0 Horizontal Split current file\par
\cf2\f2 aWindSplitVert\tab\cf0\f0 Vertical Split current file\par
\cf2\f2 aWindTile\tab\cf0\f0 Arrange windows\par
\cf2\f2 aWindTileHoriz\tab\cf0\f0 Tile windows Horizontal\par
\cf2\f2 aWindTileVert\tab\cf0\f0 Tile windows Vertical\par
\cf2\f2 aWordWrap\tab\cf0\f0 Word Wrap Lines on/off\par
\par
\par
\pard\nowidctlpar\b\fs24 sample vb script\par
\par
\cf3\b0\i\f2\fs20 ' it will create new editor window, copy all text from first window into new\par
' and save new file as C:\\SAMPLE.TXT\par
\cf5\b\i0 const \b0 module_name  = \cf4 "sample"         \cf3\i 'this name must be unique !!!\par
\cf5\b\i0 const \b0 module_desc  = \cf4 "Sample script"  \cf3\i 'script description\par
\cf5\b\i0 const \b0 module_ver   = \cf4 "0.001a"         \cf3\i 'version\par
\par
\cf5\b\i0 sub \b0 Main                              \cf3\i 'main procedure\par
  \cf5\b\i0 dim \b0 obj1, obj2, s                   \cf3\i 'variable definition\par
  \cf5\i0 pspadVersion\par
  \cf6 msgbox \cf4 "PSPad version : " \cf5 & pspadVersion()\par
  \cf6 msgbox \cf4 "Module version: " \cf5 & moduleVersion(\cf4 "sample"\cf5 )\par
  \b set \b0 obj1 = getNewEditor()           \cf3\i 'new editor object\par
  \cf5\b\i0 set \b0 obj2 = getNewEditor()           \cf3\i 'new editor object\par
  \cf5\i0 obj2.assignEditorByIndex(\cf2 0\cf5 )         \cf3\i 'assign PSPad window 1 to obj2\par
  \cf5\i0 obj1.NewFile()                      \cf3\i 'opens new file in PSPad and assign to obj2\par
  \cf5\i0 s = obj2.getText                    \cf3\i 'returns all text from window 1\par
  \cf5\i0 obj1.settext(s)                     \cf3\i 'replaces all text in new window\par
  ' here is presented access to editor lines line by line\par
  \cf5\b\i0 dim \b0 item\par
  \b for each \b0 item \b in \b0 obj1\par
    \cf6 MsgBox \cf5 item\par
  \b next\par
  \b0 obj1.saveFileAs(\cf4 "C:\\sample.txt"\cf5 )     \cf3\i 'save as new editor\par
  \cf5\i0 obj1.closeFile                       \cf3\i 'close copy file\par
\cf5\b\i0 end sub\par
\par
sub \b0 Demo1\par
  \cf6 msgbox \cf4 "You run Demo1 from sample script"\par
\cf5\b end sub\par
\par
sub \b0 Demo2\par
  \cf6 msgbox \cf4 "You run Demo2 from sample script"\par
\cf5\b end sub\par
\par
\cf3\b0\i ' name "Init" is required, its called automatically during initialization to create menu items\par
\cf5\b\i0 sub \b0 Init\par
  addMenuItem \cf4 "Main from Sample"\cf5 , \cf4 ""\cf5 , \cf4 "Main"\par
  \cf5 addMenuItem \cf4 "Demo1 from Sample"\cf5 ,\cf4 "Sample - submenu"\cf5 , \cf4 "Demo1" \par
  \cf5 addMenuItem \cf4 "Demo2 from Sample"\cf5 ,\cf4 "Sample - submenu"\cf5 , \cf4 "Demo2" \par
\cf5\b end sub\par
\cf3\b0\par
\par
\cf0\b\f0\fs24 sample n.2 - run user convertor to all open files\par
\par
\pard\cf2\lang1033\b0\f5\fs20 const\cf7  \cf5 module_name\cf7   \cf5 =\cf7  \cf4 "RunAction"\cf7          \cf3 'this name must be unique !!!\par
\cf2 const\cf7  \cf5 module_ver\cf7    \cf5 =\cf7  \cf4 "0.001"\cf7              \cf3 'version\par
\par
\cf2 sub\cf7  \cf5 Procedure\par
\cf7   \cf2 set\cf7  \cf5 obj\cf7  \cf5 =\cf7  \cf5 NewEditor()\par
\cf7   \cf2 for\cf7  \cf5 i\cf7  \cf5 =\cf7  \cf8 0\cf7  \cf2 to\cf7  \cf5 editorsCount\cf7  \cf5 -\cf7  \cf8 1\par
\cf7       \cf5 obj.assignEditorByIndex(i)\par
\cf7       \cf5 obj.activate\par
\cf7       \cf2 if\cf7  \cf5 i\cf7  \cf5 =\cf7  \cf8 0\cf7  \cf2 then\f6  \lang1029\f7  \cf3 'for first file we call user convertor selector\cf2\lang1033\f5\par
\cf7          \cf5 runPSPadAction\cf7  \cf4 "aUserConvertors"\par
\cf7       \cf2 else\f6  \lang1029\f7           \cf3 'for all other files we run last used convertor\cf2\lang1033\f5\par
\cf7          \cf5 runPSPadAction\cf7  \cf4 "aLastUserConvertor"\par
\cf7       \cf2 end\cf7  \cf2 if\par
\cf7   \cf2 next\cf7   \par
\cf2 end\cf7  \cf2 sub\par
\par
\cf3 ' name "Init" is required, its called automatically during initialization to create menu items\par
\cf2 sub\cf7  \cf5 Init\par
\cf7   \cf5 addMenuItem\cf7  \cf4 "Run action demo (convert all open files)"\cf5 ,\cf4 ""\cf5 ,\cf7  \cf4 "Procedure"\par
\cf2 end\cf7  \cf2 sub\par
\par
\pard\nowidctlpar\cf0\lang1029\b\f0\fs24\par
\cf3\b0\f2\fs20\par
}
 